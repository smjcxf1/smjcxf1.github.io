<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo浏览器定向推送文章更新</title>
      <link href="/posts/46ac7898.html"/>
      <url>/posts/46ac7898.html</url>
      
        <content type="html"><![CDATA[<p>查看本文<a href="https://www.yuque.com/ccknbc/blog/37/"><strong>语雀</strong></a>版本【首发】，自动同步更新至<a href="https://blog.ccknbc.cc/posts/hexo-webpushr-notification/"><strong>CC 的部落格</strong></a>！</p><p>两年前，我刚开始使用<code>Hexo</code>的时候，写了一篇文章<a href="https://blog.ccknbc.cc/posts/implementation-of-simple-browser-update-push/">简单浏览器更新推送的实现</a>，最近登录<a href="https://www.webpushr.com/">webpushr</a>控制台，发现其支持按话题<code>topic</code>指定推送了，而原来的插件一直没有更新，且对个人的写作习惯不是很友好，所以对原插件进行了修改，并发布到了<code>NPM</code></p><p>欢迎大家前往<a href="/sub">订阅页面</a>选择合适的订阅方式，关于邮件订阅，现已支持分类订阅</p><h2 id="安装">安装</h2><p>推荐使用 <code>npm</code> 以插件形式安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-webpushr-notification</span><br></pre></td></tr></table></figure><p>当然你也可以自定义修改<a href="https://github.com/Rock-Candy-Tea/hexo-webpushr-notification/blob/main/webpushr.js">webpushr.js</a>文件后，再安装相关需要依赖，然后将文件放到<code>Hexo/scripts/</code>目录下即可正常运行，CC 本人亦是如此</p><h2 id="使用">使用</h2><p>在你的 Hexo 根目录配置文件 <code>_config.yml</code>中添加如下内容，可按需配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">webpushr:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">webpushrKey:</span> <span class="string">&quot;webpushrKey&quot;</span></span><br><span class="line">  <span class="attr">webpushrAuthToken:</span> <span class="string">&quot;webpushrAuthToken&quot;</span></span><br><span class="line">  <span class="comment"># 出于安全考虑，建议将上述两个重要参数添加至系统全局环境变量，并删除或注释掉此处配置</span></span><br><span class="line">  <span class="comment"># 否则可在网页端向访问者或订阅用户发送推送 https://www.webpushr.com/api-playground</span></span><br><span class="line">  <span class="comment"># 例如GitHub Actions环境变量配置，参数名不变，密钥名自定义，可参考如下</span></span><br><span class="line">  <span class="comment"># env:</span></span><br><span class="line">  <span class="comment">#     webpushrKey: $&#123;&#123; secrets.WEBPUSHR_KEY &#125;&#125;</span></span><br><span class="line">  <span class="comment">#     webpushrAuthToken: $&#123;&#123; secrets.WEBPUSHR_AUTH_TOKEN &#125;&#125;</span></span><br><span class="line">  <span class="comment"># 如果您的仓库私有，则无需担心此问题</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">trackingCode:</span> <span class="string">&quot;BB9Y-w9p3u0CKA7UP9nupB6I-_NqE2MuODmKJjyC4W2YflX06Ff_hEhrNJfonrut5l6gCa28gC83q2OII7Qv-oA&quot;</span></span><br><span class="line">  <span class="attr">icon:</span> <span class="string">&quot;https://jsd.cdn.zzko.cn/gh/ccknbc-backup/cdn/image/pwa/192.png&quot;</span> <span class="comment"># 必须为192*192 png图片</span></span><br><span class="line">  <span class="comment"># auto_hide: &quot;0&quot; # 默认为 1，代表true，即自动隐藏</span></span><br><span class="line">  <span class="comment"># sort: &quot;date&quot; # 默认为updated，即只要最新文章更改了更新时间即推送新文章，改为date即文章第一次发布时间</span></span><br><span class="line">  <span class="comment"># delay: &quot;0&quot; # 延时推送，考虑到CDN缓存更新，默认定时为在 hexo d 10分钟后推送，单位为分钟（最短延时为5分钟，设置 0 则会立即推送）</span></span><br><span class="line">  <span class="comment"># expire: &quot;15d&quot; # 推送过期时长，默认值为7天，格式如下：&#x27;5m&#x27;代表5分钟,&#x27;5h&#x27;代表5小时, &#x27;5d&#x27;代表5天.</span></span><br><span class="line">  <span class="comment"># image: # 默认为文章封面，Front-matter 属性为&#x27;cover&#x27;(butterfly主题友好选项)，如果您没有定义默认封面或此属性，请在这里设置默认image</span></span><br><span class="line">  <span class="attr">action_buttons:</span> <span class="comment"># false # 默认两个按钮为 前往查看 ，您可在下方配置第二个按钮，或者设为 false 不显示按钮（因为隐藏按钮即为文章链接）</span></span><br><span class="line">    [&#123; <span class="attr">&quot;title&quot;:</span> <span class="string">&quot;订阅页面&quot;</span>, <span class="attr">&quot;url&quot;:</span> <span class="string">&quot;https://blog.ccknbc.cc/sub/&quot;</span> &#125;]</span><br><span class="line">  <span class="comment"># 以下配置为按订阅主题推送给不同订阅用户，请按照数组形式，一一对应，具体位置请看使用文档</span></span><br><span class="line">  <span class="attr">categories:</span> [<span class="string">工作</span>, <span class="string">博客</span>, <span class="string">工具</span>, <span class="string">生活</span>, <span class="string">音乐</span>, <span class="string">学习</span>]</span><br><span class="line">  <span class="attr">segment:</span> [<span class="string">&quot;484223&quot;</span>, <span class="string">&quot;484224&quot;</span>, <span class="string">&quot;484225&quot;</span>, <span class="string">&quot;484226&quot;</span>, <span class="string">&quot;484227&quot;</span>, <span class="string">&quot;484229&quot;</span>]</span><br><span class="line">  <span class="attr">endpoint:</span> <span class="string">segment</span> <span class="comment"># 可选配置 all / segment / sid</span></span><br><span class="line">  <span class="comment"># 默认为 segment，即根据不同主题推送细分，同时配置上述选项</span></span><br><span class="line">  <span class="comment"># 官方文档参数见 https://docs.webpushr.com/introduction-to-rest-api</span></span><br><span class="line">  <span class="comment"># 例如 all，即推送至所有用户；针对测试，可只推送给单个用户即自己，同时配置下方的 sid 选项</span></span><br><span class="line">  <span class="comment"># 您也可以将segment 设置为 all-users 对应的 segment，同样也可以实现推送至所有用户</span></span><br><span class="line">  <span class="attr">sid:</span> <span class="string">&quot;119810055&quot;</span> <span class="comment"># 单个用户ID 可在控制台查看 https://app.webpushr.com/subscribers，但建议您在测试完毕后注释此选项，以免打扰您</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment"># 此外，在文章 Frontmatter 处</span></span><br><span class="line">  <span class="comment"># 可覆盖auto_hide和expire配置，针对特别提醒文章可以设置不自动隐藏及过期时间延长等操作</span></span><br><span class="line">  <span class="comment"># 以及可指定schedule参数（例如：schedule: 2022-10-01 00:00:00），定时推送</span></span><br></pre></td></tr></table></figure><ol><li>前往 webpushr 控制台获取如下参数，注册的时候可能会遇到一点困难，中国大陆用户需要科学上网来加载验证服务）</li><li>关于注册及一些具体内容，可以看之前的文章 <a href="https://blog.ccknbc.cc/posts/implementation-of-simple-browser-update-push/">简单浏览器更新推送的实现</a></li><li>依次点击 <code>Integration</code> &gt; <code>REST API Keys</code>，即可看到你的<code>webpushrKey</code> 及 <code>webpushrAuthToken</code></li><li>依次点击 <code>Setup</code> &gt; <code>TrackingCode</code>，可以看到如下代码</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- start webpushr tracking code --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript">(<span class="keyword">function</span>(<span class="params">w,d, s, id</span>) &#123;<span class="keyword">if</span>(<span class="title function_">typeof</span>(w.<span class="property">webpushr</span>)!==<span class="string">&#x27;undefined&#x27;</span>) <span class="keyword">return</span>;w.<span class="property">webpushr</span>=w.<span class="property">webpushr</span>||<span class="keyword">function</span>(<span class="params"></span>)&#123;(w.<span class="property">webpushr</span>.<span class="property">q</span>=w.<span class="property">webpushr</span>.<span class="property">q</span>||[]).<span class="title function_">push</span>(<span class="variable language_">arguments</span>)&#125;;<span class="keyword">var</span> js, fjs = d.<span class="title function_">getElementsByTagName</span>(s)[<span class="number">0</span>];js = d.<span class="title function_">createElement</span>(s); js.<span class="property">id</span> = id;js.<span class="property">async</span>=<span class="number">1</span>;js.<span class="property">src</span> = <span class="string">&quot;https://cdn.webpushr.com/app.min.js&quot;</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">fjs.<span class="property">parentNode</span>.<span class="title function_">appendChild</span>(js);&#125;(<span class="variable language_">window</span>,<span class="variable language_">document</span>, <span class="string">&#x27;script&#x27;</span>, <span class="string">&#x27;webpushr-jssdk&#x27;</span>));</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="title function_">webpushr</span>(<span class="string">&#x27;setup&#x27;</span>,&#123;<span class="string">&#x27;key&#x27;</span>:<span class="string">&#x27;BKOlpbdgvBCWXqXI6PtsUzobY7TLV9gwJU8bzMktrwfrSERg_xnLvbjpdw8x2GmFmi1ZcLTz0ni6OnX5MAwoM58&#x27;</span> &#125;);</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;!-- end webpushr tracking code --&gt;</span><br></pre></td></tr></table></figure><p>最后一行<code>BKOlpbdgvBCWXqXI6PtsUzobY7TLV9gwJU8bzMktrwfrSERg_xnLvbjpdw8x2GmFmi1ZcLTz0ni6OnX5MAwoM58</code> 就是你的 <code>trackingCode</code></p><p><strong>注意</strong>：因权限问题，本地测试时(<code>hexo s</code>)可能不会显示弹窗，但如果你配置了小铃铛，小铃铛会显示</p><h2 id="额外配置">额外配置</h2><p>因官方 sw 脚本注册后，我们无法注册自己的 sw 脚本，但官方提供了配置，方便我们使用 sw 的缓存，拦截请求等功能，目前的 BUG 不影响使用，主要是会在非根目录页面请求不存在的 <code>/path/sw.js</code>文件，或者我该去问问 webpushr 官方怎么办，不修改官方 js 的情况下</p><p>首先在配置项中添加 <code>sw_self: true </code>配置，开启自行注册 sw（默认用户不用添加或者设为 <code>false</code>）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">webpushr:</span></span><br><span class="line">  <span class="attr">sw_self:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>另外，你还需要在你的脚本文件（例如<code>sw.js</code>）中引入</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">importScripts(&#x27;https://cdn.webpushr.com/sw-server.min.js&#x27;);</span></span><br></pre></td></tr></table></figure><p>完成这些你就可以自行注册你的<code>sw</code>脚本了，如果你需要了解如何编写或注册<code>service worker</code>脚本，可以参考以下文章或项目<br><a href="https://kmar.top/posts/73014407/">hexo-swpp</a><br><a href="https://blog.cyfan.top/p/c0af86bb.html">Service Worker</a><br><a href="https://clientworker.js.org/">clientworker</a><br><a href="https://github.com/GoogleChrome/workbox">Workbox</a></p><h2 id="自定义">自定义</h2><p>个人建议将控制台右上角小铃铛 🔔 里全部配置一遍以获得更好的效果</p><p>你需要自定义一些参数才可以使用根据不同主题，按照订阅者订阅话题推送功能（目前根据个人需求是这个设置，默认行为为当未匹配到对应分类时不推送文章，而不是向所有用户推送文章，当然你也可以配置目标为所有用户）</p><p>在控制台，点击<code>Setup</code>&gt;<code>Opt-In Prompt</code> ，向下滑动打开<code>Enable Topics</code>（小铃铛样式无此选项，因此推荐您使用前两种样式），并新增几个主题，对应你想推送的文章分类即可</p><p>然后点击<code>Users</code>&gt;<code>Segments</code> ，即可获取对应的<code>segment</code>关系，依次填入配置项即可</p><h2 id="工作原理">工作原理</h2><p>当你运行<code>hexo generate</code>插件会在<code>public</code> 目录生成 <code>newPost.json</code> 这样一个文件. <code>newPost.json</code> 包含了一些你想推送的新文章相关信息，示例格式如下</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Hexo浏览器定向推送文章更新&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;updated&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2023-02-20T13:59:00+08:00&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;这一次，CC的部落格可以根据读者订阅主题定向推送了，并且实现了NPM插件化&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;path&quot;</span><span class="punctuation">:</span> <span class="string">&quot;posts/hexo-webpushr-notification/&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;target_url&quot;</span><span class="punctuation">:</span> <span class="string">&quot;https://blog.ccknbc.cc/posts/hexo-webpushr-notification/&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;image&quot;</span><span class="punctuation">:</span> <span class="string">&quot;***.png&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;tags&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;博客&quot;</span><span class="punctuation">,</span> <span class="string">&quot;工具&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;categories&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;博客&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;schedule&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2023-03-05T11:23:23.340Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;expire&quot;</span><span class="punctuation">:</span> <span class="string">&quot;7d&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;auto_hide&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>而他的来源就是我们在文章开头<code>Front-Matter</code>自定义的那些属性，而本插件针对<code>Butterfly</code>主题做了针对性修改，您也可以在您的模板文件目录下修改文章模板文件(<code>Hexo/scaffolds/post.md</code>)，主要针对性参数如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">date:</span></span><br><span class="line"><span class="attr">updated:</span></span><br><span class="line"><span class="attr">schedule:</span> <span class="string">对应配置项中定时推送时间</span></span><br><span class="line"><span class="attr">auto_hide:</span> <span class="string">对应配置项中是否自动隐藏</span></span><br><span class="line"><span class="attr">expire:</span> <span class="string">对应配置项中过期时间</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">文章分类</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">对应配置项中message，即文章描述</span></span><br><span class="line"><span class="attr">cover:</span> <span class="string">对应配置项中image，默认选取文章封面</span></span><br></pre></td></tr></table></figure><p>如果你的主题不是采用默认的<code>date</code> <code>updated</code> 参数，记得补充，因为这是判断最新文章的依据</p><p>如果你习惯了使用截断的方式，也无需配置<code>description</code>继续使用，示例如下，注意<code>&lt;!-- more --&gt;</code></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo使用Web Push Notification 浏览器通知推送</span><br><span class="line">tags:</span><br><span class="line"><span class="bullet">  -</span> hexo</span><br><span class="line"><span class="bullet">  -</span> 服务器推送技术</span><br><span class="line"><span class="bullet">  -</span> push notifications</span><br><span class="line">categories:</span><br><span class="line"><span class="bullet">  -</span> 开发</span><br><span class="line">comments: true</span><br><span class="line">abbrlink: 98ae9e55</span><br><span class="line"><span class="section">date: 2020-02-26 10:00:00</span></span><br><span class="line"><span class="section">---</span></span><br><span class="line"></span><br><span class="line">Web Push Notification 是怎么工作的？个人博客为什么要使用它？如何使用它？</span><br><span class="line"></span><br><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure><p>当执行 <code>hexo deploy</code>命令时，插件会比较在线版本和本地版本<code>newPost.json</code>中最新文章更新时间是否一致，如果不同，则插件将推送最新文章更新通知（默认为十分钟后推送）</p><p><strong>注意</strong>：如果您是第一次使用本地测试应该看到</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  无文章更新 或 为首次推送更新</span><br></pre></td></tr></table></figure><p>这是正常现象，因为此时你的网站还没有<code>newPost.json</code>这个文件，后续有更新时将正常推送，你可以先推送一次，再修改更新时间测试一次，当然建议测试目标选择自己，即 sid 选项配置</p><p>当然如果您在使用过程中有什么问题或遇到了 Bug 也欢迎随时在评论区或<a href="https://github.com/Rock-Candy-Tea/hexo-webpushr-notification/issues">issues</a>反馈，当然因为本人是菜鸡，所以有大佬 PR 最好了</p><h2 id="推送效果">推送效果</h2><p>因为我是通知自动隐藏后才截图，所以大致效果如下所示<br><img src="https://cdn.nlark.com/yuque/0/2022/png/8391407/1664951686275-f37cb76d-34f6-40ed-94c6-9bed130d0605.png#averageHue=%23bec0b3&amp;clientId=ub7fa2e19-f596-4&amp;errorMessage=unknown%20error&amp;from=paste&amp;height=402&amp;id=u898a4c3c&amp;name=image.png&amp;originHeight=502&amp;originWidth=412&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=165943&amp;status=error&amp;style=none&amp;taskId=u3d6496ee-c850-4052-978a-8c49a9055ca&amp;title=&amp;width=329.6" alt="image.png"></p><h2 id="后续计划">后续计划</h2><ul><li>[x] 兼容自定义<code>Service Work</code>的功能，因为<code>webpushr-sw.js</code>优先注册的原因，只能有一个 <code>sw</code>注册，无法注册自己编写脚本。</li><li>[x] 支持参数更多的可自定义，启用或关闭。例如不延时，立即发送；不显示按钮（因为默认就是跳转到文章）等</li><li>[ ] 目前的判断逻辑，虽然可以根据更新时间来判断，但如果很久之前的文章翻新，只要更新时间最新，也会触发推送，主要针对 updated 方式，还没想到好的解决办法，目前就是确认需要推送才更改更新时间咯</li></ul>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法与外挂标签写法汇总</title>
      <link href="/posts/2013454d.html"/>
      <url>/posts/2013454d.html</url>
      
        <content type="html"><![CDATA[<h1>1.Markdown语法自带格式</h1><div class="note info flat"><p>参考：<a href="https://blog.csdn.net/u014061630/article/details/81359144">Markdown语法图文全面详解(10分钟学会)</a></p></div><div class="note warning flat"><p>注意：此页面偶尔会存在CSS冲突问题!</p></div><h2 id="1-1-代码块">1.1 代码块</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">\```shell</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br><span class="line">\```</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-2-多级标题">1.2 多级标题</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># H1</span></span><br><span class="line"><span class="section">## H2</span></span><br><span class="line"><span class="section">### H3</span></span><br><span class="line"><span class="section">#### H4</span></span><br><span class="line"><span class="section">##### H5</span></span><br><span class="line"><span class="section">###### H6</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>见本文章标题!</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-3-文字样式">1.3 文字样式</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线演示<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">文字<span class="strong">**加粗**</span>演示</span><br><span class="line"></span><br><span class="line">文字<span class="emphasis">*斜体*</span>演示</span><br><span class="line"></span><br><span class="line">文本<span class="code">`高亮`</span>演示</span><br><span class="line"></span><br><span class="line">文本~~删除~~线演示</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span> = <span class="string">5</span>&gt;</span></span>5号字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span>黑体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">blue</span>&gt;</span></span>蓝色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">MistyRose</span>&gt;</span></span>这里的背景色是：MistyRosen，此处输入任意想输入的内容<span class="language-xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p><u>下划线演示</u></p><p>文字<strong>加粗</strong>演示</p><p>文字<em>斜体</em>演示</p><p>文本<code>高亮</code>演示</p><p>文本<s>删除</s>线演示</p><p><font size = 5>5号字</font><br><font face="黑体">黑体</font><br><font color=blue>蓝色</font></p><table><tr><td bgcolor=MistyRose>这里的背景色是：MistyRosen，此处输入任意想输入的内容</td></tr></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="note info flat"><p>上述要点可参考:<a href="https://blog.csdn.net/qq_43732429/article/details/108034518">【Markdown语法】字体颜色大小及文字底色设置</a></p></div><h2 id="1-4-引用">1.4 引用</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt;  Java</span></span><br><span class="line"><span class="quote">&gt; 二级引用演示</span></span><br><span class="line"><span class="quote">&gt; MySQL</span></span><br><span class="line"><span class="quote">&gt; &gt;外键</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;事务</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;<span class="strong">**行级锁**</span>(引用内部一样可以用格式)</span></span><br><span class="line"><span class="quote">&gt; </span></span><br><span class="line"><span class="quote">&gt; ....</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><blockquote><p>Java<br>二级引用演示<br>MySQL</p><blockquote><p>外键</p><p>事务</p><p><strong>行级锁</strong>(引用内部一样可以用格式)</p></blockquote><p>…</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-5-分割线">1.5 分割线</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><hr><hr><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-6-列表-跟空格都可以">1.6 列表(*,+,-跟空格都可以)</h2><h3 id="1-6-1-无序列表">1.6.1 无序列表</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> Java</span><br><span class="line"><span class="bullet">*</span> Python</span><br><span class="line"><span class="bullet">*</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">+</span> Java</span><br><span class="line"><span class="bullet">+</span> Python</span><br><span class="line"><span class="bullet">+</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> Java</span><br><span class="line"><span class="bullet">-</span> Python</span><br><span class="line"><span class="bullet">-</span> ...</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="1-6-2-有序列表">1.6.2 有序列表</h3><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 注意后面有空格</span></span><br><span class="line"><span class="bullet">1.</span> </span><br><span class="line"><span class="bullet">2.</span> </span><br><span class="line"><span class="bullet">3.</span> </span><br><span class="line"><span class="bullet">4.</span> </span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li></li><li></li><li></li><li></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-7-图片">1.7 图片</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 本地图片</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/assets/pusheencode.webp&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;示例图片&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:50%;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="section"># 在线图片</span></span><br><span class="line">![<span class="string">code</span>](<span class="link">https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png</span>)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>本地图片:<br><img src="/assets/pusheencode.webp" alt="示例图片" style="zoom:50%;" /><br>在线图片:<br><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png" alt="code"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-8-表格">1.8 表格</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 项目标号 | 资金     | 备注 |</span><br><span class="line">| -------- | -------- | ---- |</span><br><span class="line">| 1        | 100，000 | 无   |</span><br><span class="line">| 2        | 200，000 | 无   |</span><br><span class="line">| 3        | 300,600  | 重要 |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><table><thead><tr><th>项目标号</th><th>资金</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>100，000</td><td>无</td></tr><tr><td>2</td><td>200，000</td><td>无</td></tr><tr><td>3</td><td>300,600</td><td>重要</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="1-9-公式">1.9 公式</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\Gamma(z)=\int<span class="emphasis">_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt.</span></span><br><span class="line"><span class="emphasis">$$</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>$$<br>\Gamma(z)=\int_0^\infty t^{z-1}e^{-t}dt.<br>$$</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1>2.Butterfly外挂标签</h1><div class="note info flat"><p>这部分参考安知鱼:<a href="https://anzhiy.cn/posts/7d58.html">基于Butterfly的外挂标签引入</a></p></div><h2 id="2-1-行内文本样式-text">2.1 行内文本样式 text</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% u 文本内容 %&#125;</span><br><span class="line">&#123;% emp 文本内容 %&#125;</span><br><span class="line">&#123;% wavy 文本内容 %&#125;</span><br><span class="line">&#123;% del 文本内容 %&#125;</span><br><span class="line">&#123;% kbd 文本内容 %&#125;</span><br><span class="line">&#123;% psw 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1.</span> 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line"><span class="bullet">2.</span> 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line"><span class="bullet">3.</span> 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line"><span class="bullet">4.</span> 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line"><span class="bullet">5.</span> 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line"><span class="bullet">6.</span> 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-2-行内文本-span">2.2 行内文本 span</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% span 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% span center logo large, Volantis %&#125;</span><br><span class="line">&#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<br><span class='p center logo large'>Volantis</span><br><span class='p center small'>A Wonderful Theme for Hexo</span></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-3-段落文本-p">2.3 段落文本 p</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% p 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% p red, 红色 %&#125;、&#123;% p yellow, 黄色 %&#125;、&#123;% p green, 绿色 %&#125;、&#123;% p cyan, 青色 %&#125;、&#123;% p blue, 蓝色 %&#125;、&#123;% p gray, 灰色 %&#125;。</span><br><span class="line"><span class="bullet">-</span> 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% p center logo large, Volantis %&#125;</span><br><span class="line">&#123;% p center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<p class='p red'>红色</p>、<p class='p yellow'>黄色</p>、<p class='p green'>绿色</p>、<p class='p cyan'>青色</p>、<p class='p blue'>蓝色</p>、<p class='p gray'>灰色</p>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。</li></ul><p class='p center logo large'>Volantis</p><p class='p center small'>A Wonderful Theme for Hexo</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-4-引用note">2.4 引用note</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">通用配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">语法格式</button></li><li class="tab"><button type="button" data-href="#分栏-3">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-4">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-5">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">note:</span><br><span class="line">  # Note tag style values:</span><br><span class="line">  #  - simple    bs-callout old alert style. Default.</span><br><span class="line">  #  - modern    bs-callout new (v2-v3) alert style.</span><br><span class="line">  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span><br><span class="line">  #  - disabled  disable all CSS styles import of note tag.</span><br><span class="line">  style: simple</span><br><span class="line">  icons: false</span><br><span class="line">  border<span class="emphasis">_radius: 3</span></span><br><span class="line"><span class="emphasis">  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span></span><br><span class="line"><span class="emphasis">  # Offset also applied to label tag variables. This option can work with disabled note tag.</span></span><br><span class="line"><span class="emphasis">  light_</span>bg<span class="emphasis">_offset: 0</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 自带icon</span></span><br><span class="line">&#123;% note [class] [no-icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"><span class="section"># 外部icon</span></span><br><span class="line">&#123;% note [color] [icon] [style] %&#125;</span><br><span class="line">Any content (support inline tags too.io).</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.自带icon</p><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / primary / success / info / warning / danger ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】不显示 icon</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table><p>2.外部icon</p><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / blue / pink / red / purple / orange / green ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】可配置自定义 icon (只支持 fontawesome 图标, 也可以配置 no-icon )</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note simple %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary simple %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success simple %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info simple %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning simple %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger simple %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>2.<code>modern</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note modern %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default modern %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary modern %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success modern %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info modern %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning modern %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger modern %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>3.<code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note flat %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default flat %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary flat %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success flat %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger flat %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>4.<code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note disabled %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default disabled %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary disabled %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success disabled %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info disabled %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning disabled %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger disabled %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>5.<code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default no-icon %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success no-icon %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info no-icon %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning no-icon %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger no-icon %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; simple %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; simple %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; simple%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; simple %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; simple %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>2.<code>modern</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; modern%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; modern %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; modern %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>3.<code>flat</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; flat %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; flat%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>4.<code>disabled</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; disabled %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; disabled %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; disabled %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; disabled %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; disabled %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>5.<code>no-icon</code>样式</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue no-icon %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink no-icon %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red no-icon %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple no-icon %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green no-icon %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-5"><details class="folding-tag" blue><summary> 1.自带icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note simple"><p>默认 提示块标签</p></div><div class="note default simple"><p>default 提示块标签</p></div><div class="note primary simple"><p>primary 提示块标签</p></div><div class="note success simple"><p>success 提示块标签</p></div><div class="note info simple"><p>info 提示块标签</p></div><div class="note warning simple"><p>warning 提示块标签</p></div><div class="note danger simple"><p>danger 提示块标签</p></div>2.`modern`样式<div class="note modern"><p>默认 提示块标签</p></div><div class="note default modern"><p>default 提示块标签</p></div><div class="note primary modern"><p>primary 提示块标签</p></div><div class="note success modern"><p>success 提示块标签</p></div><div class="note info modern"><p>info 提示块标签</p></div><div class="note warning modern"><p>warning 提示块标签</p></div><div class="note danger modern"><p>danger 提示块标签</p></div><p>3.<code>flat</code>样式</p><div class="note flat"><p>默认 提示块标签</p></div><div class="note default flat"><p>default 提示块标签</p></div><div class="note primary flat"><p>primary 提示块标签</p></div><div class="note success flat"><p>success 提示块标签</p></div><div class="note info flat"><p>info 提示块标签</p></div><div class="note warning flat"><p>warning 提示块标签</p></div><div class="note danger flat"><p>danger 提示块标签</p></div><p>4.<code>disabled</code>样式</p><div class="note disabled"><p>默认 提示块标签</p></div><div class="note default disabled"><p>default 提示块标签</p></div><div class="note primary disabled"><p>primary 提示块标签</p></div><div class="note success disabled"><p>success 提示块标签</p></div><div class="note info disabled"><p>info 提示块标签</p></div><div class="note warning disabled"><p>warning 提示块标签</p></div><div class="note danger disabled"><p>danger 提示块标签</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon flat"><p>默认 提示块标签</p></div><div class="note default no-icon flat"><p>default 提示块标签</p></div><div class="note primary no-icon flat"><p>primary 提示块标签</p></div><div class="note success no-icon flat"><p>success 提示块标签</p></div><div class="note info no-icon flat"><p>info 提示块标签</p></div><div class="note warning no-icon flat"><p>warning 提示块标签</p></div><div class="note danger no-icon flat"><p>danger 提示块标签</p></div>              </div>            </details><details class="folding-tag" blue><summary> 2.外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note icon-padding simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding simple"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding simple"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding simple"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>2.<code>modern</code>样式</p><div class="note icon-padding modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding modern"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>3.<code>flat</code>样式</p><div class="note icon-padding flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>4.<code>disabled</code>样式</p><div class="note icon-padding disabled"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding disabled"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了…</p></div><div class="note pink icon-padding disabled"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding disabled"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding disabled"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding disabled"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue no-icon flat"><p>2021年快到了…</p></div><div class="note pink no-icon flat"><p>小心开车 安全至上</p></div><div class="note red no-icon flat"><p>这是三片呢？还是四片？</p></div><div class="note orange no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple no-icon flat"><p>剪刀石头布</p></div><div class="note green no-icon flat"><p>前端最讨厌的浏览器</p></div>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-5-上标标签-tip">2.5 上标标签 tip</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>样式</code>: success,error,warning,bolt,ban,home,sync,cogs,key,bell</li><li><code>自定义图标</code>: 支持fontawesome。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip %&#125;default&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip info %&#125;info&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip error %&#125;error&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip warning %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bolt %&#125;bolt&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban %&#125;ban&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip home %&#125;home&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip sync %&#125;sync&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip cogs %&#125;cogs&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip key %&#125;key&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bell %&#125;bell&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip fa-atom %&#125;自定义font awesome图标&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="tip "><p>default</p></div><div class="tip info"><p>info</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义font awesome图标</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-6-动态标签-anima">2.6 动态标签 anima</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><div class="note info flat"><ol><li>将所需的CSS类添加到图标（或DOM中的任何元素）。</li><li>对于父级悬停样式，需要给目标元素添加指定CSS类，同时还要给目标元素的父级元素添加CSS类<code>faa-parent animated-hover</code>。（详情见示例及示例源码）<br>You can regulate the speed of the animation by adding the CSS class or . faa-fastfaa-slow</li><li>可以通过给目标元素添加CSS类<code>faa-fast</code>或<code>faa-slow</code>来控制动画快慢。</li></ol></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.On DOM load（当页面加载时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>2.调整动画速度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated faa-fast %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated faa-slow %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>3.On hover（当鼠标悬停时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated-hover %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated-hover %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>4.On parent hover（当鼠标悬停在父级元素时显示动画）</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-horizontal&quot;</span>&gt;</span></span>warning<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-parent animated-hover %&#125;<span class="language-xml"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;faa-flash&quot;</span>&gt;</span></span>ban<span class="language-xml"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span>&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.On DOM load（当页面加载时显示动画）</p><div class="tip warning faa-horizontal animated"><p>warning</p></div><div class="tip ban faa-flash animated"><p>ban</p></div>2.调整动画速度<div class="tip warning faa-horizontal animated faa-fast"><p>warning</p></div><div class="tip ban faa-flash animated faa-slow"><p>ban</p></div>3.On hover（当鼠标悬停时显示动画）<div class="tip warning faa-horizontal animated-hover"><p>warning</p></div><div class="tip ban faa-flash animated-hover"><p>ban</p></div>4.On parent hover（当鼠标悬停在父级元素时显示动画）<div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">warning</p></div><div class="tip ban faa-parent animated-hover"><p class="faa-flash">ban</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-7-复选列表-checkbox">2.7 复选列表 checkbox</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>样式</code>: plus, minus, times</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 纯文本测试 %&#125;</span><br><span class="line">&#123;% checkbox checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox plus green checked, 增加 %&#125;</span><br><span class="line">&#123;% checkbox minus yellow checked, 减少 %&#125;</span><br><span class="line">&#123;% checkbox times red checked, 叉 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-8-单选列表-radio">2.8 单选列表 radio</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 纯文本测试 %&#125;</span><br><span class="line">&#123;% radio checked, 支持简单的 [<span class="string">markdown</span>](<span class="link">https://guides.github.com/features/mastering-markdown/</span>) 语法 %&#125;</span><br><span class="line">&#123;% radio red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% radio green, 绿色 %&#125;</span><br><span class="line">&#123;% radio yellow, 黄色 %&#125;</span><br><span class="line">&#123;% radio cyan, 青色 %&#125;</span><br><span class="line">&#123;% radio blue, 蓝色 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class='checkbox'><input type="radio" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="radio" />            <p>支持自定义颜色</p>            </div><div class='checkbox green'><input type="radio" />            <p>绿色</p>            </div><div class='checkbox yellow'><input type="radio" />            <p>黄色</p>            </div><div class='checkbox cyan'><input type="radio" />            <p>青色</p>            </div><div class='checkbox blue'><input type="radio" />            <p>蓝色</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-9-时间轴-timeline">2.9 时间轴 timeline</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间线标题（可选）[,color] %&#125;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>title</code>:标题/时间线</li><li><code>color</code>:<code>timeline</code>颜色:default(留空) / blue / pink / red / purple / orange / green</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间轴样式,blue %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-07-24 [<span class="string">2.6.6 -&gt; 3.0</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 如果有 <span class="code">`hexo-lazyload-image`</span> 插件，需要删除并重新安装最新版本，设置 <span class="code">`lazyload.isSPA: true`</span>。</span><br><span class="line"><span class="bullet">2.</span> 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <span class="code">`use_cdn: true`</span> 则需要删除。</span><br><span class="line"><span class="bullet">3.</span> 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class="line"><span class="bullet">4.</span> 2.x 版本的置顶 <span class="code">`top: true`</span> 改为了 <span class="code">`pin: true`</span>，并且同样适用于 <span class="code">`layout: page`</span> 的页面。</span><br><span class="line"><span class="bullet">5.</span> 如果使用了 <span class="code">`hexo-offline`</span> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-05-15 [<span class="string">2.6.3 -&gt; 2.6.6</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6</span>) --&gt;</span><br><span class="line"></span><br><span class="line">不需要额外处理。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-04-20 [<span class="string">2.6.2 -&gt; 2.6.3</span>](<span class="link">https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3</span>) --&gt;</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 全局搜索 <span class="code">`seotitle`</span> 并替换为 <span class="code">`seo_title`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的索引规则有变，使用 group 组件的文章内，<span class="code">`group: group_name`</span> 对应的组件名必须是 <span class="code">`group_name`</span>。</span><br><span class="line"><span class="bullet">2.</span> group 组件的列表名优先显示文章的 <span class="code">`short_title`</span> 其次是 <span class="code">`title`</span>。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴样式</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-07-24 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases">2.6.6 -&gt; 3.0</a></p></div></div><div class='timeline-item-content'><ol><li>如果有 <code>hexo-lazyload-image</code> 插件，需要删除并重新安装最新版本，设置 <code>lazyload.isSPA: true</code>。</li><li>2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <code>use_cdn: true</code> 则需要删除。</li><li>2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</li><li>2.x 版本的置顶 <code>top: true</code> 改为了 <code>pin: true</code>，并且同样适用于 <code>layout: page</code> 的页面。</li><li>如果使用了 <code>hexo-offline</code> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-05-15 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6">2.6.3 -&gt; 2.6.6</a></p></div></div><div class='timeline-item-content'><p>不需要额外处理。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-04-20 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3">2.6.2 -&gt; 2.6.3</a></p></div></div><div class='timeline-item-content'><ol><li>全局搜索 <code>seotitle</code> 并替换为 <code>seo_title</code>。</li><li>group 组件的索引规则有变，使用 group 组件的文章内，<code>group: group_name</code> 对应的组件名必须是 <code>group_name</code>。</li><li>group 组件的列表名优先显示文章的 <code>short_title</code> 其次是 <code>title</code>。</li></ol></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-10-链接卡片-link">2.10 链接卡片 link</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 标题, 链接, 图片链接（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 糖果屋教程贴, https://akilar.top/posts/615e2dec/, https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="tag link"><a class="link-card" title="糖果屋教程贴" href="https://akilar.top/posts/615e2dec/"><div class="left"><img src="https://cdn.cbd.int/akilar-candyassets@1.0.36/image/siteicon/favicon.ico"/></div><div class="right"><p class="text">糖果屋教程贴</p><p class="url">https://akilar.top/posts/615e2dec/</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-11-按钮-btns">2.11 按钮 btns</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns 样式参数 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>圆角样式：rounded, circle</li><li>增加文字样式：可以在容器内增加 <code>&lt;b&gt;</code>标题<code>&lt;/b&gt;</code>和<code>&lt;p&gt;</code>描述文字<code>&lt;/p&gt;</code></li><li>布局方式：<br>默认为自动宽度，适合视野内只有一两个的情况。</li></ol><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>wide</td><td>宽一点的按钮</td></tr><tr><td>fill</td><td>填充布局，自动铺满至少一行，多了会换行</td></tr><tr><td>center</td><td>居中，按钮之间是固定间距</td></tr><tr><td>around</td><td>居中分散</td></tr><tr><td>grid2</td><td>等宽最多2列，屏幕变窄会适当减少列数</td></tr><tr><td>grid3</td><td>等宽最多3列，屏幕变窄会适当减少列数</td></tr><tr><td>grid4</td><td>等宽最多4列，屏幕变窄会适当减少列数</td></tr><tr><td>grid5</td><td>等宽最多5列，屏幕变窄会适当减少列数</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle grid5 %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% cell xaoxuu, https://xaoxuu.com, https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><p>2.或者含有图标的按钮</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns rounded grid5 %&#125;</span><br><span class="line">&#123;% cell 下载源码, /, fas fa-download %&#125;</span><br><span class="line">&#123;% cell 查看文档, /, fas fa-book-open %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><p>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns circle center grid5 %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p red, 专业版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&#x27;https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1&#x27;</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&#x27;fab fa-apple&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">b</span>&gt;</span></span>心率管家<span class="language-xml"><span class="tag">&lt;/<span class="name">b</span>&gt;</span></span></span><br><span class="line">  &#123;% p green, 免费版 %&#125;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.如果需要显示类似「团队成员」之类的一组含有头像的链接</p><div class="btns circle grid5">            <a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a><a class="button" href='https://xaoxuu.com' title='xaoxuu'><img src='https://cdn.jsdelivr.net/gh/xaoxuu/cdn-assets/avatar/avatar.png'>xaoxuu</a>          </div>2.或者含有图标的按钮<div class="btns rounded grid5">            <a class="button" href='/' title='下载源码'><i class='fas fa-download'></i>下载源码</a><a class="button" href='/' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div>3.圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中<div class="btns circle center grid5">            <a href='https://apps.apple.com/cn/app/heart-mate-pro-hrm-utility/id1463348922?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p red'>专业版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_pro.png'></a><a href='https://apps.apple.com/cn/app/heart-mate-lite-hrm-utility/id1475747930?ls=1'>  <i class='fab fa-apple'></i>  <b>心率管家</b>  <p class='p green'>免费版</p>  <img src='https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/qrcode/heartmate_lite.png'></a>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-12-github卡片-ghcard">2.12 github卡片 ghcard</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% ghcard 用户名, 其它参数（可选） %&#125;</span><br><span class="line">&#123;% ghcard 用户名/仓库, 其它参数（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><p>使用<code>,</code>分割各个参数。写法为：<code>参数名=参数值</code><br>以下只写几个常用参数值。</p><table><thead><tr><th><strong>参数名</strong></th><th>取值</th><th>释义</th></tr></thead><tbody><tr><td>hide</td><td>stars,commits,prs,issues,contribs</td><td>隐藏指定统计</td></tr><tr><td>count_private</td><td>true</td><td>将私人项目贡献添加到总提交计数中</td></tr><tr><td>show_icons</td><td>true</td><td>显示图标</td></tr><tr><td>theme</td><td>查阅:<a href="https://github.com/anuraghazra/github-readme-stats/blob/master/themes/README.md">Available Themes</a></td><td>主题</td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.用户信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard fomalhaut1998 %&#125; | &#123;% ghcard fomalhaut1998, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=buefy %&#125; | &#123;% ghcard fomalhaut1998, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=onedark %&#125; | &#123;% ghcard fomalhaut1998, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard fomalhaut1998, theme=algolia %&#125; | &#123;% ghcard fomalhaut1998, theme=calm %&#125; |</span><br></pre></td></tr></table></figure><p>2.仓库信息卡片</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=vue %&#125; |</span><br><span class="line">| -- | -- |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=buefy %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-light %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=onedark %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=solarized-dark %&#125; |</span><br><span class="line">| &#123;% ghcard volantis-x/hexo-theme-volantis, theme=algolia %&#125; | &#123;% ghcard volantis-x/hexo-theme-volantis, theme=calm %&#125; |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.用户信息卡片</p><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/fomalhaut1998"><img src="https://github-readme-stats.vercel.app/api/?username=fomalhaut1998&theme=calm&show_owner=true"/></a></td></tr></tbody></table><p>2.仓库信息卡片</p><table><thead><tr><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&show_owner=true"/></a></th><th><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=vue&show_owner=true"/></a></th></tr></thead><tbody><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=buefy&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-light&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=onedark&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=solarized-dark&show_owner=true"/></a></td></tr><tr><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=algolia&show_owner=true"/></a></td><td><a class="ghcard" rel="external nofollow noopener noreferrer" href="https://github.com/volantis-x/hexo-theme-volantis"><img src="https://github-readme-stats.vercel.app/api/pin/?username=volantis-x&repo=hexo-theme-volantis&theme=calm&show_owner=true"/></a></td></tr></tbody></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-13-github徽标-ghbdage">2.13 github徽标 ghbdage</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage [right],[left],[logo]||[color],[link],[title]||[option] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>left</code>：徽标左边的信息，必选参数。</li><li><code>right</code>: 徽标右边的信息，必选参数，</li><li><code>logo</code>：徽标图标，图标名称详见<a href="https://simpleicons.org/">simpleicons</a>，可选参数。</li><li><code>color</code>：徽标右边的颜色，可选参数。</li><li><code>link</code>：指向的链接，可选参数。</li><li><code>title</code>：徽标的额外信息，可选参数。主要用于优化SEO，但<code>object</code>标签不会像<code>a</code>标签一样在鼠标悬停显示<code>title</code>信息。</li><li><code>option</code>：自定义参数，支持<a href="https://shields.io/">shields.io</a>的全部API参数支持，具体参数可以参看上文中的拓展写法示例。形式为<code>name1=value2&amp;name2=value2</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.基本参数,定义徽标左右文字和图标</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Theme,Butterfly %&#125;</span><br><span class="line">&#123;% bdage Frame,Hexo,hexo %&#125;</span><br></pre></td></tr></table></figure><p>2.信息参数，定义徽标右侧内容背景色，指向链接</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage CDN,JsDelivr,jsDelivr||abcdef,https://metroui.org.ua/index.html,本站使用JsDelivr为静态资源提供CDN加速 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割</span><br><span class="line">&#123;% bdage Source,GitHub,GitHub||,https://github.com/ %&#125;</span><br></pre></td></tr></table></figure><p>3.拓展参数，支持shields的API的全部参数内容</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Hosted,Vercel,Vercel||brightgreen,https://vercel.com/,本站采用双线部署，默认线路托管于Vercel||style=social&amp;logoWidth=20 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割</span><br><span class="line">&#123;% bdage Hosted,Vercel,Vercel||||style=social&amp;logoWidth=20&amp;logoColor=violet %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.基本参数,定义徽标左右文字和图标</p><p><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Butterfly-Theme-orange?logo=&color=orange&link=&"></object><br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Hexo-Frame-orange?logo=hexo&color=orange&link=&"></object></p><p>2.信息参数，定义徽标右侧内容背景色，指向链接</p><p><object class="ghbdage" style="margin-inline:5px" title="本站使用JsDelivr为静态资源提供CDN加速" standby="loading..." data="https://img.shields.io/badge/JsDelivr-CDN-orange?logo=jsDelivr&color=abcdef&link=https://metroui.org.ua/index.html&"></object><br>//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割<br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&color=orange&link=https://github.com/&"></object></p><p>3.拓展参数，支持shields的API的全部参数内容</p><p><object class="ghbdage" style="margin-inline:5px" title="本站采用双线部署，默认线路托管于Vercel" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=brightgreen&link=https://vercel.com/&style=social&logoWidth=20"></object><br>//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割<br><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=orange&link=&style=social&logoWidth=20&logoColor=violet"></object></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-14-网站卡片-sites">2.14 网站卡片 sites</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site xaoxuu, url=https://xaoxuu.com, screenshot=https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg, avatar=https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png, description=简约风格 %&#125;</span><br><span class="line">&#123;% site inkss, url=https://inkss.cn, screenshot=https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg, avatar=https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site MHuiG, url=https://blog.mhuig.top, screenshot=https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png, avatar=https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Colsrch, url=https://colsrch.top, screenshot=https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png, avatar=https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% site Linhk1606, url=https://linhk1606.github.io, screenshot=https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png, avatar=https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png, description=这是一段关于这个网站的描述文字 %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="site-card-group"><a class="site-card" href="https://fomalhaut1998.com"><div class="img"><img src="https://i.loli.net/2020/08/21/VuSwWZ1xAeUHEBC.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/cdn-assets/avatar/avatar.png"/><span class="title">fomalhaut1998</span><span class="desc">简约风格</span></div></a><a class="site-card" href="https://inkss.cn"><div class="img"><img src="https://i.loli.net/2020/08/21/Vzbu3i8fXs6Nh5Y.jpg"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/inkss/common@master/static/web/avatar.jpg"/><span class="title">inkss</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://blog.mhuig.top"><div class="img"><img src="https://i.loli.net/2020/08/22/d24zpPlhLYWX6D1.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/MHuiG/imgbed@master/data/p.png"/><span class="title">MHuiG</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://colsrch.top"><div class="img"><img src="https://i.loli.net/2020/08/22/dFRWXm52OVu8qfK.png"/></div><div class="info"><img src="https://cdn.jsdelivr.net/gh/Colsrch/images/Colsrch/avatar.jpg"/><span class="title">Colsrch</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a><a class="site-card" href="https://linhk1606.github.io"><div class="img"><img src="https://i.loli.net/2020/08/21/3PmGLCKicnfow1x.png"/></div><div class="info"><img src="https://i.loli.net/2020/02/09/PN7I5RJfFtA93r2.png"/><span class="title">Linhk1606</span><span class="desc">这是一段关于这个网站的描述文字</span></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-15-行内图片-inlineimage">2.15 行内图片 inlineimage</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% inlineimage 图片链接, height=高度（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>高度</code>：height=20px</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif %&#125; 一段话。</span><br><span class="line"></span><br><span class="line">这又是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif, height=40px %&#125; 一段话。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>这是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif" style="height:1.5em"/> 一段话。</p><p>这又是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif" style="height:40px;"/> 一段话。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-16-单张图片-image">2.16 单张图片 image</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image 链接, width=宽度（可选）, height=高度（可选）, alt=描述（可选）, bg=占位颜色（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>图片宽度高度：width=300px, height=32px</li><li>图片描述：alt=图片描述（butterfly需要在主题配置文件中开启图片描述）</li><li>占位背景色：bg=#f2f2f2</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.添加描述：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><p>2.指定宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px %&#125;</span><br></pre></td></tr></table></figure><p>3.指定宽度并添加描述：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, alt=每天下课回宿舍的路，没有什么故事。 %&#125;</span><br></pre></td></tr></table></figure><p>4.设置占位背景色：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg, width=400px, bg=#1D0C04, alt=优化不同宽度浏览的观感 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.添加描述：</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div>2..指定宽度<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" style="width:400px;"/></div></div>3.指定宽度并添加描述：<div class="img-wrap"><div class="img-bg"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="每天下课回宿舍的路，没有什么故事。" style="width:400px;"/></div><span class="image-caption">每天下课回宿舍的路，没有什么故事。</span></div>4.设置占位背景色：<div class="img-wrap"><div class="img-bg" style="background:#1D0C04"><img class="img" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper-minimalist/2020/025.jpg" alt="优化不同宽度浏览的观感" style="width:400px;"/></div><span class="image-caption">优化不同宽度浏览的观感</span></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-17-音频-audio">2.17 音频 audio</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio 音频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class="audio"><audio controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/Lumia1020.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-18-视频-video">2.18 视频 video</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video 视频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>对齐方向</code>：left, center, right</li><li><code>列数</code>：逗号后面直接写列数，支持 1 ～ 4 列。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.100%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br></pre></td></tr></table></figure><p>2.50%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 2 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><p>3.25%宽度</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos, 4 %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG<span class="emphasis">_0341.mov %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_</span>0341.mov %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.100%宽度</p><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div>2.50%宽度<div class="videos" col='2'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div>3.25%宽度<div class="videos" col='4'><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-19-相册-gallery">2.19 相册 gallery</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>2.gallery 相册</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 圖片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ul><li>gallerygroup 相册图库</li></ul><table><thead><tr><th>参数名</th><th>释义</th></tr></thead><tbody><tr><td>name</td><td>图库名字</td></tr><tr><td>description</td><td>图库描述</td></tr><tr><td>link</td><td>链接到对应相册的地址</td></tr><tr><td>img-url</td><td>图库封面</td></tr></tbody></table><ul><li><p>gallery 相册</p><p>区别于旧版的Gallery相册,新的Gallery相册会自动根据图片长度进行排版，书写也更加方便，与markdown格式一样。可根据需要插入到相应的md。无需再自己配置长宽。<strong>建议在粘贴时故意使用长短、大小、横竖不一的图片</strong>，会有更好的效果。（尺寸完全相同的图片只会平铺输出，效果很糟糕）</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gallery-group-main&quot;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup MC 在Rikkaの六花服务器里留下的足迹 &#x27;/gallery/MC/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg %&#125;</span><br><span class="line">&#123;% galleryGroup Gundam 哦咧哇gundam哒！ &#x27;/gallery/Gundam/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png %&#125;</span><br><span class="line">&#123;% galleryGroup I-am-Akilar 某种意义上也算自拍吧 &#x27;/gallery/I-am-Akilar/&#x27; https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>2.gallery 相册</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg</span>)</span><br><span class="line">![](<span class="link">https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg</span>)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.gallerygroup 相册图库</p><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/1.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">MC</div>  <p>在Rikkaの六花服务器里留下的足迹</p>  <a href='/gallery/MC/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907110508327.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">Gundam</div>  <p>哦咧哇gundam哒！</p>  <a href='/gallery/Gundam/'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://cdn.cbd.int/akilar-candyassets@1.0.36/image/20200907113116651.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">I-am-Akilar</div>  <p>某种意义上也算自拍吧</p>  <a href='/gallery/I-am-Akilar/'></a>  </figcaption>  </figure></div>2.gallery 相册<div class="fj-gallery"><p><img src="https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg" alt=""><br><img src="https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg" alt=""></p>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-20-折叠框-folding">2.20 折叠框 folding</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><p>1.gallerygroup 相册图库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 参数（可选）, 标题 %&#125;</span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><!-- tab 参数配置 --><ol><li><p><code>颜色</code>：blue, cyan, green, yellow, red</p></li><li><p><code>状态</code>：状态填写 open 代表默认打开。</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 查看图片测试 %&#125;</span><br><span class="line"></span><br><span class="line">![](<span class="link">https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg</span>)</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;</span><br><span class="line"></span><br><span class="line">这是一个默认打开的折叠框。</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding green, 查看代码测试 %&#125;</span><br><span class="line">假装这里有代码块（代码块没法嵌套代码块）</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding yellow, 查看列表测试 %&#125;</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> haha</span><br><span class="line"><span class="bullet">-</span> hehe</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding red, 查看嵌套测试 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding blue, 查看嵌套测试2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding 查看嵌套测试3 %&#125;</span><br><span class="line"></span><br><span class="line">hahaha <span class="language-xml"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png&#x27;</span> <span class="attr">style</span>=<span class="string">&#x27;height:24px&#x27;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><details class="folding-tag" ><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg" alt=""></p>              </div>            </details><details class="folding-tag" cyan open><summary> 查看默认打开的折叠框 </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details class="folding-tag" green><summary> 查看代码测试 </summary>              <div class='content'>              <p>假装这里有代码块（代码块没法嵌套代码块）</p>              </div>            </details><details class="folding-tag" yellow><summary> 查看列表测试 </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details class="folding-tag" red><summary> 查看嵌套测试 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha <span><img src='https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/tieba/%E6%BB%91%E7%A8%BD.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-21-分栏-tab">2.21 分栏 tab</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">配置参数</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p>Unique name :</p><ul><li><p>选项卡块标签的唯一名称，不带逗号。</p></li><li><p>将在#id中用作每个标签及其索引号的前缀。</p></li><li><p>如果名称中包含空格，则对于生成#id，所有空格将由破折号代替。</p></li><li><p>仅当前帖子/页面的URL必须是唯一的！</p></li></ul></li><li><p>[index]:</p><ul><li><p>活动选项卡的索引号。</p></li><li><p>如果未指定，将选择第一个标签（1）。</p></li><li><p>如果index为-1，则不会选择任何选项卡。</p></li><li><p>可选参数。</p></li></ul></li><li><p>[Tab caption]:</p><ul><li><p>当前选项卡的标题。</p></li><li><p>如果未指定标题，则带有制表符索引后缀的唯一名称将用作制表符的标题。</p></li><li><p>如果未指定标题，但指定了图标，则标题将为空。</p></li><li><p>可选参数。</p></li></ul></li><li><p>[@icon]:</p><ul><li><p>FontAwesome图标名称（全名，看起来像“ fas fa-font”）</p></li><li><p>可以指定带空格或不带空格；</p></li><li><p>例如’Tab caption @icon’ 和 ‘Tab caption@icon’.</p></li><li><p>可选参数。</p></li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.Demo 1 - 预设选择第一个【默认】</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>2.Demo 2 - 预设选择tabs</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test2, 3 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>3.Demo 3 - 没有预设值</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test3, -1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line">&lt;!-- tab 第一个Tab --&gt;</span><br><span class="line"><span class="strong">**tab名字为第一个Tab**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line"><span class="strong">**只有图标 没有Tab名字**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span><br><span class="line"><span class="strong">**名字+icon**</span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.Demo 1 - 预设选择第一个【默认】</p><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>2.Demo 2 - 预设选择tabs</p><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab"><button type="button" data-href="#test2-2">test2 2</button></li><li class="tab active"><button type="button" data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>3.Demo 3 - 没有预设值</p><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">test3 1</button></li><li class="tab"><button type="button" data-href="#test3-2">test3 2</button></li><li class="tab"><button type="button" data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-22-诗词标签-poem">2.22 诗词标签 poem</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><ol><li><code>title</code>：诗词标题</li><li><code>author</code>：作者，可以不写</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% poem 水调歌头,苏轼 %&#125;</span><br><span class="line">丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</span><br><span class="line">明月几时有？把酒问青天。</span><br><span class="line">不知天上宫阙，今夕是何年？</span><br><span class="line">我欲乘风归去，又恐琼楼玉宇，高处不胜寒。</span><br><span class="line">起舞弄清影，何似在人间？</span><br><span class="line"></span><br><span class="line">转朱阁，低绮户，照无眠。</span><br><span class="line">不应有恨，何事长向别时圆？</span><br><span class="line">人有悲欢离合，月有阴晴圆缺，此事古难全。</span><br><span class="line">但愿人长久，千里共婵娟。</span><br><span class="line">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。<br>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？</p><p>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-23-阿里图标-icon">2.23 阿里图标 icon</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon [icon-xxxx],[font-size] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>icon-xxxx</code>：表示图标<code>font-class</code>,可以在自己的阿里矢量图标库项目的<code>font-class</code>引用方案内查询并复制。</li><li><code>font-size</code>：表示图标大小，直接填写数字即可，单位为<code>em</code>。图标大小默认值为<code>1em</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon icon-rat<span class="emphasis">_zi %&#125;&#123;% icon icon-rat,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-ox_</span>chou,3 %&#125;&#123;% icon icon-ox,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-tiger<span class="emphasis">_yin,5 %&#125;&#123;% icon icon-tiger,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rabbit_</span>mao,1 %&#125;&#123;% icon icon-rabbit,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dragon<span class="emphasis">_chen,3 %&#125;&#123;% icon icon-dragon,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-snake_</span>si,5 %&#125;&#123;% icon icon-snake,6 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-horse<span class="emphasis">_wu %&#125;&#123;% icon icon-horse,2 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-goat_</span>wei,3 %&#125;&#123;% icon icon-goat,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-monkey<span class="emphasis">_shen,5 %&#125;&#123;% icon icon-monkey,6 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-rooster_</span>you %&#125;&#123;% icon icon-rooster,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dog<span class="emphasis">_xu,3 %&#125;&#123;% icon icon-dog,4 %&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% icon icon-boar_</span>hai,5 %&#125;&#123;% icon icon-boar,6 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rat_zi"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rat"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-ox_chou"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-ox"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-tiger_yin"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-tiger"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rabbit_mao"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rabbit"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dragon_chen"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dragon"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-snake_si"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-snake"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-horse_wu"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-horse"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-goat_wei"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-goat"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-monkey_shen"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-monkey"></use></svg></p><p><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rooster_you"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rooster"></use></svg></p><p><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dog_xu"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dog"></use></svg></p><p><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-boar_hai"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-boar"></use></svg></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-24-特效标签wow">2.24 特效标签wow</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-2">渲染演示</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow [animete],[duration],[delay],[offset],[iteration] %&#125;</span><br><span class="line">内容</span><br><span class="line">&#123;% endwow %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>animate</code>: 动画样式，效果详见<a href="https://animate.style/">animate.css参考文档</a></li><li><code>duration</code>: 选填项，动画持续时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>delay</code>: 选填项，动画开始的延迟时间，单位可以是<code>ms</code>也可以是<code>s</code>。例如<code>3s</code>，<code>700ms</code>。</li><li><code>offset</code>: 选填项，开始动画的距离（相对浏览器底部）</li><li><code>iteration</code>: 选填项，动画重复的次数</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><p>1.flip动画效果。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><p>2.zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__zoomIn,5s,5s,100,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`zoomIn`动画效果，持续`5s`，延时`5s`，离底部`100`距离时启动，重复`10`次</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><p>3.slideInRight动画效果，持续5s，延时5s</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__slideInRight,5s,5s %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note orange &#x27;fas fa-car&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`slideInRight`动画效果，持续`5s`，延时`5s`。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><p>4.heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% wow animate<span class="strong">__heartBeat,,5s,,10 %&#125;</span></span><br><span class="line"><span class="strong">&#123;% note red &#x27;fas fa-battery-half&#x27; modern%&#125;</span></span><br><span class="line"><span class="strong">`heartBeat`动画效果，延时`5s`，重复`10`次。</span></span><br><span class="line"><span class="strong">&#123;% endnote %&#125;</span></span><br><span class="line"><span class="strong">&#123;% endwow %&#125;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>1.flip动画效果。</p><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div><p>2.zoomIn动画效果，持续5s，延时5s，离底部100距离时启动，重复10次</p><div class='wow animate__zoomIn' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset='100'  data-wow-iteration='10' ><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p><code>zoomIn</code>动画效果，持续<code>5s</code>，延时<code>5s</code>，离底部<code>100</code>距离时启动，重复<code>10</code>次</p></div></div><p>3.slideInRight动画效果，持续5s，延时5s</p><div class='wow animate__slideInRight' data-wow-duration='5s' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='' ><div class="note orange icon-padding modern"><i class="note-icon fas fa-car"></i><p><code>slideInRight</code>动画效果，持续<code>5s</code>，延时<code>5s</code>。</p></div></div><p>4.heartBeat动画效果，延时5s，重复10次。此处注意不用的参数位置要留空，用逗号间隔。</p><div class='wow animate__heartBeat' data-wow-duration='' data-wow-delay='5s' data-wow-offset=''  data-wow-iteration='10' ><div class="note red icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p><code>heartBeat</code>动画效果，延时<code>5s</code>，重复<code>10</code>次。</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-25-进度条-progress">2.25  进度条 progress</h2><div class="note info flat"><p>进度条标签参考<a href="https://rongbuqiu.com/jdt.html">沂佰孜猫-给HEXO文章添加彩色进度条</a>。<br>源样式提取自<a href="https://zwying0814.gitbook.io/cuteen/">Cuteen</a>主题。</p></div><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-2">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress [width] [color] [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>width</code>: 0到100的阿拉伯数字</li><li><code>color</code>: 颜色，取值有red,yellow,green,cyan,blue,gray</li><li><code>text</code>:进度条上的文字内容</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% progress 10 red 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 30 yellow 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 50 green 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 70 cyan 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 90 blue 进度条样式预览 %&#125;</span><br><span class="line">&#123;% progress 100 gray 进度条样式预览 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-red"  style="width: 10%" aria-valuenow="10" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-yellow"  style="width: 30%" aria-valuenow="30" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-green"  style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-cyan"  style="width: 70%" aria-valuenow="70" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-blue"  style="width: 90%" aria-valuenow="90" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-gray"  style="width: 100%" aria-valuenow="100" aria-valuemin="0" aria-valuemax="100"><p>进度条样式预览</p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-26-注释-notation">2.26 注释 notation</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota [label] , [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p><code>label</code>: 注释词汇</p></li><li><p><code>text</code>: 悬停显示的注解内容</p></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota 把鼠标移动到我上面试试 ,可以看到注解内容出现在顶栏 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p><span class='nota' data-nota='可以看到注解内容出现在顶栏'>把鼠标移动到我上面试试</span></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-27-气泡注释-bubble">2.27 气泡注释 bubble</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bubble [content] , [notation] ,[background-color] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>content</code>: 注释词汇</li><li><code>notation</code>: 悬停显示的注解内容</li><li><code>background-color</code>: 可选，气泡背景色。默认为“#71a4e3”</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的&#123;% bubble 兄弟相邻选择器,&quot;例如 h1 + p &#123;margin-top:50px;&#125;&quot; %&#125;，&#123;% bubble flex布局,&quot;Flex 是 Flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;,&quot;#ec5830&quot; %&#125;，&#123;% bubble transform变换,&quot;transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。&quot;,&quot;#1db675&quot; %&#125;，animation的&#123;% bubble 贝塞尔速度曲线,&quot;贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋&quot;,&quot;#de4489&quot; %&#125;写法，还有今天刚看到的&#123;% bubble clip-path,&quot;clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。&quot;,&quot;#868fd7&quot; %&#125;属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的<span class="bubble-content">兄弟相邻选择器</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#71a4e3;">例如 h1 + p {margin-top:50px;}</span></span>，<span class="bubble-content">flex布局</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#ec5830;">Flex 是 Flexible Box 的缩写，意为弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;</span></span>，<span class="bubble-content">transform变换</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#1db675;">transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。</span></span>，animation的<span class="bubble-content">贝塞尔速度曲线</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#de4489;">贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋</span></span>写法，还有今天刚看到的<span class="bubble-content">clip-path</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#868fd7;">clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。</span></span>属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-28-引用文献-reference">2.28 引用文献 reference</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% referto [id] , [literature] %&#125;</span><br><span class="line">&#123;% referfrom [id] , [literature] , [url] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><p>referto 引用上标</p><ul><li><p><code>id</code>: 上标序号内容，需与referfrom标签的id对应才能实现跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li></ul></li><li><p>referfrom 引用出处</p><ul><li><p><code>id</code>: 序号内容，需与referto标签的id对应才能实现 跳转</p></li><li><p><code>literature</code>: 引用的参考文献名称</p></li><li><p><code>url</code>: 引用的参考文献链接，可省略</p></li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Akilarの糖果屋(akilar.top)是一个私人性质的博客&#123;% referto &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27; %&#125;，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架&#123;% referto &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27; %&#125;，Butterfly主题&#123;% referto &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">本项目参考了Volantis&#123;% referto &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27; %&#125;的标签样式。引入<span class="code">`[tag].js`</span>，并针对<span class="code">`butterfly`</span>主题修改了相应的<span class="code">`[tag].styl`</span>。在此鸣谢<span class="code">`Volantis`</span>主题众开发者。</span><br><span class="line">主要参考内容包括各个volantis的内置标签插件文档&#123;% referto &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27; %&#125;</span><br><span class="line">Butterfly主题的各个衍生魔改&#123;% referto &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27; %&#125;&#123;% referto &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27; %&#125;&#123;% referto &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27; %&#125;&#123;% referto &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% referfrom &#x27;[1]&#x27;,&#x27;Akilarの糖果屋群聊简介&#x27;,&#x27;https://jq.qq.com/?<span class="emphasis">_wv=1027&amp;k=pGLB2C0N&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27;,&#x27;https://hexo.io/zh-cn/docs/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27;,&#x27;https://butterfly.js.org/posts/21cfbf15/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27;,&#x27;https://volantis.js.org/v5/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27;,&#x27;https://volantis.js.org/tag-plugins/&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27;,&#x27;https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27;,&#x27;https://lovelijunyi.gitee.io/posts/c898.html&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27;,&#x27;https://github.com/l-lin/font-awesome-animation&#x27; %&#125;</span></span><br><span class="line"><span class="emphasis">&#123;% referfrom &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27;,&#x27;https://www.antmoe.com/posts/3b43914f/&#x27; %&#125;</span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>Akilarの糖果屋(akilar.top)是一个私人性质的博客<span class="hidden-anchor" id="referto_[1]"></span><sup class="reference"><a href="#referfrom_[1]">[1]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Akilarの糖果屋群聊简介</span><span class="reference-title">参考资料</span></span></span>，从各类教程至生活点滴，无话不谈。建群的目的是提供一个闲聊的场所。博客采用Hexo框架<span class="hidden-anchor" id="referto_[2]"></span><sup class="reference"><a href="#referfrom_[2]">[2]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Hexo中文文档</span><span class="reference-title">参考资料</span></span></span>，Butterfly主题<span class="hidden-anchor" id="referto_[3]"></span><sup class="reference"><a href="#referfrom_[3]">[3]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档(一) 快速开始</span><span class="reference-title">参考资料</span></span></span></p><p>本项目参考了Volantis<span class="hidden-anchor" id="referto_[4]"></span><sup class="reference"><a href="#referfrom_[4]">[4]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">hexo-theme-volantis 标签插件</span><span class="reference-title">参考资料</span></span></span>的标签样式。引入<code>[tag].js</code>，并针对<code>butterfly</code>主题修改了相应的<code>[tag].styl</code>。在此鸣谢<code>Volantis</code>主题众开发者。<br>主要参考内容包括各个volantis的内置标签插件文档<span class="hidden-anchor" id="referto_[5]"></span><sup class="reference"><a href="#referfrom_[5]">[5]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Volantis文档:内置标签插件</span><span class="reference-title">参考资料</span></span></span><br>Butterfly主题的各个衍生魔改<span class="hidden-anchor" id="referto_[6]"></span><sup class="reference"><a href="#referfrom_[6]">[6]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档:标签外挂（Tag Plugins</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[7]"></span><sup class="reference"><a href="#referfrom_[7]">[7]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小弋の生活馆全样式预览</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[8]"></span><sup class="reference"><a href="#referfrom_[8]">[8]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">l-lin-font-awesome-animation</span><span class="reference-title">参考资料</span></span></span><span class="hidden-anchor" id="referto_[9]"></span><sup class="reference"><a href="#referfrom_[9]">[9]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小康的butterfly主题使用文档</span><span class="reference-title">参考资料</span></span></span></p><div class="reference-source"><span class="hidden-anchor" id="referfrom_[1]"></span><a class="reference-anchor" href="#referto_[1]">[1]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://jq.qq.com/?_wv=1027&k=pGLB2C0N">Akilarの糖果屋群聊简介</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[2]"></span><a class="reference-anchor" href="#referto_[2]">[2]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://hexo.io/zh-cn/docs/">Hexo中文文档</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[3]"></span><a class="reference-anchor" href="#referto_[3]">[3]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/21cfbf15/">Butterfly 安装文档(一) 快速开始</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[4]"></span><a class="reference-anchor" href="#referto_[4]">[4]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/v5/tag-plugins/">hexo-theme-volantis 标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[5]"></span><a class="reference-anchor" href="#referto_[5]">[5]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/tag-plugins/">Volantis文档:内置标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[6]"></span><a class="reference-anchor" href="#referto_[6]">[6]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">Butterfly 安装文档:标签外挂（Tag Plugins</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[7]"></span><a class="reference-anchor" href="#referto_[7]">[7]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://lovelijunyi.gitee.io/posts/c898.html">小弋の生活馆全样式预览</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[8]"></span><a class="reference-anchor" href="#referto_[8]">[8]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://github.com/l-lin/font-awesome-animation">l-lin-font-awesome-animation</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[9]"></span><a class="reference-anchor" href="#referto_[9]">[9]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://www.antmoe.com/posts/3b43914f/">小康的butterfly主题使用文档</a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-29-PDF展示">2.29 PDF展示</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf 文件路径 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li><code>文件路径</code>: 可以是相对路径或者是在线链接</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 1.本地文件:在md文件路径下创建一个同名文件夹，其内放pdf文件名为xxx.pdf的文件</span></span><br><span class="line">&#123;% pdf xxx.pdf %&#125;</span><br><span class="line"><span class="section"># 2.在线链接</span></span><br><span class="line">&#123;% pdf https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><p>2.在线链接(要放到最外层才能起作用)</p><pre><code>&lt;div class=&quot;row&quot;&gt;&lt;embed src=&quot;https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;&lt;/div&gt;</code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-30-Hexo-tag-map-插件">2.30 Hexo-tag-map 插件</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% + 标签值 + 经度 + 纬度 + 文本 + 缩放等级 + 宽 + 高 + 默认图层 + %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><table><thead><tr><th style="text-align:center">地图名</th><th style="text-align:center">标签值 &lt;必填&gt;</th><th style="text-align:center">宽 (默认 100%) / 高 (默认 360px)</th><th style="text-align:center">缩放等级 (默认 14)</th><th style="text-align:center">宽 (默认 100%) / 高 (默认 360px)</th><th style="text-align:center">默认图层 (默认 1)</th></tr></thead><tbody><tr><td style="text-align:center">混合地图</td><td style="text-align:center">map</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 3~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~7</td></tr><tr><td style="text-align:center">谷歌地图</td><td style="text-align:center">googleMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~20</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~3</td></tr><tr><td style="text-align:center">高德地图</td><td style="text-align:center">gaodeMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 3~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~3</td></tr><tr><td style="text-align:center">百度地图</td><td style="text-align:center">baiduMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 4~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~2</td></tr><tr><td style="text-align:center">Geoq 地图</td><td style="text-align:center">geoqMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~5</td></tr><tr><td style="text-align:center">openstreet 地图</td><td style="text-align:center">openstreetMap</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">取值 1~18</td><td style="text-align:center">百分数或具体值 (100% 或 360px)</td><td style="text-align:center">不支持此参数</td></tr></tbody></table><ol><li>参数之间，用英文逗号相隔</li><li>参数必须按上述事例顺序输入，不得为空</li><li>同一个页面，同一组经纬度值，只能插入一个相同标签值的地图 (若有需要，可以将第二个地图上，经度或纬度末尾删除一两个数)</li><li>参数取值必须在上述范围内</li><li>默认图层：即地图叠加层的值，默认常规地图还是卫星地图，可按地图显示顺序取值</li><li>缩放等级，数字越大，地图比例尺越小，显示的越精细</li><li>除标签值外，其他参数选填，但 每个参数的左边的参数必填</li><li>谷歌地图需要外网才能加载查看</li></ol><p>坐标获取：<a href="https://lbs.amap.com/tools/picker">高德地图坐标拾取系统</a> 、<a href="https://api.map.baidu.com/lbsapi/getpoint/index.html">百度地图坐标拾取系统</a></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% map 120.101101,30.239119 %&#125;</span><br><span class="line">&#123;% googleMap 120.101101,30.239119, 这里是西湖灵隐寺，据说求姻缘很灵验哦！ %&#125;</span><br><span class="line">&#123;% geoqMap 120.101101,30.239119, 这里是西湖灵隐寺，据说求姻缘很灵验哦！, 13, 90%, 320px, 3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div class="map-box"><div id="map-120.101101-30.239119" style="max-width:100%; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div></div><script type="text/javascript">var normalm=L.tileLayer.chinaProvider('GaoDe.Normal.Map',{maxZoom:20,minZoom:1,attribution:'Amap'});var imgm=L.tileLayer.chinaProvider('GaoDe.Satellite.Map',{maxZoom:20,minZoom:1,attribution:'Amap'});var imga=L.tileLayer.chinaProvider('GaoDe.Satellite.Annotion',{maxZoom:20,minZoom:1,attribution:'Amap'});var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:20,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'});routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:21,minZoom:1});var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:21,minZoom:1,attribution:'Google Maps'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:21,minZoom:1,attribution:'Google Maps'});var normalm1=L.tileLayer.chinaProvider('Geoq.Normal.Map',{maxZoom:21,minZoom:1,attribution:'GeoQ'});var normal=L.layerGroup([normalm]),image=L.layerGroup([imgm,imga]);var baseLayers={"高德地图":normal,"智图地图":normalm1,"谷歌地图":normalMap,"高德卫星地图":imgm,"谷歌卫星地图":satelliteMap,"高德卫星标注":image,"谷歌卫星标注":routeMap};var mymap=L.map('map-120.101101-30.239119',{center:[30.239119,120.101101],zoom:14,layers:[normal],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);</script><br><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div id="googleMap-120.101101-30.239119" style="max-width:100%; height:360px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div><script type="text/javascript">var normalMap=L.tileLayer.chinaProvider('Google.Normal.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),satelliteMap=L.tileLayer.chinaProvider('Google.Satellite.Map',{maxZoom:22,minZoom:1,attribution:'Google Maps'}),routeMap=L.tileLayer.chinaProvider('Google.Satellite.Annotion',{maxZoom:22,minZoom:1,attribution:'Google Maps'});var baseLayers={"谷歌地图":normalMap,"谷歌卫星图":satelliteMap,"谷歌卫星标注": routeMap};var overlayLayers={};var mymap=L.map("googleMap-120.101101-30.239119",{center:[30.239119,120.101101],zoom:14,layers:[normalMap],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['30.239119','120.101101']).addTo(mymap);marker.bindPopup("这里是西湖灵隐寺，据说求姻缘很灵验哦！").openPopup();</script><br><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet@1.7.1.css"><script data-pjax src="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet@1.7.1.js"></script><script data-pjax src="https://cdn.jsdelivr.net/npm/hexo-tag-map/lib/leaflet.ChineseTmsProviders@1.0.4.js"></script><div id="geoqMap-120.101101-30.239119" style="max-width:90%; height:320px;display: block;margin:0 auto;z-index:1;border-radius: 5px;"></div><script type="text/javascript">var normalm1=L.tileLayer.chinaProvider('Geoq.Normal.Map',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm2=L.tileLayer.chinaProvider('Geoq.Normal.PurplishBlue',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm3=L.tileLayer.chinaProvider('Geoq.Normal.Gray',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm4=L.tileLayer.chinaProvider('Geoq.Normal.Warm',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normalm5=L.tileLayer.chinaProvider('Geoq.Theme.Hydro',{maxZoom:20,minZoom:1,attribution:'GeoQ'});var normal=L.layerGroup([normalm1,normalm2,normalm3,normalm4,normalm5]);var baseLayers={"智图地图":normalm1,"午夜蓝":normalm2,"灰色":normalm3,"暖色":normalm4,"水系":normalm5};var mymap=L.map("geoqMap-120.101101-30.239119",{center:[30.239119,120.101101],zoom:13,layers:[normalm3],zoomControl:false});L.control.layers(baseLayers,null).addTo(mymap);L.control.zoom({zoomInTitle:'放大',zoomOutTitle:'缩小'}).addTo(mymap);var marker = L.marker(['30.239119','120.101101']).addTo(mymap);marker.bindPopup("这里是西湖灵隐寺，据说求姻缘很灵验哦！").openPopup();</script><br><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="2-31-隐藏块">2.31 隐藏块</h2><div class="tabs" id="分栏"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#分栏-1">标签语法</button></li><li class="tab"><button type="button" data-href="#分栏-2">参数配置</button></li><li class="tab"><button type="button" data-href="#分栏-3">示例源码</button></li><li class="tab"><button type="button" data-href="#分栏-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="分栏-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-2"><ol><li>content：要隐藏的内容</li><li>display：展示前按钮显示的文字（可选）</li><li>bg：按钮的背景颜色（可选）</li><li>color：按钮显示的文字的颜色（可选）</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-3"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock 点我预览, blue %&#125;</span><br><span class="line">这里有张图片：</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://s1.vika.cn/space/2022/10/30/b35fce448bc9404a8d65c3ce1e6e46eb&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;image (1)&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:67%;&quot;</span> /&gt;</span></span></span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="分栏-4"><div class="hide-block"><button type="button" class="hide-button" style="background-color:  blue;">点我预览    </button><div class="hide-content"><p>这里有张图片：<br><img src="https://s1.vika.cn/space/2022/10/30/b35fce448bc9404a8d65c3ce1e6e46eb" alt="image (1)" style="zoom:67%;" /></p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 演示 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> 外挂标签 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript ES(6-11)全版本语法</title>
      <link href="/posts/3dee90a5.html"/>
      <url>/posts/3dee90a5.html</url>
      
        <content type="html"><![CDATA[<p>慕课链接：<a href="https://coding.imooc.com/class/444.html">https://coding.imooc.com/class/444.html</a></p><p>继续系统加固前端知识，我发现先看文档，视频辅助效率最高；Fighting</p><p>电子书网址：<a href="http://es.xiecheng.live">http://es.xiecheng.live</a></p><p>Babel 编译器：<a href="https://www.babeljs.cn/">https://www.babeljs.cn/</a></p><p>为什么我要写这个笔记？ 万一哪天域名失效了呢，是吧，当个文档字典来查吧</p><h2 id="ECMAScript2015">ECMAScript2015</h2><h3 id="新的声明方式：let">新的声明方式：let</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1. 不属于顶层对应window 弥补了var的全局污染问题</span></span><br><span class="line"><span class="keyword">let</span> a = <span class="number">5</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">window</span>.<span class="property">a</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2.不允许重复声明</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 不存在变量提升</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a)</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">5</span> <span class="comment">// 使用var会在下面</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 4. 暂时性死区</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">5</span></span><br><span class="line"><span class="keyword">if</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">    a = <span class="number">6</span></span><br><span class="line">    <span class="keyword">let</span> a</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 5. 块级作用域</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;循环内:&#x27;</span> + i)</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;循环外:&#x27;</span> + i) <span class="comment">//出不来了</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 闭包</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">    (<span class="keyword">function</span>(<span class="params">j</span>)&#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(j)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)(i)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 是相同的效果</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(i)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="新的声明方式：const">新的声明方式：const</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义一个常量其余与let相似</span></span><br><span class="line"><span class="comment">// 不变的是内存地址</span></span><br><span class="line"><span class="keyword">const</span> a = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 只能浅层冻结</span></span><br><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;xiecheng&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">34</span>,</span><br><span class="line">    <span class="attr">skill</span>: &#123;</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;code&#x27;</span>,</span><br><span class="line">        <span class="attr">year</span>: <span class="number">11</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">freeze</span>(obj)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj)</span><br><span class="line">obj.<span class="property">school</span> = <span class="string">&#x27;imooc&#x27;</span></span><br><span class="line">obj.<span class="property">skill</span>.<span class="property">year</span> = <span class="number">12</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj)</span><br></pre></td></tr></table></figure><h3 id="解构赋值">解构赋值</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 左边右边能够对应就好了</span></span><br><span class="line"><span class="keyword">let</span> [a, b, [c, d]] = [<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, <span class="number">4</span>]]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a, b, c, d)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> [a, b, [c]] = [<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, <span class="number">4</span>]]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a, b, c) <span class="comment">// c = 3</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> [a, b, c] = [<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, <span class="number">4</span>]]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a, b, c) <span class="comment">// c = [3, 4]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> [a, b, c, d = <span class="number">5</span>] = [<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, <span class="number">4</span>], <span class="number">6</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a, b, c, d) <span class="comment">// d = 6 惰性的</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params">[a, b, c]</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a, b, c)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="title function_">foo</span>(arr)</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> json = <span class="string">&#x27;&#123;&quot;a&quot;: &quot;hello&quot;, &quot;b&quot;: &quot;world&quot;&#125;&#x27;</span></span><br><span class="line"><span class="keyword">let</span> &#123;a, b&#125;= <span class="title class_">JSON</span>.<span class="title function_">parse</span>(json)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a, b)</span><br></pre></td></tr></table></figure><h3 id="数组相关">数组相关</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// forEach 不支持break和continue</span></span><br><span class="line">arr.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">elem, index, array</span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(elem, index)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// map 回调处理、原来不变</span></span><br><span class="line"><span class="keyword">let</span> result = arr.<span class="title function_">map</span>(<span class="keyword">function</span>(<span class="params">value</span>)&#123;</span><br><span class="line">    value += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> value</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr, result)</span><br><span class="line"></span><br><span class="line"><span class="comment">// filter 找到符合的然后组成新的</span></span><br><span class="line"><span class="keyword">let</span> result = arr.<span class="title function_">filter</span>(<span class="keyword">function</span> (<span class="params">value</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> value == <span class="number">2</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr, result)</span><br><span class="line"></span><br><span class="line"><span class="comment">// some 存在符合条件的结果返回true</span></span><br><span class="line"><span class="keyword">let</span> result = arr.<span class="title function_">some</span>(<span class="keyword">function</span> (<span class="params">value</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> value == <span class="number">4</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr, result)</span><br><span class="line"></span><br><span class="line"><span class="comment">// every 是否都符合</span></span><br><span class="line"><span class="keyword">let</span> result = arr.<span class="title function_">every</span>(<span class="keyword">function</span>(<span class="params">value</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> value == <span class="number">2</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr, result)</span><br><span class="line"></span><br><span class="line"><span class="comment">// reduce</span></span><br><span class="line"><span class="keyword">let</span> sum = arr.<span class="title function_">reduce</span>(<span class="keyword">function</span>(<span class="params">prev, cur, index, array</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> prev + cur</span><br><span class="line">&#125;, <span class="number">0</span>) <span class="comment">// 0 就是初始值</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(sum)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历 for...of是支持 break、continue、return的</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> val <span class="keyword">of</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(val);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ----------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// from形成数组</span></span><br><span class="line"><span class="keyword">let</span> imgs = <span class="title class_">Array</span>.<span class="title function_">from</span>(<span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;img&#x27;</span>)); <span class="comment">// 来形成数组形式</span></span><br><span class="line"><span class="title class_">Array</span>.<span class="title function_">from</span>(&#123;</span><br><span class="line">    <span class="attr">length</span>: <span class="number">5</span></span><br><span class="line">&#125;, <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">&#125;) <span class="comment">// 来形成[1,1,1,1,1]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// fill fill(换成哪个, 从第几个开始，到第几个结束(不包括))</span></span><br><span class="line"><span class="keyword">let</span> array = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line">array.<span class="title function_">fill</span>(<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line"><span class="comment">// [1,0,3,4]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// find</span></span><br><span class="line"><span class="keyword">let</span> array = [<span class="number">5</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">130</span>, <span class="number">44</span>];</span><br><span class="line"><span class="keyword">let</span> found = array.<span class="title function_">find</span>(<span class="keyword">function</span>(<span class="params">element</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> element &gt; <span class="number">10</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(found);</span><br><span class="line"></span><br><span class="line"><span class="comment">// findIndex 找不到为-1</span></span><br><span class="line"><span class="keyword">let</span> array = [<span class="number">5</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">130</span>, <span class="number">44</span>];</span><br><span class="line"><span class="keyword">let</span> found = array.<span class="title function_">find</span>(<span class="keyword">function</span>(<span class="params">element</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> element &gt; <span class="number">10</span>;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(found);</span><br><span class="line"></span><br><span class="line"><span class="comment">// copyWithin 会修改当前数组</span></span><br><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">copyWithin</span>(<span class="number">1</span>, <span class="number">3</span>)) <span class="comment">// [1, 4, 5, 4, 5]</span></span><br></pre></td></tr></table></figure><h3 id="函数相关">函数相关</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 可设置默认值</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params">x, y = <span class="string">&#x27;world&#x27;</span></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(x, y)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">foo</span>(<span class="string">&#x27;hello&#x27;</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断函数有几个参数 Function.length 是统计第一个默认参数前面的变量数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params">a, b = <span class="number">1</span>, c</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(foo.<span class="property">length</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">foo</span>(<span class="string">&#x27;a&#x27;</span>, <span class="string">&#x27;b&#x27;</span>) <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 不是很确定参数有多少个 Rest Parameter 是数组</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sum</span>(<span class="params">...nums</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> num = <span class="number">0</span></span><br><span class="line">    nums.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">item</span>) &#123;</span><br><span class="line">        num += item * <span class="number">1</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">return</span> num</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Spread Operator 是把固定的数组内容“打散”到对应的参数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sum</span>(<span class="params">x = <span class="number">1</span>, y = <span class="number">2</span>, z = <span class="number">3</span></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> x + y + z</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">sum</span>(...[<span class="number">4</span>])) <span class="comment">// 9</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回没有指定默认值的参数个</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params">x = <span class="number">1</span>, y = <span class="number">2</span>, z = <span class="number">3</span></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(x, y)</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(foo.<span class="property">length</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 匿名函数</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">hello</span> = (<span class="params">name</span>) =&gt; &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;say hello&#x27;</span>, name)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 如果返回值是字面量对象，一定要用小括号包起来</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">person</span> = (<span class="params">name</span>) =&gt; (&#123;</span><br><span class="line">      <span class="attr">age</span>: <span class="number">20</span>,</span><br><span class="line">      <span class="attr">addr</span>: <span class="string">&#x27;Beijing City&#x27;</span></span><br><span class="line"> &#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 箭头函数中的this</span></span><br><span class="line"><span class="keyword">let</span> foo = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;es&#x27;</span>,</span><br><span class="line">    <span class="attr">say</span>: <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="comment">// this 指向的是调用 say 方法的对象</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(foo.<span class="title function_">say</span>()) <span class="comment">// es</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> foo = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;es&#x27;</span>,</span><br><span class="line">    <span class="attr">say</span>: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>, <span class="variable language_">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="comment">// this 的指向也就是 foo 外层的所指向的 window</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(foo.<span class="title function_">say</span>()) <span class="comment">// undefined</span></span><br></pre></td></tr></table></figure><h3 id="对象相关">对象相关</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Object.is() 判断两个对象是否相等</span></span><br><span class="line"><span class="keyword">let</span> obj1 = &#123; <span class="comment">// new Object()</span></span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;xiecheng&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">34</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> obj2 = &#123; <span class="comment">// new Object()</span></span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;xiecheng&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">34</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(obj1 == obj2) <span class="comment">// false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="title function_">is</span>(obj1, obj2)) <span class="comment">// false</span></span><br><span class="line"><span class="keyword">let</span> obj2 = obj1 <span class="comment">// 即使值相同但是地址不同</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="title function_">is</span>(obj1, obj2)) <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Object.assign(target, ...sources)</span></span><br><span class="line"><span class="keyword">const</span> target = &#123;</span><br><span class="line">    <span class="attr">a</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">b</span>: <span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> source = &#123;</span><br><span class="line">    <span class="attr">b</span>: <span class="number">4</span>,</span><br><span class="line">    <span class="attr">c</span>: <span class="number">5</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> returnedTarget = <span class="title class_">Object</span>.<span class="title function_">assign</span>(target, source)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(target) <span class="comment">//  Object &#123; a: 1, b: 4, c: 5 &#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(returnedTarget) <span class="comment">// Object &#123; a: 1, b: 4, c: 5 &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 对象的遍历方式</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> obj) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(key, obj[key])</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">keys</span>(obj).<span class="title function_">forEach</span>(<span class="function"><span class="params">key</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(key, obj[key])</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="Class相关">Class相关</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">type</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">type</span> = type</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">walk</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>( <span class="string">`I am walking`</span> )</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> dog = <span class="keyword">new</span> <span class="title class_">Animal</span>(<span class="string">&#x27;dog&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> monkey = <span class="keyword">new</span> <span class="title class_">Animal</span>(<span class="string">&#x27;monkey&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(dog.<span class="title function_">hasOwnProperty</span>(<span class="string">&#x27;type&#x27;</span>)) <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// set/get</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">type, age</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">type</span> = type</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_age</span> = age</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">get</span> <span class="title function_">age</span>() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">_age</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">set</span> <span class="title function_">age</span>(<span class="params">val</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">_age</span> = val</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 静态方法</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">type</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">type</span> = type</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">walk</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>( <span class="string">`I am walking`</span> )</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">eat</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>( <span class="string">`I am eating`</span> )</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 继承（原）</span></span><br><span class="line"><span class="keyword">let</span> <span class="title class_">Dog</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123; <span class="comment">// 定义子类</span></span><br><span class="line">    <span class="comment">// 初始化父类 </span></span><br><span class="line">    <span class="title class_">Animal</span>.<span class="title function_">call</span>(<span class="variable language_">this</span>, <span class="string">&#x27;dog&#x27;</span>)</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">run</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;I can run&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Dog</span>.<span class="property"><span class="keyword">prototype</span></span> = <span class="title class_">Animal</span>.<span class="property"><span class="keyword">prototype</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 继承（现）</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Animal</span> &#123;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">type</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">type</span> = type</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">walk</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>( <span class="string">`I am walking`</span> )</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="title function_">eat</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>( <span class="string">`I am eating`</span> )</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span> <span class="keyword">extends</span> <span class="title class_ inherited__">Animal</span> &#123;</span><br><span class="line">  <span class="title function_">constructor</span> () &#123;</span><br><span class="line">    <span class="variable language_">super</span>(<span class="string">&#x27;dog&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  run () &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;I can run&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Symbol相关">Symbol相关</h3><p>数据类型 <code>Symbol</code> ，表示独一无二的值，可以保证不会与其他属性名产生冲突</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> s1 = <span class="title class_">Symbol</span>(<span class="string">&#x27;foo&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> s2 = <span class="title class_">Symbol</span>(<span class="string">&#x27;foo&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(s1)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(s2)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(s1 === s2) <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Symbol.for()</span></span><br><span class="line"><span class="comment">// 如果有，就返回这个 Symbol 值，否则就新建一个以该字符串为名称的 Symbol 值</span></span><br><span class="line"><span class="keyword">let</span> s1 = <span class="title class_">Symbol</span>.<span class="title function_">for</span>(<span class="string">&#x27;foo&#x27;</span>)</span><br><span class="line"><span class="keyword">let</span> s2 = <span class="title class_">Symbol</span>.<span class="title function_">for</span>(<span class="string">&#x27;foo&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(s1 === s2) <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Symbol.keyFor()</span></span><br><span class="line"><span class="comment">// 返回一个已登记的 Symbol 类型值的key</span></span><br><span class="line"><span class="keyword">const</span> s1 = <span class="title class_">Symbol</span>(<span class="string">&#x27;foo&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Symbol</span>.<span class="title function_">keyFor</span>(s1)) <span class="comment">// undefined</span></span><br><span class="line"><span class="keyword">const</span> s2 = <span class="title class_">Symbol</span>.<span class="title function_">for</span>(<span class="string">&#x27;foo&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Symbol</span>.<span class="title function_">keyFor</span>(s2)) <span class="comment">// foo</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 同名的学生信息就不会被覆盖</span></span><br><span class="line"><span class="keyword">const</span> stu1 = <span class="title class_">Symbol</span>(<span class="string">&#x27;李四&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> stu2 = <span class="title class_">Symbol</span>(<span class="string">&#x27;李四&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> grade = &#123;</span><br><span class="line">    [stu1]: &#123;</span><br><span class="line">        <span class="attr">address</span>: <span class="string">&#x27;yyy&#x27;</span>,</span><br><span class="line">        <span class="attr">tel</span>: <span class="string">&#x27;222&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">    [stu2]: &#123;</span><br><span class="line">        <span class="attr">address</span>: <span class="string">&#x27;zzz&#x27;</span>,</span><br><span class="line">        <span class="attr">tel</span>: <span class="string">&#x27;333&#x27;</span></span><br><span class="line">    &#125;,</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(grade)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(grade[stu1])</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(grade[stu2])</span><br><span class="line"></span><br><span class="line"><span class="comment">// Symbol 解决“强耦合”</span></span><br><span class="line"><span class="keyword">const</span> shapeType = &#123;</span><br><span class="line">    <span class="attr">triangle</span>: <span class="title class_">Symbol</span>(),</span><br><span class="line">    <span class="attr">circle</span>: <span class="title class_">Symbol</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getArea</span>(<span class="params">shape</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> area = <span class="number">0</span></span><br><span class="line">    <span class="keyword">switch</span> (shape) &#123;</span><br><span class="line">        <span class="keyword">case</span> shapeType.<span class="property">triangle</span>:</span><br><span class="line">            area = <span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> shapeType.<span class="property">circle</span>:</span><br><span class="line">            area = <span class="number">2</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> area</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getArea</span>(shapeType.<span class="property">triangle</span>))</span><br></pre></td></tr></table></figure><h3 id="Set相关">Set相关</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Set类似于数组，但是成员的值都是唯一的</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 声明</span></span><br><span class="line"><span class="keyword">let</span> s = <span class="keyword">new</span> <span class="title class_">Set</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>])</span><br><span class="line"><span class="comment">// 添加</span></span><br><span class="line">s.<span class="title function_">add</span>(<span class="string">&#x27;hello&#x27;</span>).<span class="title function_">add</span>(<span class="string">&#x27;goodbye&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除指定数据</span></span><br><span class="line">s.<span class="title function_">delete</span>(<span class="string">&#x27;hello&#x27;</span>) <span class="comment">// true</span></span><br><span class="line">s.<span class="title function_">clear</span>()    <span class="comment">// 删除全部数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断是否包含数据项</span></span><br><span class="line">s.<span class="title function_">has</span>(<span class="string">&#x27;hello&#x27;</span>) <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 计算数据项总数</span></span><br><span class="line">s.<span class="property">size</span> <span class="comment">// 2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 数组合并并去重</span></span><br><span class="line"><span class="keyword">let</span> arr1 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]</span><br><span class="line"><span class="keyword">let</span> arr2 = [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line"><span class="keyword">let</span> s = <span class="keyword">new</span> <span class="title class_">Set</span>([...arr1, ...arr2])</span><br><span class="line"></span><br><span class="line"><span class="comment">// 交集</span></span><br><span class="line"><span class="keyword">let</span> s1 = <span class="keyword">new</span> <span class="title class_">Set</span>(arr1)</span><br><span class="line"><span class="keyword">let</span> s2 = <span class="keyword">new</span> <span class="title class_">Set</span>(arr2)</span><br><span class="line"><span class="keyword">let</span> result = <span class="keyword">new</span> <span class="title class_">Set</span>(arr1.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> s2.<span class="title function_">has</span>(item)))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Array</span>.<span class="title function_">from</span>(result))</span><br><span class="line"></span><br><span class="line"><span class="comment">// 差集</span></span><br><span class="line"><span class="keyword">let</span> arr3 = <span class="keyword">new</span> <span class="title class_">Set</span>(arr1.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> !s2.<span class="title function_">has</span>(item)))</span><br><span class="line"><span class="keyword">let</span> arr4 = <span class="keyword">new</span> <span class="title class_">Set</span>(arr2.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> !s1.<span class="title function_">has</span>(item)))</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr3)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr4)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>([...arr3, ...arr4])</span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历方式</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(s.<span class="title function_">keys</span>()) <span class="comment">// SetIterator &#123;&quot;hello&quot;, &quot;goodbye&quot;&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(s.<span class="title function_">values</span>()) <span class="comment">// SetIterator &#123;&quot;hello&quot;, &quot;goodbye&quot;&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(s.<span class="title function_">entries</span>()) <span class="comment">// SetIterator &#123;&quot;hello&quot; =&gt; &quot;hello&quot;, &quot;goodbye&quot; =&gt; &quot;goodbye&quot;&#125;</span></span><br><span class="line">s.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(item) <span class="comment">// hello // goodbye</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> s) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(item)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="String相关">String相关</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">`string text <span class="subst">$&#123;expression&#125;</span> string text`</span>  <span class="comment">// 来表示长的以及带参数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// String.prototype.fromCodePoint() 用于从 Unicode 码点返回对应字符</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">String</span>.<span class="title function_">fromCodePoint</span>(<span class="number">0x20BB7</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// String.prototype.indexOf() 返回出现的下标位置</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">indexOf</span>(<span class="string">&#x27;mo&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment">// String.prototype.includes() 判断一个字符串是否包含在另一个字符串中</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">includes</span>(<span class="string">&#x27;mo&#x27;</span>))</span><br></pre></td></tr></table></figure><h3 id="Number相关">Number相关</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 二进制 用前缀0b</span></span><br><span class="line"><span class="keyword">const</span> a = <span class="number">0B0101</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 八进制 用前缀0o</span></span><br><span class="line"><span class="keyword">const</span> b = <span class="number">0O777</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Number.isFinite() 检查一个数值是否为有限的</span></span><br><span class="line"><span class="title class_">Number</span>.<span class="built_in">isFinite</span>(<span class="title class_">NaN</span>) <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Number.isNaN() 检查一个值是否为NaN</span></span><br><span class="line"><span class="title class_">Number</span>.<span class="built_in">isNaN</span>(<span class="title class_">NaN</span>) <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Number.parseInt() </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Number.isInteger() 判断一个数值是否为整数</span></span><br><span class="line"><span class="title class_">Number</span>.<span class="title function_">isInteger</span>(<span class="number">25.1</span>) <span class="comment">// false</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">// Number.MAX_SAFE_INTEGER Number.MIN_SAFE_INTEGER</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Math.trunc() 用于去除一个数的小数部分，返回整数部分</span></span><br><span class="line"><span class="comment">// Math.sign() 判断一个数到底是正数、负数、还是零</span></span><br><span class="line"><span class="comment">// Math.cbrt() 计算一个数的立方根</span></span><br></pre></td></tr></table></figure><h3 id="Proxy相关">Proxy相关</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> o = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;xiaoming&#x27;</span>,</span><br><span class="line">    <span class="attr">age</span>: <span class="number">20</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 原来</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(o.<span class="property">from</span> || <span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">// 现在</span></span><br><span class="line"><span class="keyword">let</span> handler = &#123;</span><br><span class="line">    <span class="title function_">get</span>(<span class="params">obj, key</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title class_">Reflect</span>.<span class="title function_">has</span>(obj, key) ? obj[key] : <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> <span class="title class_">Proxy</span>(o, handler)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(p.<span class="property">from</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用proxy做校验</span></span><br><span class="line"><span class="comment">// Validator.js</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> (obj, key, value) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="title class_">Reflect</span>.<span class="title function_">has</span>(key) &amp;&amp; value &gt; <span class="number">20</span>) &#123;</span><br><span class="line">        obj[key] = value</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Validator</span> <span class="keyword">from</span> <span class="string">&#x27;./Validator&#x27;</span></span><br><span class="line"><span class="keyword">let</span> data = <span class="keyword">new</span> <span class="title class_">Proxy</span>(response.<span class="property">data</span>, &#123;</span><br><span class="line">    <span class="attr">set</span>: <span class="title class_">Validator</span> <span class="comment">// 在进行set的时候进行校验</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 常规拦截操作get</span></span><br><span class="line"><span class="keyword">let</span> dict = &#123;</span><br><span class="line">    <span class="string">&#x27;hello&#x27;</span>: <span class="string">&#x27;你好&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;world&#x27;</span>: <span class="string">&#x27;世界&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">dict = <span class="keyword">new</span> <span class="title class_">Proxy</span>(dict, &#123;</span><br><span class="line">    <span class="title function_">get</span>(<span class="params">target, prop</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> prop <span class="keyword">in</span> target ? target[prop] : prop</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(dict[<span class="string">&#x27;world&#x27;</span>])</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(dict[<span class="string">&#x27;imooc&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">// 常规拦截操作set</span></span><br><span class="line"><span class="keyword">let</span> arr = []</span><br><span class="line">arr = <span class="keyword">new</span> <span class="title class_">Proxy</span>(arr, &#123;</span><br><span class="line">    <span class="title function_">set</span>(<span class="params">target, prop, val</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> val === <span class="string">&#x27;number&#x27;</span>) &#123;</span><br><span class="line">            target[prop] = val</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">arr.<span class="title function_">push</span>(<span class="number">5</span>)</span><br><span class="line">arr.<span class="title function_">push</span>(<span class="number">6</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr[<span class="number">0</span>], arr[<span class="number">1</span>], arr.<span class="property">length</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 常规拦截操作has</span></span><br><span class="line"><span class="keyword">let</span> range = &#123;</span><br><span class="line">    <span class="attr">start</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">end</span>: <span class="number">5</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">range = <span class="keyword">new</span> <span class="title class_">Proxy</span>(range, &#123;</span><br><span class="line">    <span class="title function_">has</span>(<span class="params">target, prop</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> prop &gt;= target.<span class="property">start</span> &amp;&amp; prop &lt;= target.<span class="property">end</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">2</span> <span class="keyword">in</span> range)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">9</span> <span class="keyword">in</span> range)</span><br></pre></td></tr></table></figure><h3 id="Promise相关">*Promise相关</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> promise = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span>(<span class="params">resolve, reject</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> ( <span class="comment">/* 异步操作成功 */</span> ) &#123;</span><br><span class="line">        <span class="title function_">resolve</span>(value)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="title function_">reject</span>(error)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Promise.prototype.then()</span></span><br><span class="line">promise.<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params">value</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(value)</span><br><span class="line">&#125;, <span class="keyword">function</span>(<span class="params">error</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(error)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//  Promise.prototype.catch()</span></span><br><span class="line"><span class="comment">// reject(new Error()) 的方式来触发异常</span></span><br><span class="line">.<span class="title function_">catch</span>(<span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">message</span>) <span class="comment">// es</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Promise.resolve() 认为是以下代码的语法糖</span></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span>(<span class="params">resolve</span>) &#123;</span><br><span class="line">    <span class="title function_">resolve</span>(<span class="number">42</span>)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// Promise.reject()</span></span><br><span class="line"><span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;出错了&quot;</span>)) === <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span>(<span class="params">resolve, reject</span>) &#123;</span><br><span class="line">    <span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;出错了&#x27;</span>))</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Promise.all()</span></span><br><span class="line"><span class="comment">// Promise.all 生成并返回一个新的 Promise 对象 参数传递promise数组中所有的 Promise 对象都变为resolve的时候，该方法才会返回</span></span><br><span class="line"><span class="keyword">var</span> p1 = <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">var</span> p2 = <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="number">2</span>)</span><br><span class="line"><span class="keyword">var</span> p3 = <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="number">3</span>)</span><br><span class="line"><span class="title class_">Promise</span>.<span class="title function_">all</span>([p1, p2, p3]).<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params">results</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(results) <span class="comment">// [1, 2, 3]</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Promise.race()</span></span><br><span class="line"><span class="comment">// 任何一个 Promise 对象如果变为 resolve 或者 reject 的话， 该函数就会返回</span></span><br><span class="line"><span class="keyword">var</span> p1 = <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">var</span> p2 = <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="number">2</span>)</span><br><span class="line"><span class="keyword">var</span> p3 = <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(<span class="number">3</span>)</span><br><span class="line"><span class="title class_">Promise</span>.<span class="title function_">race</span>([p1, p2, p3]).<span class="title function_">then</span>(<span class="keyword">function</span>(<span class="params">value</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(value) <span class="comment">// 1</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="Generator相关">Generator相关</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//  Generators 是可以用来控制迭代器的函数。它们可以暂停，然后在任何时候恢复</span></span><br><span class="line"><span class="comment">// 比普通函数多一个 *</span></span><br><span class="line"><span class="comment">// 函数内部用 yield 来控制程序的执行的“暂停”</span></span><br><span class="line"><span class="comment">// 函数的返回值通过调用 next 来“恢复”程序执行</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span>* <span class="title function_">generatorForLoop</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i += <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">yield</span> <span class="variable language_">console</span>.<span class="title function_">log</span>(i)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> genForLoop = <span class="title function_">generatorForLoop</span>()</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(genForLoop.<span class="title function_">next</span>()) <span class="comment">// first console.log - 0</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(genForLoop.<span class="title function_">next</span>()) <span class="comment">// 1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// yield 表达式的返回值是 undefined，但是遍历器对象的 next 方法可以修改这个默认值</span></span><br><span class="line"><span class="comment">// yeild * 是委托给另一个遍历器对象或者可遍历对象</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span>* <span class="title function_">gen</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">let</span> val</span><br><span class="line">      val = <span class="keyword">yield</span> <span class="number">1</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>( <span class="string">`1:<span class="subst">$&#123;val&#125;</span>`</span> ) <span class="comment">// 1:undefined</span></span><br><span class="line">      val = <span class="keyword">yield</span> <span class="number">2</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>( <span class="string">`2:<span class="subst">$&#123;val&#125;</span>`</span> ) <span class="comment">// 2:undefined</span></span><br><span class="line">      val = <span class="keyword">yield</span> <span class="number">3</span></span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>( <span class="string">`3:<span class="subst">$&#123;val&#125;</span>`</span> ) <span class="comment">// 3:undefined</span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">var</span> g = <span class="title function_">gen</span>()</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(g.<span class="title function_">next</span>()) <span class="comment">// &#123;value: 1, done: false&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(g.<span class="title function_">next</span>()) <span class="comment">// &#123;value: 2, done: false&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(g.<span class="title function_">next</span>()) <span class="comment">// &#123;value: 3, done: false&#125;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(g.<span class="title function_">next</span>()) <span class="comment">// &#123;value: undefined, done: true&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// next[value] 是可以接受参数的，这个参数可以让你在 Generator 外部给内部传递数据，而这个参数就是作为 yield 的返回值</span></span><br><span class="line"><span class="comment">// return 方法可以让 Generator 遍历终止</span></span><br><span class="line"><span class="comment">// 可以通过 throw 方法在 Generator 外部控制内部执行的“终断”。</span></span><br><span class="line"><span class="keyword">function</span>* <span class="title function_">gen</span>(<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> val = <span class="number">100</span></span><br><span class="line">      <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>( <span class="string">`before <span class="subst">$&#123;val&#125;</span>`</span> )</span><br><span class="line">          val = <span class="keyword">yield</span> val</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">log</span>( <span class="string">`return <span class="subst">$&#123;val&#125;</span>`</span> )</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> g = <span class="title function_">gen</span>()</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(g.<span class="title function_">next</span>(<span class="number">20</span>).<span class="property">value</span>)</span><br><span class="line">  <span class="comment">// before 100</span></span><br><span class="line">  <span class="comment">// 100</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(g.<span class="title function_">next</span>(<span class="number">30</span>).<span class="property">value</span>)</span><br><span class="line">  <span class="comment">// return 30</span></span><br><span class="line">  <span class="comment">// before 30</span></span><br><span class="line">  <span class="comment">// 30</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(g.<span class="keyword">return</span>()) <span class="comment">// &#123;value: undefined, done: true&#125;</span></span><br><span class="line">g.<span class="keyword">throw</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;break&#x27;</span>))</span><br></pre></td></tr></table></figure><h3 id="Iterator相关">Iterator相关</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 一种机制来自定义for...of循环的行为</span></span><br><span class="line"><span class="comment">// 自定义的数据结构进行遍历</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 想最后获取到每个作者</span></span><br><span class="line"><span class="comment">// next返回一个对象的无参函数，被返回对象拥有两个属性：done 和 value</span></span><br><span class="line"><span class="keyword">let</span> authors = &#123;</span><br><span class="line">    <span class="attr">allAuthors</span>: &#123;</span><br><span class="line">        <span class="attr">fiction</span>: [</span><br><span class="line">            <span class="string">&#x27;Agatha Christie&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;J. K. Rowling&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;Dr. Seuss&#x27;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">scienceFiction</span>: [</span><br><span class="line">            <span class="string">&#x27;Neal Stephenson&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;Arthur Clarke&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;Isaac Asimov&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;Robert Heinlein&#x27;</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="attr">fantasy</span>: [</span><br><span class="line">            <span class="string">&#x27;J. R. R. Tolkien&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;J. K. Rowling&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;Terry Pratchett&#x27;</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">authors[<span class="title class_">Symbol</span>.<span class="property">iterator</span>] = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> allAuthors = <span class="variable language_">this</span>.<span class="property">allAuthors</span></span><br><span class="line">    <span class="keyword">let</span> keys = <span class="title class_">Reflect</span>.<span class="title function_">ownKeys</span>(allAuthors)</span><br><span class="line">    <span class="keyword">let</span> values = []</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">        <span class="title function_">next</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!values.<span class="property">length</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (keys.<span class="property">length</span>) &#123;</span><br><span class="line">                    values = allAuthors[keys[<span class="number">0</span>]]</span><br><span class="line">                    keys.<span class="title function_">shift</span>()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> &#123;</span><br><span class="line">                <span class="attr">done</span>: !values.<span class="property">length</span>,</span><br><span class="line">                <span class="attr">value</span>: values.<span class="title function_">shift</span>()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> value <span class="keyword">of</span> authors) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>( <span class="string">`<span class="subst">$&#123;value&#125;</span>`</span> )</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 换一种Generator实现</span></span><br><span class="line">authors[<span class="title class_">Symbol</span>.<span class="property">iterator</span>] = <span class="keyword">function</span>*() &#123;</span><br><span class="line">    <span class="keyword">let</span> allAuthors = <span class="variable language_">this</span>.<span class="property">allAuthors</span></span><br><span class="line">    <span class="keyword">let</span> keys = <span class="title class_">Reflect</span>.<span class="title function_">ownKeys</span>(allAuthors)</span><br><span class="line">    <span class="keyword">let</span> values = []</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!values.<span class="property">length</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (keys.<span class="property">length</span>) &#123;</span><br><span class="line">                values = allAuthors[keys[<span class="number">0</span>]]</span><br><span class="line">                keys.<span class="title function_">shift</span>()</span><br><span class="line">                <span class="keyword">yield</span> values.<span class="title function_">shift</span>()</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">yield</span> values.<span class="title function_">shift</span>()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Module模块">Module模块</h3><p>将每个js文件看作是一个模块，每个模块通过固定的方式引入，并且通过固定的方式向外暴露指定的内容</p><p>按照js模块化的设想，一个个模块按照其依赖关系组合，最终插入到主程序中</p><p>无模块化–&gt;CommonJS规范–&gt;AMD规范–&gt;CMD规范–&gt;ES6模块化</p><p>在ES6中，可以使用 import 关键字引入模块，通过 exprot 关键字导出模块，但是由于ES6目前无法在浏览器中执行，所以，只能通过babel将不被支持的import编译为当前受到广泛支持的 require</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 暴露变量/常量</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> name = <span class="string">&#x27;hello&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">let</span> addr = <span class="string">&#x27;BeiJing City&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 暴露函数</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">say</span>(<span class="params">content</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(content)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// as 重新取名字</span></span><br><span class="line"><span class="keyword">const</span> name = <span class="string">&#x27;hello&#x27;</span></span><br><span class="line"><span class="keyword">let</span> addr = <span class="string">&#x27;BeiJing City&#x27;</span></span><br><span class="line"><span class="keyword">var</span> list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"><span class="keyword">export</span> &#123;</span><br><span class="line">    name <span class="keyword">as</span> cname,</span><br><span class="line">    addr <span class="keyword">as</span> caddr,</span><br><span class="line">    list</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// import 导入</span></span><br><span class="line"><span class="keyword">import</span> list, &#123;</span><br><span class="line">      cname,</span><br><span class="line">      caddr</span><br><span class="line">&#125; <span class="keyword">from</span> A</span><br></pre></td></tr></table></figure><h2 id="ECMAScript2016-ES7"><strong>ECMAScript2016(ES7)</strong></h2><h3 id="Array-prototype-includes">Array.prototype.includes()</h3><p>ES7引入的Array.prototype.includes() 方法用来判断一个数组是否包含一个指定的值</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> arr = [<span class="string">&#x27;es6&#x27;</span>, <span class="string">&#x27;es7&#x27;</span>, <span class="string">&#x27;es8&#x27;</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">includes</span>(<span class="string">&#x27;es6&#x27;</span>)) <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> arr = [<span class="string">&#x27;es6&#x27;</span>, <span class="string">&#x27;es7&#x27;</span>, <span class="string">&#x27;es8&#x27;</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">includes</span>(<span class="string">&#x27;es7&#x27;</span>, <span class="number">1</span>)) <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr.<span class="title function_">includes</span>(<span class="string">&#x27;es7&#x27;</span>, <span class="number">2</span>)) <span class="comment">// false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> demo = [<span class="number">1</span>, <span class="title class_">NaN</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">demo.<span class="title function_">indexOf</span>(<span class="title class_">NaN</span>) <span class="comment">//-1</span></span><br><span class="line">demo.<span class="title function_">includes</span>(<span class="title class_">NaN</span>) <span class="comment">//true</span></span><br></pre></td></tr></table></figure><h2 id="ECMAScript2017-ES8"><strong>ECMAScript2017(ES8)</strong></h2><h3 id="async-await">async / await</h3><p>async 是让我们写起 Promise 像同步操作， 前面添加了async的函数在执行后都会自动返回一个Promise对象</p><p>在async函数中使用await，那么await这里的代码就会变成同步的了</p><p>意思就是说只有等await后面的Promise执行完成得到结果才会继续下去，await就是等待。</p><p>await 只能在 async 标记的函数内部使用，单独使用会触发 Syntax error</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;imooc&#x27;</span> <span class="comment">// Promise.resolve(&#x27;imooc&#x27;)</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">foo</span>()) <span class="comment">// Promise</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">timeout</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// resolve(&#x27;success&#x27;)</span></span><br><span class="line">            <span class="title function_">reject</span>(<span class="string">&#x27;error&#x27;</span>)</span><br><span class="line">        &#125;, <span class="number">1000</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">foo</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">await</span> <span class="title function_">timeout</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">foo</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">&#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="Object">Object</h3><p>ES8中对象扩展补充了两个静态方法，用于遍历对象：Object.values()，Object.entries()</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;imooc&#x27;</span>,</span><br><span class="line">    <span class="attr">web</span>: <span class="string">&#x27;www.imooc.com&#x27;</span>,</span><br><span class="line">    <span class="attr">course</span>: <span class="string">&#x27;es&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="title function_">values</span>(obj)) <span class="comment">// [&quot;imooc&quot;, &quot;www.imooc.com&quot;, &quot;es&quot;]</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> [k, v] <span class="keyword">of</span> <span class="title class_">Object</span>.<span class="title function_">entries</span>(grade)) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(k, v)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// getOwnPropertyDescriptors() 不想让 Lima 这个属性和值被枚举</span></span><br><span class="line"><span class="keyword">const</span> data = &#123;</span><br><span class="line">    <span class="title class_">Portland</span>: <span class="string">&#x27;78/50&#x27;</span>,</span><br><span class="line">    <span class="title class_">Dublin</span>: <span class="string">&#x27;88/52&#x27;</span>,</span><br><span class="line">    <span class="title class_">Lima</span>: <span class="string">&#x27;58/40&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(data, <span class="string">&#x27;Lima&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">enumerable</span>: <span class="literal">false</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">entries</span>(data).<span class="title function_">map</span>(<span class="function">(<span class="params">[city, temp]</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>( <span class="string">`City: <span class="subst">$&#123;city.padEnd(<span class="number">16</span>)&#125;</span> Weather: <span class="subst">$&#123;temp&#125;</span>`</span> )</span><br><span class="line">    <span class="comment">// City: Portland         Weather: 78/50</span></span><br><span class="line">    <span class="comment">// City: Dublin           Weather: 88/52</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Object</span>.<span class="title function_">getOwnPropertyDescriptor</span>(data, <span class="string">&#x27;Lima&#x27;</span>)) <span class="comment">// 会发现 enumerable 为flase</span></span><br><span class="line"><span class="comment">// &#123;value: &quot;58/40&quot;, writable: true, enumerable: false, configurable: true&#125;</span></span><br></pre></td></tr></table></figure><h3 id="String">String</h3><p>新增了两个实例函数 String.prototype.padStart 和 String.prototype.padEnd</p><p>允许将空字符串或其他字符串添加到原始字符串的开头或结尾</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> tel = <span class="string">&#x27;13012345678&#x27;</span></span><br><span class="line"><span class="keyword">const</span> newTel = tel.<span class="title function_">slice</span>(-<span class="number">4</span>).<span class="title function_">padStart</span>(tel.<span class="property">length</span>, <span class="string">&#x27;*&#x27;</span>) <span class="comment">// 需要为原来的长度但是现在只有后面4位</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newTel) <span class="comment">// *******5678</span></span><br></pre></td></tr></table></figure><h2 id="ECMAScript2018-ES9"><strong>ECMAScript2018(ES9)</strong></h2><h3 id="for-await-of">for await of</h3><p>循环等待每个Promise对象变为resolved状态才进入下一步，更加优雅了</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Gen</span>(<span class="params">time</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span>(<span class="params">resolve, reject</span>) &#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="title function_">resolve</span>(time)</span><br><span class="line">        &#125;, time)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">test</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> arr = [<span class="title class_">Gen</span>(<span class="number">2000</span>), <span class="title class_">Gen</span>(<span class="number">100</span>), <span class="title class_">Gen</span>(<span class="number">3000</span>)]</span><br><span class="line">    <span class="keyword">for</span> <span class="keyword">await</span> (<span class="keyword">let</span> item <span class="keyword">of</span> arr) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Date</span>.<span class="title function_">now</span>(), item)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 想定义适合 for...await...of 的异步遍历器 Symbol.asyncIterator</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> obj = &#123;</span><br><span class="line">  <span class="attr">count</span>: <span class="number">0</span>,</span><br><span class="line">    </span><br><span class="line">  <span class="title class_">Gen</span> (time) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="keyword">function</span> (<span class="params">resolve, reject</span>) &#123;</span><br><span class="line">      <span class="built_in">setTimeout</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">        <span class="title function_">resolve</span>(&#123; <span class="attr">done</span>: <span class="literal">false</span>, <span class="attr">value</span>: time &#125;)</span><br><span class="line">      &#125;, time)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;, </span><br><span class="line">    </span><br><span class="line">  [<span class="title class_">Symbol</span>.<span class="property">asyncIterator</span>] () &#123;</span><br><span class="line">    <span class="keyword">let</span> self = <span class="variable language_">this</span></span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      next () &#123;</span><br><span class="line">        self.<span class="property">count</span>++</span><br><span class="line">        <span class="keyword">if</span> (self.<span class="property">count</span> &lt; <span class="number">4</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> self.<span class="title class_">Gen</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="number">1000</span>)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(&#123;</span><br><span class="line">            <span class="attr">done</span>: <span class="literal">true</span>,</span><br><span class="line">            <span class="attr">value</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">test</span> () &#123;</span><br><span class="line">  <span class="keyword">for</span> <span class="keyword">await</span> (<span class="keyword">let</span> item <span class="keyword">of</span> obj) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Date</span>.<span class="title function_">now</span>(), item)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="RegExp">RegExp</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 点（.）是一个特殊字符，代表任意的单个字符，但是有两个例外。一个是四个字节的 UTF-16 字符，这个可以用u修饰符解决；另一个是行终止符</span></span><br><span class="line"><span class="comment">// dotAll 模式：它让 . 名副其实</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> re = <span class="keyword">new</span> <span class="title class_">RegExp</span>(<span class="string">&#x27;foo.bar&#x27;</span>, <span class="string">&#x27;s&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(re.<span class="title function_">test</span>(<span class="string">&#x27;foo\nbar&#x27;</span>)) <span class="comment">// true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(re.<span class="title function_">test</span>(<span class="string">&#x27;foo\nbar&#x27;</span>)) <span class="comment">// true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// index [匹配的结果的开始位置]</span></span><br><span class="line"><span class="comment">// input [搜索的字符串]</span></span><br><span class="line"><span class="comment">// groups [一个捕获组数组 或 undefined（如果没有定义命名捕获组）]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;2020-05-01&#x27;</span>.<span class="title function_">match</span>(<span class="regexp">/(\d&#123;4&#125;)-(\d&#123;2&#125;)-(\d&#123;2&#125;)/</span>))</span><br><span class="line"><span class="comment">// [&quot;2020-05-01&quot;, &quot;2020&quot;, &quot;05&quot;, &quot;01&quot;, index: 0, input: &quot;2020-05-01&quot;, groups: undefined]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> test = <span class="string">&#x27;hello world&#x27;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(test.<span class="title function_">match</span>(<span class="regexp">/hello(?=\sworld)/</span>)) <span class="comment">// [&quot;hello&quot;, index: 0, input: &quot;hello world&quot;, groups: undefined]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(test.<span class="title function_">match</span>(<span class="regexp">/(?&lt;=world\s)hello/</span>)) <span class="comment">// [&quot;hello&quot;, index: 6, input: &quot;world hello&quot;, groups: undefined]</span></span><br><span class="line"><span class="comment">// (?&lt;...)是后行断言的符号，(?...)是先行断言的符号，然后结合 =(等于)、!(不等)、\1(捕获匹配)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Rest-Spread">Rest &amp; Spread</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> input = &#123;</span><br><span class="line">  <span class="attr">a</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">b</span>: <span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> output = &#123;</span><br><span class="line">  ...input,</span><br><span class="line">  <span class="attr">c</span>: <span class="number">3</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> input = &#123;</span><br><span class="line">  <span class="attr">a</span>: <span class="number">1</span>,</span><br><span class="line">  <span class="attr">b</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="attr">c</span>: <span class="number">3</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> &#123; a, ...rest &#125; = input</span><br></pre></td></tr></table></figure><h3 id="Promise-prototype-finally">Promise.prototype.finally()</h3><p>指定不管最后状态如何都会执行的回调函数。Promise.prototype.finally() 方法返回一个Promise，在promise执行结束时，无论结果是fulfilled或者是rejected，在执行then()和catch()后，都会执行finally指定的回调函数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> connection</span><br><span class="line">db.<span class="title function_">open</span>()</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function"><span class="params">conn</span> =&gt;</span> &#123;</span><br><span class="line">        connection = conn</span><br><span class="line">        <span class="keyword">return</span> connection.<span class="title function_">select</span>(&#123;</span><br><span class="line">            <span class="attr">name</span>: <span class="string">&#x27;Jane&#x27;</span></span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function"><span class="params">result</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// Process result</span></span><br><span class="line">        <span class="comment">// Use `connection` to make more queries</span></span><br><span class="line">    &#125;)···</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// handle errors</span></span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">finally</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        connection.<span class="title function_">close</span>()</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure><h2 id="ECMAScript2019-ES10"><strong>ECMAScript2019(ES10)</strong></h2><h3 id="Object-fromEntries">Object.fromEntries()</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 可以将map先entries后filter再fromEntries转回来实现过滤</span></span><br><span class="line"><span class="keyword">const</span> obj = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;imooc&#x27;</span>,</span><br><span class="line">    <span class="attr">course</span>: <span class="string">&#x27;es&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> entries = <span class="title class_">Object</span>.<span class="title function_">entries</span>(obj)</span><br><span class="line"><span class="keyword">const</span> fromEntries = <span class="title class_">Object</span>.<span class="title function_">fromEntries</span>(entries) <span class="comment">// 转回来</span></span><br></pre></td></tr></table></figure><h3 id="Array">Array</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Array.prototype.flat() 所有元素与遍历到的子数组中的元素合并为一个新数组返回</span></span><br><span class="line"><span class="keyword">const</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, [<span class="number">3</span>, <span class="number">4</span>, [<span class="number">5</span>, <span class="number">6</span>]]]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(numbers.<span class="title function_">flat</span>())  <span class="comment">// [1, 2, 3, 4, [5, 6]]</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(numbers.<span class="title function_">flat</span>(<span class="number">2</span>)) <span class="comment">// [1, 2, 3, 4, 5, 6]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// flatMap()  首先使用映射函数映射每个元素，然后将结果压缩成一个新数组</span></span><br><span class="line"><span class="keyword">const</span> numbers = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">numbers.<span class="title function_">map</span>(<span class="function"><span class="params">x</span> =&gt;</span> [x * <span class="number">2</span>]) <span class="comment">// [[2], [4], [6]]</span></span><br><span class="line">numbers.<span class="title function_">flatMap</span>(<span class="function"><span class="params">x</span> =&gt;</span> [x * <span class="number">2</span>]) <span class="comment">// [2, 4, 6]</span></span><br></pre></td></tr></table></figure><h3 id="Symbol">Symbol</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> name = <span class="title class_">Symbol</span>(<span class="string">&#x27;es&#x27;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(name.<span class="property">description</span>) <span class="comment">// es</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(name.<span class="property">description</span> === <span class="string">&#x27;es&#x27;</span>) <span class="comment">// true 来判断</span></span><br></pre></td></tr></table></figure><h3 id="ECMAScript2020-ES11"><strong>ECMAScript2020(ES11)</strong></h3><h3 id="Dynamic-Import">Dynamic Import</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> oBtn = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#btn&#x27;</span>)</span><br><span class="line">oBtn.<span class="title function_">addEventListener</span>(<span class="string">&#x27;click&#x27;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">import</span>(<span class="string">&#x27;./ajax&#x27;</span>).<span class="title function_">then</span>(<span class="function"><span class="params">mod</span> =&gt;</span> &#123;</span><br><span class="line">        <span class="comment">// console.log(mod)</span></span><br><span class="line">        mod.<span class="title function_">default</span>(<span class="string">&#x27;static/a.json&#x27;</span>, <span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="Promise-allSettled">Promise.allSettled()</h3><p>并发任务中，无论一个任务正常或者异常，都会返回对应的的状态</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Promise</span>.<span class="title function_">allSettled</span>([</span><br><span class="line">    <span class="title class_">Promise</span>.<span class="title function_">reject</span>(&#123;</span><br><span class="line">        <span class="attr">code</span>: <span class="number">500</span>,</span><br><span class="line">        <span class="attr">msg</span>: <span class="string">&#x27;服务异常&#x27;</span></span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(&#123;</span><br><span class="line">        <span class="attr">code</span>: <span class="number">200</span>,</span><br><span class="line">        <span class="attr">data</span>: [<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>]</span><br><span class="line">    &#125;),</span><br><span class="line">    <span class="title class_">Promise</span>.<span class="title function_">resolve</span>(&#123;</span><br><span class="line">        <span class="attr">code</span>: <span class="number">200</span>,</span><br><span class="line">        <span class="attr">data</span>: [<span class="string">&#x27;4&#x27;</span>, <span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>]</span><br><span class="line">    &#125;)</span><br><span class="line">]).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(res)</span><br><span class="line">    <span class="keyword">const</span> data = res.<span class="title function_">filter</span>(<span class="function"><span class="params">item</span> =&gt;</span> item.<span class="property">status</span> === <span class="string">&#x27;fulfilled&#x27;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(data)</span><br><span class="line">&#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(err)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;失败&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h3 id="Optional-chaining">Optional chaining</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> user = &#123;</span><br><span class="line">    <span class="attr">address</span>: &#123;</span><br><span class="line">        <span class="attr">street</span>: <span class="string">&#x27;xx街道&#x27;</span>,</span><br><span class="line">        <span class="title function_">getNum</span>(<span class="params"></span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;80号&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> street2 = user?.<span class="property">address</span>?.<span class="property">street</span></span><br><span class="line"><span class="keyword">const</span> num2 = user?.<span class="property">address</span>?.<span class="property">getNum</span>?.()</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(street2, num2)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Shell 学习笔记</title>
      <link href="/posts/aa327429.html"/>
      <url>/posts/aa327429.html</url>
      
        <content type="html"><![CDATA[<h2 id="Shell-学习笔记">Shell 学习笔记</h2><p>慕课链接：<a href="https://coding.imooc.com/class/chapter/314.html">https://coding.imooc.com/class/chapter/314.html</a></p><p>每次想直接执行脚本的时候，总存在某些地方不会写，然后查资料，就比较浪费时间</p><p>趁着复习周，给自己加餐下，找了个慕课的教程，以下就记录下自己觉得重点的内容</p><img src="https://pic.hengy1.top/typora/202206111304062.png" alt="image-20220611125652945" style="zoom:33%;" /><h2 id="变量的相关使用">变量的相关使用</h2><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">$</span># 表示参数个数</span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="keyword">$0</span> 是脚本本身的名字</span></span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="keyword">$1</span> 是传递给该shell脚本的第一个参数</span></span><br><span class="line"></span><br><span class="line"><span class="meta"><span class="keyword">$2</span> 是传递给该shell脚本的第二个参数</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">$</span>@ 表示所有参数，并且所有参数都是独立的</span><br><span class="line"></span><br><span class="line"><span class="symbol">$</span><span class="symbol">$</span> 是脚本运行的当前进程ID号</span><br><span class="line"></span><br><span class="line"><span class="symbol">$</span>? 是显示最后命令的退出状态，<span class="number">0</span>表示没有错误，其他表示有错误</span><br></pre></td></tr></table></figure><h3 id="变量的删除-替换">变量的删除/替换</h3><img src="https://pic.hengy1.top/typora/202206111316663.png" alt="image-20220611131123947" style="zoom:33%;" /><img src="https://pic.hengy1.top/typora/202206111316185.png" alt="image-20220611131456444" style="zoom:33%;" /><p>可以看出来使用了匹配规则后<code>I lov</code> 匹配到了就被删除了，当然其他也是相同道理</p><h3 id="字符串处理">字符串处理</h3><blockquote><p>expr 是从1开始计算；${string: position}是从0开始计算</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">获得字符串的长度：<span class="variable">$&#123;#string&#125;</span></span><br><span class="line"></span><br><span class="line">获取子串在字符串中索引的位置：\`<span class="built_in">expr</span> index <span class="variable">$string</span> <span class="variable">$substring</span>`</span><br></pre></td></tr></table></figure><img src="https://pic.hengy1.top/typora/202207062343774.png" alt="image-20220611132910356" style="zoom:33%;" /><ul><li>抽取子串：当使用负数的时候需要加个<strong>空格</strong></li></ul><img src="https://pic.hengy1.top/typora/202206111324725.png" alt="image-20220611132413220" style="zoom:33%;" /><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"></span></span><br><span class="line">function echo_len # 使用函数打印出string的长度</span><br><span class="line">&#123;</span><br><span class="line">echo &quot;$&#123;#string&#125;&quot; # 可以加 “”</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">交互性</span></span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">read -p &quot;Please input your choice.&quot; choice</span><br><span class="line">case $choice in</span><br><span class="line">1)</span><br><span class="line">echo_len</span><br><span class="line">;;</span><br><span class="line">q)</span><br><span class="line">exit</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">echo &quot;error&quot;</span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="命令替换">命令替换</h3><p>方式有2个：也就是前面一直出现的 1. `command` 2. $(command)</p><ol><li>获取该系统的所有用户   users=`/cat /etc/passwd | cut -d “:” -f 1`</li><li>根据系统时间计算今年   echo “This is $(date +%Y) year”</li><li>如果存在计算的话 echo “$(($(date +%j)/7))” 【使用$(())包住】</li><li>判断nginx进程是否存在</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash">process_num = $(ps -ef | grep nginx | grep -v grep | <span class="built_in">wc</span> -l)</span></span><br><span class="line">if [ $process_num -eq 0 ];then</span><br><span class="line">systemctl start nginx</span><br><span class="line">if</span><br></pre></td></tr></table></figure><h3 id="Expr数学运算">Expr数学运算</h3><p>方式有2个：1. expr $num1 operator $num2 2. $(( $(num1) operator $(num2) ))</p><p>注意需要转译的情况以及空格的情况 例如 <code>expr $num1 /&gt; $num2</code></p><p>判断输入的是不是整数：expr $num1 + 1；echo $? 如果是0的话就是正确的没有报错</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"></span></span><br><span class="line">read -p &quot;Please input your num.&quot; num</span><br><span class="line">expr $num + 1 &amp;&gt; /dev/null # 不希望输入到终端</span><br><span class="line">if [ $? -eq 0 ];then</span><br><span class="line">if [ `expr $num \&gt; 0` -eq 1 ]; then</span><br><span class="line">echo &quot;Yes&quot;</span><br><span class="line">else</span><br><span class="line">exit</span><br><span class="line">fi</span><br><span class="line">else</span><br><span class="line">echo &quot;Error&quot;</span><br><span class="line">exit</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h3 id="Bc内建运算器">Bc内建运算器</h3><p>这里支持浮点数等运算： <code>/usr/bin/bc</code>进入交互式的运算</p><p>如果想使用命令行进行计算的话：将运算传入进去</p><ol><li><code>echo &quot;23.3+35&quot; | bc </code></li><li><code>echo &quot;scale=4;23.3+35&quot; | bc</code></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="built_in">read</span> -p <span class="string">&quot;Please input your num1.&quot;</span> num1</span></span><br><span class="line">read -p &quot;Please input your num2.&quot; num2</span><br><span class="line">echo &quot;scale=4;$(num1)/$(num2)&quot; | bc</span><br><span class="line">num3=`echo &quot;scale=4;$(num1)/$(num2)&quot; | bc`</span><br></pre></td></tr></table></figure><h2 id="函数使用">函数使用</h2><h3 id="定义与使用">定义与使用</h3><p>使用<code>$1, $2, $3</code>进行传参</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"></span></span><br><span class="line">function calcu</span><br><span class="line">&#123;</span><br><span class="line">case $2 in</span><br><span class="line">+)</span><br><span class="line">echo &quot;`expr $1 + $3`&quot;</span><br><span class="line">-)</span><br><span class="line">echo &quot;`expr $1 - $3`&quot;</span><br><span class="line">\*)</span><br><span class="line">echo &quot;`expr $1 \* $3`&quot;</span><br><span class="line">&#125;</span><br><span class="line">calcu $1 $2 $3</span><br></pre></td></tr></table></figure><p>然后在终端输入<code>sh calculate.sh 20 + 20</code>是能够直接赋值进去的</p><h3 id="函数的返回值">函数的返回值</h3><ul><li>使用return返回值：只能返回1-255的整数，通常用来判断状态</li><li>使用echo返回值：可以返回任何字符串</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"></span></span><br><span class="line">function is_nginx_running</span><br><span class="line">&#123;</span><br><span class="line">    this_pid=$$</span><br><span class="line">    ps -ef | grep nginx | grep -v grep | grep -v $this_pid &amp;&gt; /dev/null</span><br><span class="line">    if [ $? -eq 0 ];then</span><br><span class="line">      return 0</span><br><span class="line">    else</span><br><span class="line">     return 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">is_nginx_running &amp;&amp; echo &quot;Nginx is running&quot; || echo &quot;Nginx is not running&quot;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"></span></span><br><span class="line">function get_users</span><br><span class="line">&#123;</span><br><span class="line">users=`cat /etc/passwd | cut -d: -f1`</span><br><span class="line">echo $user</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">user_list=`get_users`</span><br><span class="line">for u in $user_list</span><br><span class="line">do </span><br><span class="line">echo $u</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h3 id="局部变量与全局变量">局部变量与全局变量</h3><p>不做特殊说明，Shell的变量都是默认变量</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"></span></span><br><span class="line">var1=&quot;Hello world&quot;</span><br><span class="line">function test</span><br><span class="line">&#123;</span><br><span class="line">var2=87</span><br><span class="line">local var3=11</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">echo $var1</span><br><span class="line">echo $var2</span><br><span class="line">test</span><br><span class="line">echo $var1</span><br><span class="line">echo $var2  # 调用了就生效了</span><br><span class="line">echo $var3  # 说好了是local</span><br></pre></td></tr></table></figure><h2 id="文件查找">文件查找</h2><p><code>Find [路径] [选项] [操作]</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ find /etc -name <span class="string">&quot;*.conf&quot;</span> </span><br><span class="line"></span><br><span class="line">$ find /etc -iname <span class="string">&quot;*.conf&quot;</span> <span class="comment"># 忽略大小写</span></span><br><span class="line"></span><br><span class="line">$ find . -<span class="built_in">type</span> f <span class="comment"># 搜索文件会往深度走</span></span><br><span class="line"></span><br><span class="line">$ find . -size +1M <span class="comment"># 搜索大于1M的文件</span></span><br><span class="line"></span><br><span class="line">$ find . -mtime -3 <span class="comment"># 搜索3天之内修改</span></span><br><span class="line"></span><br><span class="line">$ find . -<span class="built_in">type</span> f -mindepth 2 <span class="comment"># 从当前的二级子目录开始查询</span></span><br><span class="line"></span><br><span class="line">$ find . -<span class="built_in">type</span> f -maxdepth 2 <span class="comment"># 最多搜索到二级子目录</span></span><br><span class="line"></span><br><span class="line">$ find . -perm 777 <span class="comment"># 从当前查找777权限的</span></span><br><span class="line"></span><br><span class="line">$ find ./etc -name <span class="string">&quot;*.conf&quot;</span> -<span class="built_in">exec</span> <span class="built_in">rm</span> -rf &#123;&#125; \;  <span class="comment"># 查找出来并执行动作</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -a yu</span></span><br><span class="line"><span class="comment"># -o 或</span></span><br><span class="line"><span class="comment"># ！非</span></span><br></pre></td></tr></table></figure><ul><li><p>find 在遍历磁盘</p></li><li><p>locate 在数据库进行查找</p><ul><li>使用updatedb去更新数据库</li></ul></li><li><p>whereis查找二进制文件在哪里</p><ul><li>-b 查找可执行文件在哪里</li></ul></li><li><p>which 仅查找二进制程序文件</p></li></ul><h2 id="文本处理三剑客">文本处理三剑客</h2><h3 id="grep和egrep">grep和egrep</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ grep python_text file <span class="comment"># 在file中查找python_text</span></span><br><span class="line"></span><br><span class="line">$ grep -n python_text file <span class="comment"># 看行号</span></span><br><span class="line"></span><br><span class="line">$ grep -iv python_text file <span class="comment"># 忽略并忽略大小写</span></span><br><span class="line"></span><br><span class="line">$ grep -E <span class="string">&quot;python_text|Python&quot;</span> file <span class="comment"># 扩展表达式</span></span><br><span class="line"></span><br><span class="line">$ grep -F <span class="string">&quot;py.*&quot;</span> file <span class="comment"># 不使用正则</span></span><br><span class="line"></span><br><span class="line">$ grep -r <span class="string">&quot;python&quot;</span> <span class="comment"># 从父目录递归搜索</span></span><br></pre></td></tr></table></figure><h3 id="sed">sed</h3><blockquote><p>流编辑器，对标准输出或文件进行处理</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ sed -n <span class="string">&#x27;/py.*/p&#x27;</span> demo.txt  <span class="comment"># 每一行去处理 -n 只打印匹配行</span></span><br><span class="line"></span><br><span class="line">$ sed -n -e <span class="string">&#x27;/py.*/p&#x27;</span> -e <span class="string">&#x27;/PY.*/p&#x27;</span> demo.txt <span class="comment"># 多个</span></span><br><span class="line"></span><br><span class="line">$ sed -n -r <span class="string">&#x27;/python|PYTHON/&#x27;</span> demo.txt <span class="comment"># 支持拓展表达式</span></span><br><span class="line"></span><br><span class="line">$ sed -n <span class="string">&#x27;s/love/like/g;p&#x27;</span> demo.txt <span class="comment"># 替换并打印出来但是没有修改原先的</span></span><br><span class="line"></span><br><span class="line">$ sed -n -i <span class="string">&#x27;s/love/like/g;p&#x27;</span> demo.txt <span class="comment"># demo.txt被修改了</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pattern用法</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># /pattern1/command 匹配pattern1行执行命令</span></span><br><span class="line"><span class="comment"># /pattern1/,/pattern2/command 匹配pattern1的行开始到匹配到pattern2的行结束</span></span><br><span class="line"><span class="comment"># 10,/pattern1/command 匹配到第10行开始到pattern1结束</span></span><br><span class="line"><span class="comment"># /pattern1/,10command 匹配到pattern1的行开始到第10行结束</span></span><br><span class="line"></span><br><span class="line">$ sed -n <span class="string">&quot;17p&quot;</span> /etc/passwd <span class="comment"># 打印第17行</span></span><br><span class="line"></span><br><span class="line">$ sed -n <span class="string">&quot;17,20p&quot;</span> /etc/passwd <span class="comment"># 打印第17到20行</span></span><br><span class="line"></span><br><span class="line">$ sed -n <span class="string">&quot;/bash/p&quot;</span> /etc/passwd <span class="comment"># 匹配pattern1行执行命令</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑命令</span></span><br><span class="line"><span class="comment"># p 打印</span></span><br><span class="line"><span class="comment"># a 行后追加 # i 行前追加</span></span><br><span class="line"><span class="comment"># r 外部读入后行后追加 # w 匹配行写入外部</span></span><br><span class="line"><span class="comment"># d 删除</span></span><br><span class="line"><span class="comment"># s/old/new 第一个替换</span></span><br><span class="line"><span class="comment"># s/old/new/g 行内全部替换</span></span><br><span class="line"><span class="comment"># s/old/new/2g 行内前2个替换</span></span><br><span class="line"><span class="comment"># s/old/new/ig 全部替换忽略大小写</span></span><br><span class="line"></span><br><span class="line">$ sed -i <span class="string">&#x27;/\/bin\/bash/a This is User!&#x27;</span> ./demo.txt <span class="comment"># 能匹配到的行在这个行后追加新的一行</span></span><br><span class="line"></span><br><span class="line">$ sed -n <span class="string">&#x27;/\/bin\/bash/w /tmp/user_login.txt&#x27;</span> /etc/passwd <span class="comment"># 匹配到的行到/tmp/user_login.txt</span></span><br><span class="line"></span><br><span class="line">$ sed -i <span class="string">&#x27;s/\/bin\/bash/\/BIN\/BASH/&#x27;</span> /etc/passwd <span class="comment"># 如果没有g的话只会替换匹配到当前行的第一个</span></span><br><span class="line"></span><br><span class="line">$ sed -i <span class="string">&#x27;s/\/bin\/bash/\/BIN\/BASH/g&#x27;</span> /etc/passwd <span class="comment"># 全局替换</span></span><br><span class="line"></span><br><span class="line">$ sed -n <span class="string">&#x27;/\/bin\/bash/n&#x27;</span> /etc/passwd <span class="comment"># 显示行号</span></span><br><span class="line"></span><br><span class="line">$ sed -i <span class="string">&#x27;s/had...p/hadoops/g&#x27;</span> demo.txt <span class="comment"># 任意匹配3个</span></span><br><span class="line"></span><br><span class="line">$ sed -i <span class="string">&#x27;s/had..p/&amp;s/g&#x27;</span> demo.txt <span class="comment"># &amp;实现了反向引用</span></span><br><span class="line"></span><br><span class="line">$ sed -i <span class="string">&#x27;s/\(had..p\)/\1O/g&#x27;</span> demo.txt <span class="comment"># \1实现了反向引用 更加灵活 需要\(\)</span></span><br><span class="line"></span><br><span class="line">$ sed -i <span class="string">&#x27;s/\(had\).../\1doop/g&#x27;</span> demo.txt</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># 脚本写法</span></span></span><br><span class="line"></span><br><span class="line">old_str=hadoop</span><br><span class="line">new_str=HADOOP</span><br><span class="line"></span><br><span class="line">sed -i &quot;s/$old_str/$new_str/g&quot; demo.txt # 当作变量的话使用双引号</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除操作</span></span><br><span class="line">$ sed -i <span class="string">&#x27;15d&#x27;</span> /etc/passwd <span class="comment"># 删除第15行</span></span><br><span class="line"></span><br><span class="line">$ sed -i <span class="string">&#x27;8,14d&#x27;</span> /etc/passwd <span class="comment"># 删除8-14行</span></span><br><span class="line"></span><br><span class="line">$ sed -i <span class="string">&#x27;/\/sbin\/nologin/d&#x27;</span> /etc/passwd</span><br><span class="line"></span><br><span class="line">$ sed -i <span class="string">&#x27;/^mail/,/^yarn/d&#x27;</span> /etc/passwd</span><br><span class="line"></span><br><span class="line">$ sed -i <span class="string">&#x27;/\/sbin\/nologin/, 13d&#x27;</span> /etc/passwd</span><br><span class="line"></span><br><span class="line">$ sed -i <span class="string">&#x27;5, /^ftp/d&#x27;</span> /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除所有的注释行与空行</span></span><br><span class="line">$ sed -i <span class="string">&#x27;/^$/d;/[:blank:]*#/d&#x27;</span> nginx.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在不是#开头加*号</span></span><br><span class="line">$ sed -i <span class="string">&#x27;/^[^#]/\*&amp;/g&#x27;</span> nginx.conf</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改操作</span></span><br><span class="line">$ sed -i <span class="string">&#x27;1s/root/ROOT&#x27;</span> passwd <span class="comment"># 第一行中第一个</span></span><br><span class="line"></span><br><span class="line">$ sed -i <span class="string">&#x27;5,10s/\/sbin\/nologin\/bin\/bash/g&#x27;</span> <span class="comment"># 5-10行所有</span></span><br><span class="line"></span><br><span class="line">$ sed -i <span class="string">&#x27;/\sbin\/nologin/s/login/LOGIN/g&#x27;</span> <span class="comment"># 匹配到/sbin/nologin的行中把login换大写</span></span><br><span class="line"></span><br><span class="line">$ sed -i <span class="string">&#x27;/^root/, 15s/nologin/SPARK/g&#x27;</span> passwd <span class="comment"># 匹配到root开头到15行替换</span></span><br><span class="line"></span><br><span class="line">$ sed -i <span class="string">&#x27;s/[0-9]*//g&#x27;</span> file.txt <span class="comment"># 删除数字</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 追加内容</span></span><br><span class="line">$ sed -i <span class="string">&#x27;10a Add Line&#x27;</span> /etc/passwd <span class="comment"># 第10行下面加一行</span></span><br><span class="line">$ sed -i <span class="string">&#x27;10,20a Add Line&#x27;</span> /etc/passwd <span class="comment"># 10-20每一行下面加一行</span></span><br><span class="line">$ sed -i <span class="string">&#x27;/\/bin\/bash/a Insert Line&#x27;</span> /etc/passwd <span class="comment"># 匹配到/bin/bash加</span></span><br><span class="line"></span><br><span class="line">$ sed -i <span class="string">&#x27;/^yarn/i Add Line before&#x27;</span> /etc/passwd</span><br><span class="line">$ sed -i <span class="string">&#x27;i Line before&#x27;</span> /etc/passwd <span class="comment"># 每一行前面</span></span><br><span class="line"></span><br><span class="line">$ sed -i <span class="string">&#x27;20r /etc/fstab&#x27;</span> /etc/passwd <span class="comment"># 20行后面</span></span><br><span class="line">$ sed -i <span class="string">&#x27;\/bin\/bash/r /etc/fstab&#x27;</span> /etc/passwd <span class="comment"># 匹配到的加</span></span><br><span class="line"></span><br><span class="line">$ sed -i <span class="string">&#x27;\/bin\/bash/w /tmp/demo.txt&#x27;</span> /etc/passwd </span><br><span class="line">$ sed -i <span class="string">&#x27;10,/^hdfs/w /tmp/demo.txt&#x27;</span> /etc/passwd </span><br></pre></td></tr></table></figure><h3 id="awk">awk</h3><blockquote><p>awk ‘BEGIN{}pattern{commands}END{}’ file</p><ul><li>BEGIN{} 正式处理之前先执行</li><li>pattern 匹配模式</li><li>{commands} 处理命令，可能多行</li><li>END{} 处理完所有匹配数据后执行</li></ul></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># awk中的常用选项</span></span><br><span class="line"><span class="comment"># -v 参数传递</span></span><br><span class="line"><span class="comment"># -f 指定脚本文件</span></span><br><span class="line"><span class="comment"># -F 指定分隔符号</span></span><br><span class="line"><span class="comment"># -V 查看awk版本号</span></span><br><span class="line"></span><br><span class="line">$ awk -v num2=<span class="string">&quot;<span class="variable">$num2</span>&quot;</span> <span class="string">&#x27;BEGIN&#123;print num2&#125;&#x27;</span> <span class="comment"># 外部的变量引入awk</span></span><br><span class="line">$ awk -F <span class="string">&quot;:&quot;</span> <span class="string">&#x27;&#123;print $1&#125;&#x27;</span> <span class="comment"># 可以使用F来指定分隔符</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># $0 整行内容</span></span><br><span class="line"><span class="comment"># $1-n 为当前行的第几个（可以自己切）</span></span><br><span class="line"><span class="comment"># NF 当前行的字段个数</span></span><br><span class="line"><span class="comment"># NR 当前行的行号</span></span><br><span class="line"><span class="comment"># FNR 从0开始，多个文件</span></span><br><span class="line"><span class="comment"># FS 输入字段分隔符 不指定为空格或者Tab</span></span><br><span class="line"><span class="comment"># RS 输入行分隔符 默认为回车</span></span><br><span class="line"><span class="comment"># OFS 输入字段分隔符 默认为空格</span></span><br><span class="line"><span class="comment"># ORS 输出行分隔符</span></span><br><span class="line"><span class="comment"># FILENAME 当前输入文件名字</span></span><br><span class="line"><span class="comment"># ARGC 命令行参数个数</span></span><br><span class="line"><span class="comment"># ARGV 命令行参数数组</span></span><br><span class="line"></span><br><span class="line">$ awk <span class="string">&#x27;&#123;print $0&#125;&#x27;</span> /etc/passwd <span class="comment"># 输出全部</span></span><br><span class="line">$ awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;&#123;print $1&#125;&#x27;</span> /etc/passwd</span><br><span class="line">$ awk <span class="string">&#x27;&#123;print NF&#125;&#x27;</span> /etc/passwd <span class="comment"># 查看分隔后每行的字段个数</span></span><br><span class="line">$ awk <span class="string">&#x27;BEGIN&#123;RS=&quot;--&quot;;FS=&quot;|&quot;;ORS=&quot;&amp;&quot;&#125;&#123;print $2&#125;&#x27;</span> /etc/passwd <span class="comment"># 自己分行自己切</span></span><br><span class="line">$ awk <span class="string">&#x27;BEGIN&#123;RS=&quot;--&quot;;FS=&quot;|&quot;;ORS=&quot;&amp;&quot;;OFS=&quot;:&quot;&#125;&#123;print $2,$3&#125;&#x27;</span> /etc/passwd</span><br><span class="line">$ awk <span class="string">&#x27;&#123;print $NF&#125;&#x27;</span> /etc/passwd <span class="comment"># 可以作为变量</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># printf 格式化输出</span></span><br><span class="line"><span class="comment"># s 字符串 # d 十进制</span></span><br><span class="line"><span class="comment"># f 浮点数 # x 十六进制 # o 八进制</span></span><br><span class="line"><span class="comment"># e 科学技术码 # c 单个字符的ASCII</span></span><br><span class="line"></span><br><span class="line">$ awk <span class="string">&#x27;&#123;printf &quot;%s\n&quot;, $1&#125;&#x27;</span> /etc/passwd</span><br><span class="line">$ awk <span class="string">&#x27;&#123;printf &quot;%s %s\n&quot;, $1, $7&#125;&#x27;</span> /etc/passwd</span><br><span class="line">$ awk <span class="string">&#x27;&#123;printf &quot;10%s 10%s\n&quot;, $1, $7&#125;&#x27;</span> /etc/passwd</span><br><span class="line">$ awk <span class="string">&#x27;&#123;printf &quot;%-20s %-10s\n&quot;, $1, $7&#125;&#x27;</span> /etc/passwd <span class="comment"># 左对齐</span></span><br><span class="line">$ awk <span class="string">&#x27;&#123;printf &quot;%#x\n&quot;, $1&#125;&#x27;</span> /etc/passwd <span class="comment"># 十六进制</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 模式匹配</span></span><br><span class="line"><span class="comment"># 1. 正则匹配</span></span><br><span class="line"><span class="comment"># 2. 关系表达</span></span><br><span class="line">$ awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;/root/&#123;print $0&#125;&#x27;</span> /etc/passwd</span><br><span class="line">$ awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;/^yarn/&#123;print $0&#125;&#x27;</span> /etc/passwd</span><br><span class="line"></span><br><span class="line">$ awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;$3&lt;50&#123;print $0&#125;&#x27;</span> /etc/passwd</span><br><span class="line">$ awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;$7==&quot;/bin/bash&quot;&#123;print $0&#125;&#x27;</span> /etc/passwd</span><br><span class="line">$ awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;$3~/[0-9]&#123;3,&#125;/&#123;print $0&#125;&#x27;</span> /etc/passwd <span class="comment"># 第三个能匹配到3个数字 ～ 为匹配符号</span></span><br><span class="line">$ awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;$1==&quot;root&quot; || $1==&quot;yarn&quot; &#123;print $0&#125;&#x27;</span> /etc/passwd</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 动作操作</span></span><br><span class="line">$ awk <span class="string">&#x27;BEGIN&#123;var=20+10;var1=&quot;hello&quot;;print var&#125;&#x27;</span></span><br><span class="line">$ awk <span class="string">&#x27;/^$/&#123;sum++&#125;END&#123;print sum&#125;&#x27;</span> /etc/passwd <span class="comment"># 计算空白行</span></span><br><span class="line">$ awk <span class="string">&#x27;&#123;total=$2+$3+$4;AVG=total/3;printf &quot;%-8s%5d%5d%5d%5f\n&quot;, $1,$2,$3,$4,AVG&#125;&#x27;</span> student.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 条件语句</span></span><br><span class="line">$ awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;&#123;if ($3 &lt; 100 &amp;&amp; $3 &gt; 50) print $0&#125;&#x27;</span> /etc/passwd</span><br><span class="line">$ awk <span class="string">&#x27;BEGIN&#123;FS=&quot;:&quot;&#125;&#123;if ($3 &lt; 100 &amp;&amp; $3 &gt; 50) &#123;print $0&#125; else &#123;print $0&#125;&#125;&#x27;</span> /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环</span></span><br><span class="line">$ awk <span class="string">&#x27;BEGIN&#123;while(i &lt; 100)&#123;sum+=i;i++&#125;print sum&#125;&#x27;</span> /etc/passwd</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 字符串内置函数</span></span><br><span class="line"><span class="comment"># length(str)</span></span><br><span class="line"><span class="comment"># index(str1, str2)</span></span><br><span class="line"><span class="comment"># tolower(str)</span></span><br><span class="line"><span class="comment"># toupper(str)</span></span><br><span class="line"><span class="comment"># substr(str, m, n)</span></span><br><span class="line"><span class="comment"># split(str, arr , fs)</span></span><br><span class="line"><span class="comment"># sub(RE, RepStr, str)</span></span><br><span class="line"><span class="comment"># gsub(RE, RepStr, str)</span></span><br><span class="line"></span><br><span class="line">$ awk <span class="string">&#x27;&#123;print length($1)&#125;&#x27;</span> /etc/passwd</span><br></pre></td></tr></table></figure><p>数组的使用暂时用不上，就先不做笔记了</p>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Mac优化 zsh 的启动速度(M1)</title>
      <link href="/posts/d155260a.html"/>
      <url>/posts/d155260a.html</url>
      
        <content type="html"><![CDATA[<h2 id="起因：">起因：</h2><p>不知道何时何地我更新了个啥；我的终端开启就是十分的卡</p><p>卡到什么程度？卡到新开一个快20秒了；已经够离谱了吧，我就想来解决下这个问题</p><p>下面几乎没有图图了，因为是复盘，当时没截图，请耐心看完应该能解决</p><h2 id="经过：">经过：</h2><p>我直接谷歌：Mac终端开启过慢，然后开始看内容；发现就几个点。</p><ol><li>首先是以<a href="https://blog.csdn.net/Bobby_world/article/details/79673790">Mac终端启动很慢解决方案</a>各种转发出现的删除日志文件就行了。</li></ol><p>好嘛，我删除，发现并没有什么niao用，其实一般看这种帖子就不行，还是忍不住试了试</p><ol start="2"><li>发现<a href="https://zhuanlan.zhihu.com/p/464117825">知乎好文—优化 zsh 的启动速度</a></li></ol><p>这个写的还是挺全的，并且里面外链内容都挺高质量的；但是我试了这个命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/bin/time /bin/zsh -i -c <span class="built_in">exit</span></span><br><span class="line">$ /usr/bin/time /bin/bash -i -c <span class="built_in">exit</span></span><br></pre></td></tr></table></figure><p>好的结果也就<code>real 0.26</code>当然也就是不符合这类情况；然后我就发现了<a href="https://zhuanlan.zhihu.com/p/68303393">知乎解决zsh启动速度慢的优化方法</a></p><p>其实吧2篇文章都是一个意思；但是还是跟着做了；有2个坑：</p><p><code>brew install qcachegrind --with-graphviz</code> 改为 <code>brew install qcachegrind</code></p><p><code>opam install ocamlfind</code> arm结构不对；到这里其实就气的想重置电脑了，但是换了个思路</p><ol start="3"><li>发现<a href="https://wxnacy.com/2019/04/04/zsh-speed-optimization/">Zsh 加载速度优化</a></li></ol><p>发现了我应该直接根据zsh启动生命周期开看看会加载什么；也就是说完整的文件加载过程</p><p>前面只是涉及了某些部分文件；简单看了看那么就是：</p><p><strong>当打开新的 Terminal 时，配置加载顺序为 ~/.zshenv ~/.zprofile ~/.zshrc ~/.zlogin</strong></p><p><strong>执行 zsh 时，配置加载顺序为 ~/.zshenv ~/.zshrc</strong></p><p>成功，我在<code>~/.zprofile</code>发现了一条brew命令重复了1000多条！删除重新加载，1-2秒；完美！</p><h2 id="总结：">总结：</h2><p>可以从 <a href="https://wxnacy.com/2018/10/08/zsh-startup-files/">Zsh 配置文件加载顺序</a> 从Zsh 配置文件的生命周期下手，每个文件夹看看。</p>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>M1芯片实现Kail虚拟机(无Parallels)</title>
      <link href="/posts/11d32e85.html"/>
      <url>/posts/11d32e85.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>我发现M1芯片想实现虚拟机是真的费劲。我开始找Windows资源(必要时平台会限制)，找不到。结果淘宝解君愁。这下好了Parallels的PD启动好像给了window系统。然后我有14天试用，我是可以直接下载虚拟机，但是我过期了我也不知道会是个什么情况。所以我就另辟蹊径，我根据docker官方的kail镜像自己打包个不好嘛。（以及Ubuntu都是一个道理）</p><h2 id="为啥不想云容器">为啥不想云容器</h2><p>首先我的教程已经写的非常详细了，几乎只需要复制运行就好了。然后在2022年了有的地方变了，挺多坑都绕过来了。</p><p>如果你实在不想动手想直接白嫖(*￣︿￣)，可以到我的仓库看看👉<a href="https://hub.docker.com/repository/docker/hengyisky/daily">仓库地址</a></p><p>但是<strong>我还是建议按照下面花点时间</strong>，因为我上传上去的10G不到而我本地有20G+，肯定很多都阉割了</p><div class="note green icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>里面的坑包括但不限于：</p><ol><li>包过期了找不到了</li><li>CPU编译的设置与优化</li><li>包安装等待<br>…</li></ol></div><h2 id="开始慢慢搞得像个系统">开始慢慢搞得像个系统</h2><p>先去官网找到官方镜像：发现支持arm，那就好办了。</p><img src="/img/mics/202203112311539.webp" alt="" style="width:80%;" /><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ docker pull kalilinux/kali-rolling:latest</span><br><span class="line">$ docker images</span><br><span class="line">$ docker run -<span class="built_in">id</span>  --restart=always --name=kali --cpus=2 -p 2222:22 -p 4888:4500 $(<span class="built_in">id</span>) <span class="comment"># &lt;=填写</span></span><br><span class="line">$ docker ps -a <span class="comment"># 查看状态</span></span><br><span class="line">$ docker <span class="built_in">exec</span> -it kali /bin/bash <span class="comment"># 进入命令行</span></span><br><span class="line">$ passwd root <span class="comment"># 修改命令</span></span><br><span class="line"><span class="comment"># 开始换源</span></span><br><span class="line">$ <span class="built_in">cp</span> /etc/apt/sources.list /etc/apt/sources.list.bak &amp;&amp; <span class="built_in">rm</span> /etc/apt/sources.list</span><br><span class="line">$ <span class="built_in">cd</span> /etc/apt</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&#x27;deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib&#x27;</span> &gt;&gt; /etc/apt/sources.list</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&#x27;deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib&#x27;</span> &gt;&gt; ./sources.list</span><br><span class="line">$ apt-get update &amp;&amp; apt-get upgrade &amp;&amp; apt install vim curl git wget</span><br><span class="line"><span class="comment"># 把下面的继续写入sources.list</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;deb http://mirrors.ustc.edu.cn/kali kali-rolling main contrib non-free&quot;</span> &gt;&gt; /etc/apt/sources.list</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;deb-src http://mirrors.ustc.edu.cn/kali kali-rolling main contrib non-free&quot;</span> &gt;&gt; /etc/apt/sources.list</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;deb http://mirrors.ustc.edu.cn/kali-security kali-current/updates main contrib non-free&quot;</span> &gt;&gt; /etc/apt/sources.list</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;deb-src http://mirrors.ustc.edu.cn/kali-security kali-current/updates main contrib non-free&quot;</span> &gt;&gt; /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>开始搞双Python与SSH登陆</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get -y install net-tools openssh-server python2.7</span><br><span class="line">$ apt install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libsqlite3-dev libreadline-dev libffi-dev curl libbz2-dev</span><br><span class="line">$ <span class="built_in">cd</span> ~ &amp;&amp; wget https://www.python.org/ftp/python/3.9.1/Python-3.9.1.tgz &amp;&amp; tar -xf Python-3.9.1.tgz &amp;&amp; <span class="built_in">cd</span> Python-3.9.1</span><br><span class="line">$ ./configure --enable-optimizations</span><br><span class="line">$ make -j 4 &amp;&amp; make altinstall</span><br><span class="line">$ python3.9 --version</span><br><span class="line">$ apt install python3-pip</span><br><span class="line">$ wget https://bootstrap.pypa.io/pip/2.7/get-pip.py &amp;&amp; python2.7 get-pip.py</span><br><span class="line"></span><br><span class="line">$ vim ~/.bashrc</span><br><span class="line"><span class="comment"># 将下面的写入</span></span><br><span class="line"><span class="comment"># alias pip=/usr/local/bin/pip2.7</span></span><br><span class="line"><span class="comment"># alias pip3=/usr/local/bin/pip3.9</span></span><br><span class="line"><span class="comment"># alias python=/usr/bin/python2.7</span></span><br><span class="line"><span class="comment"># alias python3=/usr/local/bin/python3.9</span></span><br><span class="line">$ <span class="built_in">source</span> ~/.bashrc</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;PermitRootLogin yes&quot;</span> &gt;&gt; /etc/ssh/sshd_config &amp;&amp; service ssh restart</span><br></pre></td></tr></table></figure><img src="/img/mics/202203120152396.webp" alt="" style="width: 67%;" /><h2 id="SSH上去的效果">SSH上去的效果</h2><img src="/img/mics/202203120954020.webp" alt="image-20220312015300950" style="width:67%;" /><p>把kail核心工具包装上：很大！</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get update &amp;&amp; apt-get upgrade</span><br><span class="line">$ apt-get install kali-linux-everything</span><br></pre></td></tr></table></figure><h2 id="保存容器为镜像与文件挂载">保存容器为镜像与文件挂载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 退出</span></span><br><span class="line">$ <span class="built_in">exit</span></span><br><span class="line"><span class="comment"># 停掉</span></span><br><span class="line">$ docker stop kali</span><br><span class="line"><span class="comment"># 保存为image</span></span><br><span class="line">$ docker commit d46ea163bd90 hengyisky/daily:kail2022</span><br><span class="line"><span class="comment"># 删除container并挂载文件</span></span><br><span class="line">$ docker <span class="built_in">rm</span> -f kali</span><br><span class="line">$ docker run -<span class="built_in">id</span>  -v /xxx/xxx:/root/vol  --restart=always --name=kali --cpus=2 -p 2222:22 -p 4888:4500 63ddce7ec717</span><br><span class="line"><span class="comment"># 再次进入</span></span><br><span class="line">$ docker <span class="built_in">exec</span> -it kali /bin/bash</span><br></pre></td></tr></table></figure><img src="/img/mics/202203120949492.webp" alt="" style="width:67%;" />]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu下Corntab找出报错原因</title>
      <link href="/posts/2c7b2295.html"/>
      <url>/posts/2c7b2295.html</url>
      
        <content type="html"><![CDATA[<h2 id="起因：">起因：</h2><p>事情的起因是：我的自动打卡在我加入了<code>Firefox拓展</code>之后开始失效了</p><p>我手动执行完完全全Ok的，一到自动运行就GG了</p><p>然后我设置每分钟运行一次观察CPU状态发现<code>Firefox</code>会启动但是几秒后就没了</p><p>好家伙，去找日志啥都没有。经过我的捣鼓直接放答案。</p><h2 id="打开Crontab日志">打开Crontab日志</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vi /etc/rsyslog.d/50-default.conf</span><br><span class="line"><span class="comment"># 把cron.*前面的注释去掉</span></span><br><span class="line">:wq</span><br><span class="line"></span><br><span class="line">$ sudo service rsyslog restart</span><br><span class="line">$ <span class="built_in">cd</span> /var/log</span><br><span class="line">$ <span class="built_in">cat</span> cron.log</span><br></pre></td></tr></table></figure><p>到这里只能查看到执行日志，也就是说看到执行状况而看不到报错</p><h2 id="安装postfix">安装postfix</h2><p>我想起了在Linux下每次执行完毕后会有个打印说的是到<code>/var/mail</code>，那里会详细说明执行情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install postfix</span><br><span class="line"><span class="comment"># 会进入一个设置界面</span></span><br><span class="line"><span class="comment"># 全部默认然后全部选择OK/SELECT啥的</span></span><br><span class="line">$ crontab -e </span><br><span class="line"><span class="comment"># MAILTO=example@gmail.com 写入文件</span></span><br><span class="line"><span class="comment"># 等待执行</span></span><br><span class="line">$ <span class="built_in">cd</span> /var/mail</span><br><span class="line">$ <span class="built_in">cat</span> ubuntu</span><br></pre></td></tr></table></figure><p>到这里查看对应用户的文件就能详细看到执行情况了</p><h2 id="结果">结果</h2><p>我的问题是在crontab下执行，路径文件找不到，我直接cp过去就成功了。</p><p>花了快一个小时捣鼓😭</p>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python浅谈多线程</title>
      <link href="/posts/6e07425f.html"/>
      <url>/posts/6e07425f.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言：">前言：</h2><p>只要玩过<strong>爬虫</strong>的，就知道线程的必要性。但是我学习线程的路子比较野～</p><p>所以学的不是那么<strong>系统</strong>，最近没事来看看把重要的部分都来掌握下。</p><p>然后也就“<strong>简简单单</strong>”水一篇重点部分（主要我怕后面忘记了QAQ）</p><h2 id="引入：">引入：</h2><p><code>什么是GIL?</code>  在实现Python解析器(CPython)时所引入的一个概念，GIL这把超级大锁，是加在全局上的</p><p>同一个时刻只有一个线程在一个cpu上执行字节码, 无法将多个线程映射到多个cpu上执行</p><p>但是GIL会主动释放：1. 根据执行的字节码行数以及时间片释放；2. 在遇到io的操作时候主动释放</p><blockquote><p><em>In CPython, the global interpreter lock, or GIL, is a mutex that prevents multiple native threads from executing Python bytecodes at once. This lock is necessary mainly because CPython’s memory management is not thread-safe. (However, since the GIL exists, other features have grown to depend on the guarantees that it enforces.)</em></p></blockquote><p>看个例子：这个怎么都不会实现为0。具体如何解决看后面</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">total = <span class="number">0</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>():</span><br><span class="line">    <span class="keyword">global</span> total</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000000</span>):</span><br><span class="line">        total += <span class="number">1</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">desc</span>():</span><br><span class="line">    <span class="keyword">global</span> total</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000000</span>):</span><br><span class="line">        total -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">thread1 = threading.Thread(target=add)</span><br><span class="line">thread2 = threading.Thread(target=desc)</span><br><span class="line">thread1.start()</span><br><span class="line">thread2.start()</span><br><span class="line"><span class="built_in">print</span>(total)</span><br></pre></td></tr></table></figure><h2 id="Thread的基础">Thread的基础</h2><p>这里面的几个点：</p><ol><li>除了最基础的写法，还可以继承<code>threading.Thread</code>重构方法：例如Run方法，将逻辑写在里面</li><li>使用多线程的基本API的掌握，这里就不贴每个API什么意思。翻翻文档就好啦</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GetDetailHtml</span>(threading.Thread):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(name=name)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;get detail html started&quot;</span>)</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;get detail html end&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">GetDetailUrl</span>(threading.Thread):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__(name=name)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;get detail url started&quot;</span>)</span><br><span class="line">        time.sleep(<span class="number">4</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;get detail url end&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    thread1 = GetDetailHtml(<span class="string">&quot;get_detail_html&quot;</span>)</span><br><span class="line">    thread2 = GetDetailUrl(<span class="string">&quot;get_detail_url&quot;</span>)</span><br><span class="line">    start_time = time.time()</span><br><span class="line">    thread1.start()</span><br><span class="line">    thread2.start()</span><br><span class="line">    thread1.join()</span><br><span class="line">    thread2.join()</span><br><span class="line">    <span class="comment"># 当主线程退出的时候， 子线程kill掉</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;last time: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(time.time() - start_time))</span><br></pre></td></tr></table></figure><h2 id="多个线程之间的变量">多个线程之间的变量</h2><blockquote><p>会产生需求就是，大家同时操作一个变量。这个变量可以穿梭在各个线程之间</p></blockquote><p>当然这里有个很大的BUG，我当时就很疑惑🤔.</p><p>就是加入现在有2个文件，其中一个是<code>utils.py</code>文件中的一个变量test</p><p>如果你是 <code>import utils</code>然后使用的是<code>utils.test</code>这个的话是可以的</p><p>但是你是<code>from utils import test</code>使用<code>test</code>的话，不管你怎么改变，他就算一个定值了</p><p>我当时就很疑惑为什么<code>flag</code>变量无法是<code>while</code>退出，现在知道避坑了。</p><p>说了这么多，其实就是2个方式</p><ol><li>使用<code>gloabl全局变量</code></li><li>使用<code>queue</code>（推荐）,具体的API翻翻文档/源码都行，不多赘述</li></ol><h2 id="花里胡哨的锁">花里胡哨的锁</h2><h3 id="Lock、RLock">Lock、RLock</h3><blockquote><p>使用锁就很好解决了上面的问题，就可以得到答案为0</p></blockquote><p><code>Lock</code>与<code>RLock</code>的唯一区别就是有效减少死锁的发生</p><p>他们都有共同的<code>.acquire()</code>与<code>.release()</code>这个两个方式</p><p>但是<code>lock.acquire()</code>在不经意之间使用了2次，则会互相等待发生死锁，都不会动了</p><p>而<code>RLock.acquire()</code>可以使用多次并且多次释放，减少死锁竞争的情况。</p><h3 id="condition-使用">condition 使用</h3><blockquote><p>这个使用的情况是：假设现在有2个线程，线程a执行完毕之后呢线程b再执行，线程b执行完毕之后呢再执行线程a</p><p>互相通知对方，多线执行，但可以实现交替</p></blockquote><p>特别注意： 启动的顺序很重要‼️</p><p>掌握2个API： <code>.notify()</code>与<code>.wait()</code>顾名思义：一个通知一个等待</p><p><code>通知</code>就是通知等待的对方你可以开始执行了，<code>等待</code>就是等待对方来通知我</p><h3 id="Semaphore-使用">Semaphore 使用</h3><blockquote><p>这个使用的情况就是：for循环的话一下子启动20个循环，设备顶不住。</p><p>使用Semaphore就可以决定一次性开启多少个</p></blockquote><p>课上这个例子比较经典：</p><p>注意<code>.release()</code>与<code>sem.acquire()</code>的位置</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HtmlSpider</span>(threading.Thread):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, url, sem</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.url = url</span><br><span class="line">        self.sem = sem</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        time.sleep(<span class="number">2</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;got html text success&quot;</span>)</span><br><span class="line">        self.sem.release()</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UrlProducer</span>(threading.Thread):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, sem</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.sem = sem</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>):</span><br><span class="line">            self.sem.acquire()</span><br><span class="line">            html_thread = HtmlSpider(<span class="string">&quot;https://baidu.com/&#123;&#125;&quot;</span>.<span class="built_in">format</span>(i), self.sem)</span><br><span class="line">            html_thread.start()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    sem = threading.Semaphore(<span class="number">3</span>)</span><br><span class="line">    url_producer = UrlProducer(sem)</span><br><span class="line">    url_producer.start()</span><br></pre></td></tr></table></figure><h2 id="线程池的使用">线程池的使用</h2><blockquote><p>线程池相比较于多线程，更加具有智能化，说白了就是更加省心</p></blockquote><p>为什么要线程池 ?</p><ol><li>主线程中可以获取某一个线程的状态或者某一个任务的状态，以及返回值</li><li>当一个线程完成的时候我们主线程能立即知道</li><li><code>from concurrent.futures import Future</code>的futures和多进程编码接口一致</li></ol><p>最好自己改一下使用with上下文<code>with ThreadPoolExecutor(3) as executor:</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 一个个提交</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> concurrent.futures <span class="keyword">import</span> ThreadPoolExecutor</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_html</span>(<span class="params">times</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;start sleep &#123;&#125;&quot;</span>.<span class="built_in">format</span>(times))</span><br><span class="line">    time.sleep(times)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;get page &#123;&#125; success&quot;</span>.<span class="built_in">format</span>(times))</span><br><span class="line">    <span class="keyword">return</span> times</span><br><span class="line"></span><br><span class="line">executor = ThreadPoolExecutor(max_workers=<span class="number">1</span>)</span><br><span class="line">task = executor.submit(get_html, <span class="number">3</span>)  <span class="comment"># submit 是立即返回</span></span><br><span class="line">task2 = executor.submit(get_html, <span class="number">2</span>)  <span class="comment"># submit 是立即返回</span></span><br><span class="line"><span class="built_in">print</span>(task.done())  <span class="comment"># 执行完成没</span></span><br><span class="line"><span class="built_in">print</span>(task2.cancel())  <span class="comment"># 因为总的线程为1 task2没有执行 所以可以取消</span></span><br><span class="line">time.sleep(<span class="number">4</span>)</span><br><span class="line"><span class="built_in">print</span>(task.done())</span><br><span class="line"><span class="built_in">print</span>(task.result())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 批量提交</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> concurrent.futures <span class="keyword">import</span> ThreadPoolExecutor, as_completed, wait</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_html</span>(<span class="params">times</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;start sleep &#123;&#125;&quot;</span>.<span class="built_in">format</span>(times))</span><br><span class="line">    time.sleep(times)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;get page &#123;&#125; success&quot;</span>.<span class="built_in">format</span>(times))</span><br><span class="line">    <span class="keyword">return</span> times</span><br><span class="line"></span><br><span class="line">oneList = [<span class="number">2</span>, <span class="number">4</span>, <span class="number">3</span>]</span><br><span class="line">executor = ThreadPoolExecutor(max_workers=<span class="number">2</span>)</span><br><span class="line"><span class="comment"># allTask = [executor.submit(get_html, each) for each in oneList]</span></span><br><span class="line"><span class="comment"># wait(allTask)  # 所有线程执行完毕再走</span></span><br><span class="line"><span class="comment"># # 一旦有完成的了就能获取到(谁先完成)</span></span><br><span class="line"><span class="comment"># for future in as_completed(allTask):  # 获取到已经完成的了</span></span><br><span class="line"><span class="comment">#     data = future.result()</span></span><br><span class="line"><span class="comment">#     print(&quot;! get &#123;&#125;&quot;.format(str(data)))</span></span><br><span class="line"><span class="comment"># 换个写法 (但是会按照oneList的顺序）</span></span><br><span class="line"><span class="keyword">for</span> data <span class="keyword">in</span> executor.<span class="built_in">map</span>(get_html, oneList):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;! get &#123;&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(data)))</span><br></pre></td></tr></table></figure><h2 id="多进程编程">多进程编程</h2><blockquote><ul><li><p>耗cpu的操作，用多进程编程，</p></li><li><p>对于io操作来说， 使用多线程编程</p></li><li><p>进程切换代价要高于线程</p></li></ul></blockquote><p>一般都是用多线程，多进程与多线程的库使用差不多～</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> concurrent.futures <span class="keyword">import</span> ProcessPoolExecutor, as_completed</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">random_sleep</span>(<span class="params">n</span>):</span><br><span class="line">    time.sleep(n)</span><br><span class="line">    <span class="keyword">return</span> n</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    <span class="keyword">with</span> ProcessPoolExecutor(<span class="number">3</span>) <span class="keyword">as</span> executor:</span><br><span class="line">        all_task = [executor.submit(random_sleep, (num)) <span class="keyword">for</span> num <span class="keyword">in</span> [<span class="number">2</span>] * <span class="number">30</span>]</span><br><span class="line">        start_time = time.time()</span><br><span class="line">        <span class="keyword">for</span> future <span class="keyword">in</span> as_completed(all_task):</span><br><span class="line">            data = future.result()</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;exe result: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(data))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;last time is: &#123;&#125;&quot;</span>.<span class="built_in">format</span>(time.time() - start_time))</span><br></pre></td></tr></table></figure><hr><ol><li>共享全局变量在多进程中是不使用的</li><li>multiprocessing中的queue不能用于pool进程池</li><li>pool中的进程间通信需要使用manager中的queue</li><li>使用Pipe通信，但是只能适用于2个进程</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> queue <span class="keyword">import</span> Queue <span class="comment"># 多进程不能用</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Queue <span class="comment"># 正常的多进程使用</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Manager <span class="comment"># pool里面使用</span></span><br><span class="line">Manager().Queue() </span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> multiprocessing <span class="keyword">import</span> Pipe</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu纯命令行走Clash终端代理(Linux同理)</title>
      <link href="/posts/3dadfa74.html"/>
      <url>/posts/3dadfa74.html</url>
      
        <content type="html"><![CDATA[<h2 id="Ubuntu纯命令行走Clash代理-Linux同理">Ubuntu纯命令行走Clash代理(Linux同理)</h2><div class="note green icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>广告 ：<a href="https://hengy1.top/article/567e1422.html">https://hengy1.top/article/567e1422.html</a></p></div><h2 id="布置环境">布置环境</h2><p>到 <a href="https://github.com/Dreamacro/clash/releases">https://github.com/Dreamacro/clash/releases</a> 找到最新版本</p><blockquote><p>这里吐槽下：可能一直拉不下来，手动下载然后ftp传上来</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建环境</span></span><br><span class="line">$ <span class="built_in">mkdir</span> clash</span><br><span class="line">$ <span class="built_in">cd</span> clash</span><br><span class="line"><span class="comment"># 拉取下来</span></span><br><span class="line">$ wget https://github.com/Dreamacro/clash/releases/download/v1.9.0/clash-linux-amd64-v1.9.0.gz</span><br><span class="line">$ gzip -d clash-linux-amd64-v1.9.0.gz</span><br><span class="line">$ <span class="built_in">mv</span> clash-linux-amd64-v1.9.0.gz clash</span><br><span class="line"><span class="comment"># 这里clash为二进制可以运行文件了</span></span><br><span class="line">$ chomd 755 clash</span><br></pre></td></tr></table></figure><h2 id="传入配置">传入配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 生成默认配置</span></span><br><span class="line">$ ./clash -d .  <span class="comment"># 默认配置</span></span><br><span class="line"><span class="comment"># 拉取机场配置</span></span><br><span class="line">$ wget xxxx <span class="comment"># 要么拉下来 要么自己拷贝上来</span></span><br><span class="line"><span class="comment"># 注意： 名称为：config.yaml</span></span><br><span class="line">$ ./clash -d . <span class="comment"># 就开始加载你的配置了</span></span><br></pre></td></tr></table></figure><img src="/img/mics/image-20220222194004626.webp" alt="image-20220222194004626" style="zoom:85%;" /><h2 id="日常使用">日常使用</h2><p>你会发现这个已取消就失效了，下面我们添加到后台(建议为root用户)</p><ol><li><code>vim ~/..bashrc  </code>开始准备命令并把下面的写进入</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">alias</span> clash_start=<span class="string">&quot;screen -S clash /home/xxx/clash/clash -d /home/xxx/clash/&quot;</span></span><br><span class="line"><span class="built_in">alias</span> clash_stop=<span class="string">&quot;pkill clash&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">alias</span> proxy_on=<span class="string">&quot;export https_proxy=127.0.0.1:7890 &amp;&amp; export http_proxy=127.0.0.1:7890&quot;</span></span><br><span class="line"><span class="built_in">alias</span> proxy_off=<span class="string">&quot;unset http_proxy https_proxy&quot;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><code>source ~/..bashrc </code> 重新载入</li><li><code>clash_start</code>会进入screen 按 <code>ctrl + a + d</code>退出后台</li><li><code>proxy_on</code>开启代理</li><li><code>curl https://www.youtube.com/</code>会发现马上返回结果</li></ol><h2 id="github加速">github加速</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global http.proxy <span class="string">&#x27;http://127.0.0.1:7890&#x27;</span></span><br><span class="line">$ git config --global https.proxy <span class="string">&#x27;https://127.0.0.1:7890&#x27;</span></span><br></pre></td></tr></table></figure><div class="note pink icon-padding flat"><i class="note-icon fas fa-car-crash"></i><p>恭喜：速度起来了！<br>科学上网，规范行使。</p></div>]]></content>
      
      
      <categories>
          
          <category> 分享 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MAC上RabbitMQ从安装到用GO快速实现搬移</title>
      <link href="/posts/5fe856cc.html"/>
      <url>/posts/5fe856cc.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>最近在跟慕课做一个秒杀商城的小项目，接触了RabbitMQ</p><p>虽然平时是在Python中实现消息队列，但是不得不说RabbitMQ香呀</p><p>今天也是除夕，在这个祝大家<strong>新年快乐</strong>，发个小水文章吧QAQ</p><h2 id="安装开始">安装开始</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基础安装</span></span><br><span class="line">$ brew install rabbitmq</span><br><span class="line">$ vim ~/.zshrc <span class="comment"># 将 export PATH=$PATH:/usr/local/sbin 写入</span></span><br><span class="line">$ rabbitmq-server <span class="comment"># 重新打开终端，开启服务</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启插件</span></span><br><span class="line">$ rabbitmq-plugins list <span class="comment"># 查看插件</span></span><br><span class="line">$ rabbitmq-plugins <span class="built_in">enable</span> rabbitmq_management <span class="comment"># 启动管理插件</span></span><br><span class="line">$ rabbitmq-plugins <span class="built_in">enable</span> rabbitmq_tracing <span class="comment"># 启动日志</span></span><br><span class="line">$ rabbitmq-plugins <span class="built_in">disable</span> rabbitmq_tracing <span class="comment"># 关闭日志</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 额外命令</span></span><br><span class="line">$ rabbitmq-server -detached <span class="comment"># 后台启动</span></span><br><span class="line">$ rabbitmqctl status <span class="comment"># 查看状态</span></span><br><span class="line">$ rabbitmqctl stop <span class="comment"># 关闭</span></span><br></pre></td></tr></table></figure><h2 id="打好基础">打好基础</h2><blockquote><p>这些都是很基本的概念，你得明白什么是什么就好了</p><p>因为作为工具，首先要会用起来，会采用囫囵吞枣的模式学习</p><p>随着后面的深入，慢慢了解特点吧</p></blockquote><table><thead><tr><th style="text-align:center">概念</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">Channel</td><td style="text-align:center">生产者publish或是消费者subscribe一个队列都是通过信道来通信的</td></tr><tr><td style="text-align:center">Exchange</td><td style="text-align:center">exchange的作用就是类似路由器，服务器会根据路由键将消息从交换器路由到队列上去</td></tr><tr><td style="text-align:center">Queue</td><td style="text-align:center">队列收到的消息将发送给消费者</td></tr><tr><td style="text-align:center">Binding</td><td style="text-align:center">建立链接交换的绑定信息</td></tr><tr><td style="text-align:center">VirtualHost</td><td style="text-align:center">不同的隔离区，防止污染</td></tr><tr><td style="text-align:center">Connection</td><td style="text-align:center">建立的链接</td></tr></tbody></table><hr><table><thead><tr><th style="text-align:center">工作模式</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">simple</td><td style="text-align:center">最简单的收发模式</td></tr><tr><td style="text-align:center">work</td><td style="text-align:center">资源的竞争</td></tr><tr><td style="text-align:center">publish/subscribe</td><td style="text-align:center">共享资源</td></tr><tr><td style="text-align:center">routing</td><td style="text-align:center">只能匹配上路由key对应的消息队列,对应的消费者才能消费消息</td></tr><tr><td style="text-align:center">topic</td><td style="text-align:center">routing的一种模糊匹配</td></tr></tbody></table><h2 id="代码实现">代码实现</h2><h3 id="功能仓库文件">功能仓库文件</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// MQURL 连接信息 amqp://账号:密码@ip:host/vhost</span></span><br><span class="line"><span class="keyword">const</span> MQURL = <span class="string">&quot;amqp://guest:guest@127.0.0.1:5672/&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// RabbitMQ rabbitMQ结构体</span></span><br><span class="line"><span class="keyword">type</span> RabbitMQ <span class="keyword">struct</span> &#123;</span><br><span class="line">conn      *amqp.Connection <span class="comment">// 链接</span></span><br><span class="line">channel   *amqp.Channel    <span class="comment">// 通道</span></span><br><span class="line">QueueName <span class="type">string</span>           <span class="comment">//队列名称</span></span><br><span class="line">Exchange  <span class="type">string</span>           <span class="comment">//交换机名称</span></span><br><span class="line">Key       <span class="type">string</span>           <span class="comment">//bind Key 名称</span></span><br><span class="line">Mqurl     <span class="type">string</span>           <span class="comment">//连接信息</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// NewRabbitMQ 创建结构体实例</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewRabbitMQ</span><span class="params">(queueName <span class="type">string</span>, exchange <span class="type">string</span>, key <span class="type">string</span>)</span></span> *RabbitMQ &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;RabbitMQ&#123;QueueName: queueName, Exchange: exchange, Key: key, Mqurl: MQURL&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Destroy 断开 channel 和 connection</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *RabbitMQ)</span></span> Destroy() &#123;</span><br><span class="line">r.channel.Close() <span class="comment">// 断开 channel</span></span><br><span class="line">r.conn.Close()    <span class="comment">// 断开 conn</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 错误处理函数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *RabbitMQ)</span></span> failOnErr(err <span class="type">error</span>, message <span class="type">string</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;%s:%s&quot;</span>, message, err)         <span class="comment">// 打印错误</span></span><br><span class="line"><span class="built_in">panic</span>(fmt.Sprintf(<span class="string">&quot;%s:%s&quot;</span>, message, err)) <span class="comment">// 抛出错误</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// NewRabbitMQSimple 创建简单模式下RabbitMQ实例</span></span><br><span class="line"><span class="comment">// 在Simple模式下唯一不同的是 queueName</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewRabbitMQSimple</span><span class="params">(queueName <span class="type">string</span>)</span></span> *RabbitMQ &#123;</span><br><span class="line"><span class="comment">// todo 创建RabbitMQ实例</span></span><br><span class="line">rabbitmq := NewRabbitMQ(queueName, <span class="string">&quot;&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="keyword">var</span> err <span class="type">error</span></span><br><span class="line"><span class="comment">// todo 补上conn与channel</span></span><br><span class="line"><span class="comment">//获取connection</span></span><br><span class="line">rabbitmq.conn, err = amqp.Dial(rabbitmq.Mqurl)</span><br><span class="line">rabbitmq.failOnErr(err, <span class="string">&quot;failed to connect rabbitmq!&quot;</span>)</span><br><span class="line"><span class="comment">//获取channel</span></span><br><span class="line">rabbitmq.channel, err = rabbitmq.conn.Channel()</span><br><span class="line">rabbitmq.failOnErr(err, <span class="string">&quot;failed to open a channel&quot;</span>)</span><br><span class="line"><span class="keyword">return</span> rabbitmq</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// PublishSimple 简单模式下队列生产</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *RabbitMQ)</span></span> PublishSimple(message <span class="type">string</span>) &#123;</span><br><span class="line"><span class="comment">// todo 申请队列，如果队列不存在会自动创建，存在则跳过创建</span></span><br><span class="line">_, err := r.channel.QueueDeclare(</span><br><span class="line">r.QueueName, <span class="comment">// 首先放入名称</span></span><br><span class="line"><span class="literal">false</span>,       <span class="comment">//是否持久化</span></span><br><span class="line"><span class="literal">false</span>,       <span class="comment">//是否自动删除</span></span><br><span class="line"><span class="literal">false</span>,       <span class="comment">//是否具有排他性</span></span><br><span class="line"><span class="literal">false</span>,       <span class="comment">//是否阻塞处理</span></span><br><span class="line"><span class="literal">nil</span>,         <span class="comment">//额外的属性</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//todo 调用channel 发送消息到队列中</span></span><br><span class="line">r.channel.Publish(</span><br><span class="line">r.Exchange, <span class="comment">// 此处为空</span></span><br><span class="line">r.QueueName,</span><br><span class="line"><span class="literal">false</span>, <span class="comment">//如果为true，根据自身exchange类型和routeKey规则；无法找到符合条件的队列会把消息返还给发送者</span></span><br><span class="line"><span class="literal">false</span>, <span class="comment">//如果为true，当exchange发送消息到队列后发现队列上没有消费者，则会把消息返还给发送者</span></span><br><span class="line">amqp.Publishing&#123;</span><br><span class="line">ContentType: <span class="string">&quot;text/plain&quot;</span>,</span><br><span class="line">Body:        []<span class="type">byte</span>(message),</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ConsumeSimple 简单模式下消费者</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *RabbitMQ)</span></span> ConsumeSimple() &#123;</span><br><span class="line"><span class="comment">//todo 申请队列，如果队列不存在会自动创建，存在则跳过创建</span></span><br><span class="line">q, err := r.channel.QueueDeclare(</span><br><span class="line">r.QueueName,</span><br><span class="line"><span class="literal">false</span>, <span class="comment">//是否持久化</span></span><br><span class="line"><span class="literal">false</span>, <span class="comment">//是否自动删除</span></span><br><span class="line"><span class="literal">false</span>, <span class="comment">//是否具有排他性</span></span><br><span class="line"><span class="literal">false</span>, <span class="comment">//是否阻塞处理</span></span><br><span class="line"><span class="literal">nil</span>,   <span class="comment">//额外的属性</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//todo 接收消息</span></span><br><span class="line">msg, err := r.channel.Consume(</span><br><span class="line">q.Name, <span class="comment">// queue</span></span><br><span class="line"><span class="string">&quot;&quot;</span>,     <span class="comment">//用来区分多个消费者 此处不区分</span></span><br><span class="line"><span class="literal">true</span>,   <span class="comment">//是否自动应答</span></span><br><span class="line"><span class="literal">false</span>,  <span class="comment">//是否独有</span></span><br><span class="line"><span class="literal">false</span>,  <span class="comment">//设置为true，表示不能将同一个Connection中生产者发送的消息传递给这个Connection中的消费者</span></span><br><span class="line"><span class="literal">false</span>,  <span class="comment">// 是否阻塞处理</span></span><br><span class="line"><span class="literal">nil</span>,    <span class="comment">// 额外的属性</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">fmt.Println(err)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//todo 启用协程处理消息</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 此处使用forever的意思为因为协程会始终监听消息(除非手动结束)</span></span><br><span class="line"><span class="comment">// 手动结束才会进行 &lt;-forever 有协程且一直尝试读取数据</span></span><br><span class="line">forever := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">bool</span>)</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> d := <span class="keyword">range</span> msg &#123;</span><br><span class="line"><span class="comment">// 消息逻辑处理</span></span><br><span class="line">log.Printf(<span class="string">&quot;Received a message: %s&quot;</span>, d.Body)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line">log.Printf(<span class="string">&quot; [*] Waiting for messages. To exit press CTRL+C&quot;</span>)</span><br><span class="line">&lt;-forever</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// NewRabbitMQPubSub 订阅模式创建RabbitMQ实例就要设置路由器了</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewRabbitMQPubSub</span><span class="params">(exchangeName <span class="type">string</span>)</span></span> *RabbitMQ &#123;</span><br><span class="line"><span class="comment">//todo 创建RabbitMQ实例</span></span><br><span class="line">rabbitmq := NewRabbitMQ(<span class="string">&quot;&quot;</span>, exchangeName, <span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="keyword">var</span> err <span class="type">error</span></span><br><span class="line"><span class="comment">//todo 获取connection和获取channel</span></span><br><span class="line">rabbitmq.conn, err = amqp.Dial(rabbitmq.Mqurl)</span><br><span class="line">rabbitmq.failOnErr(err, <span class="string">&quot;failed to connect rabbitmq!&quot;</span>)</span><br><span class="line">rabbitmq.channel, err = rabbitmq.conn.Channel()</span><br><span class="line">rabbitmq.failOnErr(err, <span class="string">&quot;failed to open a channel&quot;</span>)</span><br><span class="line"><span class="keyword">return</span> rabbitmq</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// PublishPub 订阅模式生产</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *RabbitMQ)</span></span> PublishPub(message <span class="type">string</span>) &#123;</span><br><span class="line"><span class="comment">//todo 尝试创建交换机</span></span><br><span class="line">err := r.channel.ExchangeDeclare(</span><br><span class="line">r.Exchange,</span><br><span class="line"><span class="string">&quot;fanout&quot;</span>,</span><br><span class="line"><span class="literal">true</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>, <span class="comment">//true表示这个exchange不可以被client用来推送消息，仅用来进行exchange和exchange之间的绑定</span></span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">nil</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">r.failOnErr(err, <span class="string">&quot;Failed to declare an exchange&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//todo 发送消息</span></span><br><span class="line">err = r.channel.Publish(</span><br><span class="line">r.Exchange,</span><br><span class="line"><span class="string">&quot;&quot;</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line">amqp.Publishing&#123;</span><br><span class="line">ContentType: <span class="string">&quot;text/plain&quot;</span>,</span><br><span class="line">Body:        []<span class="type">byte</span>(message),</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ReceiveSub 订阅模式消费端代码</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *RabbitMQ)</span></span> ReceiveSub() &#123;</span><br><span class="line"><span class="comment">//todo 试探性创建交换机</span></span><br><span class="line">err := r.channel.ExchangeDeclare(</span><br><span class="line">r.Exchange,</span><br><span class="line"><span class="string">&quot;fanout&quot;</span>, <span class="comment">//交换机类型</span></span><br><span class="line"><span class="literal">true</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>, <span class="comment">//true表示这个exchange不可以被client用来推送消息，仅用来进行exchange和exchange之间的绑定</span></span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">nil</span>,</span><br><span class="line">)</span><br><span class="line">r.failOnErr(err, <span class="string">&quot;Failed to declare an exchange&quot;</span>)</span><br><span class="line"><span class="comment">//todo 试探性创建队列，这里注意队列名称不要写</span></span><br><span class="line">q, err := r.channel.QueueDeclare(</span><br><span class="line"><span class="string">&quot;&quot;</span>, <span class="comment">//随机生产队列名称</span></span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">true</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">nil</span>,</span><br><span class="line">)</span><br><span class="line">r.failOnErr(err, <span class="string">&quot;Failed to declare a queue&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//todo 绑定队列到 exchange 中</span></span><br><span class="line">err = r.channel.QueueBind(</span><br><span class="line">q.Name,</span><br><span class="line"><span class="string">&quot;&quot;</span>, <span class="comment">//在pub/sub模式下，这里的key要为空</span></span><br><span class="line">r.Exchange,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">nil</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//todo 消费消息</span></span><br><span class="line">message, err := r.channel.Consume(</span><br><span class="line">q.Name,</span><br><span class="line"><span class="string">&quot;&quot;</span>,</span><br><span class="line"><span class="literal">true</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">nil</span>,</span><br><span class="line">)</span><br><span class="line">forever := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">bool</span>)</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> d := <span class="keyword">range</span> message &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;Received a message: %s&quot;</span>, d.Body)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line">fmt.Println(<span class="string">&quot;退出请按 CTRL+C\n&quot;</span>)</span><br><span class="line">&lt;-forever</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// NewRabbitMQRouting 路由模式</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewRabbitMQRouting</span><span class="params">(exchangeName <span class="type">string</span>, routingKey <span class="type">string</span>)</span></span> *RabbitMQ &#123;</span><br><span class="line"><span class="comment">//todo 创建RabbitMQ实例</span></span><br><span class="line">rabbitmq := NewRabbitMQ(<span class="string">&quot;&quot;</span>, exchangeName, routingKey)</span><br><span class="line"><span class="keyword">var</span> err <span class="type">error</span></span><br><span class="line"><span class="comment">//todo 获取connection 获取channel</span></span><br><span class="line">rabbitmq.conn, err = amqp.Dial(rabbitmq.Mqurl)</span><br><span class="line">rabbitmq.failOnErr(err, <span class="string">&quot;failed to connect rabbitmq!&quot;</span>)</span><br><span class="line">rabbitmq.channel, err = rabbitmq.conn.Channel()</span><br><span class="line">rabbitmq.failOnErr(err, <span class="string">&quot;failed to open a channel&quot;</span>)</span><br><span class="line"><span class="keyword">return</span> rabbitmq</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// PublishRouting 路由模式发送消息</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *RabbitMQ)</span></span> PublishRouting(message <span class="type">string</span>) &#123;</span><br><span class="line"><span class="comment">//1.尝试创建交换机</span></span><br><span class="line">err := r.channel.ExchangeDeclare(</span><br><span class="line">r.Exchange,</span><br><span class="line"><span class="string">&quot;direct&quot;</span>,</span><br><span class="line"><span class="literal">true</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">nil</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">r.failOnErr(err, <span class="string">&quot;Failed to declare an exchange&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.发送消息</span></span><br><span class="line">err = r.channel.Publish(</span><br><span class="line">r.Exchange,</span><br><span class="line"><span class="comment">//要设置</span></span><br><span class="line">r.Key,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line">amqp.Publishing&#123;</span><br><span class="line">ContentType: <span class="string">&quot;text/plain&quot;</span>,</span><br><span class="line">Body:        []<span class="type">byte</span>(message),</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ReceiveRouting 路由模式接受消息</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *RabbitMQ)</span></span> ReceiveRouting() &#123;</span><br><span class="line"><span class="comment">// todo 试探性创建交换机</span></span><br><span class="line">err := r.channel.ExchangeDeclare(</span><br><span class="line">r.Exchange,</span><br><span class="line"><span class="comment">//交换机类型</span></span><br><span class="line"><span class="string">&quot;direct&quot;</span>,</span><br><span class="line"><span class="literal">true</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">nil</span>,</span><br><span class="line">)</span><br><span class="line">r.failOnErr(err, <span class="string">&quot;Failed to declare an exchange&quot;</span>)</span><br><span class="line"><span class="comment">// todo 试探性创建队列，这里注意队列名称不要写</span></span><br><span class="line">q, err := r.channel.QueueDeclare(</span><br><span class="line"><span class="string">&quot;&quot;</span>, <span class="comment">//随机生产队列名称</span></span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">true</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">nil</span>,</span><br><span class="line">)</span><br><span class="line">r.failOnErr(err, <span class="string">&quot;Failed to declare a queue&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//绑定队列到 exchange 中</span></span><br><span class="line">err = r.channel.QueueBind(</span><br><span class="line">q.Name,</span><br><span class="line"><span class="comment">//需要绑定key</span></span><br><span class="line">r.Key,</span><br><span class="line">r.Exchange,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">nil</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// todo 消费消息</span></span><br><span class="line">message, err := r.channel.Consume(</span><br><span class="line">q.Name,</span><br><span class="line"><span class="string">&quot;&quot;</span>,</span><br><span class="line"><span class="literal">true</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">nil</span>,</span><br><span class="line">)</span><br><span class="line">forever := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">bool</span>)</span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> d := <span class="keyword">range</span> message &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;Received a message: %s&quot;</span>, d.Body)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line">fmt.Println(<span class="string">&quot;退出请按 CTRL+C\n&quot;</span>)</span><br><span class="line">&lt;-forever</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// NewRabbitMQTopic 话题模式</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewRabbitMQTopic</span><span class="params">(exchangeName <span class="type">string</span>, routingKey <span class="type">string</span>)</span></span> *RabbitMQ &#123;</span><br><span class="line"><span class="comment">// todo 创建RabbitMQ实例</span></span><br><span class="line">rabbitmq := NewRabbitMQ(<span class="string">&quot;&quot;</span>, exchangeName, routingKey)</span><br><span class="line"><span class="keyword">var</span> err <span class="type">error</span></span><br><span class="line"><span class="comment">// todo 获取connection与获取channel</span></span><br><span class="line">rabbitmq.conn, err = amqp.Dial(rabbitmq.Mqurl)</span><br><span class="line">rabbitmq.failOnErr(err, <span class="string">&quot;failed to connect rabbitmq!&quot;</span>)</span><br><span class="line">rabbitmq.channel, err = rabbitmq.conn.Channel()</span><br><span class="line">rabbitmq.failOnErr(err, <span class="string">&quot;failed to open a channel&quot;</span>)</span><br><span class="line"><span class="keyword">return</span> rabbitmq</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// PublishTopic 话题模式发送消息</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *RabbitMQ)</span></span> PublishTopic(message <span class="type">string</span>) &#123;</span><br><span class="line"><span class="comment">// todo 尝试创建交换机</span></span><br><span class="line">err := r.channel.ExchangeDeclare(</span><br><span class="line">r.Exchange,</span><br><span class="line"><span class="string">&quot;topic&quot;</span>,</span><br><span class="line"><span class="literal">true</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">nil</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">r.failOnErr(err, <span class="string">&quot;Failed to declare an exchange&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// todo 发送消息</span></span><br><span class="line">err = r.channel.Publish(</span><br><span class="line">r.Exchange,</span><br><span class="line"><span class="comment">//要设置</span></span><br><span class="line">r.Key,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line">amqp.Publishing&#123;</span><br><span class="line">ContentType: <span class="string">&quot;text/plain&quot;</span>,</span><br><span class="line">Body:        []<span class="type">byte</span>(message),</span><br><span class="line">&#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ReceiveTopic 话题模式接受消息</span></span><br><span class="line"><span class="comment">//要注意key,规则</span></span><br><span class="line"><span class="comment">//其中“*”用于匹配一个单词，“#”用于匹配多个单词（可以是零个）</span></span><br><span class="line"><span class="comment">//匹配 xx.* 表示匹配 xx.hello, 但是 xx.hello.one需要用 xx.#才能匹配到</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(r *RabbitMQ)</span></span> ReceiveTopic() &#123;</span><br><span class="line"><span class="comment">//1.试探性创建交换机</span></span><br><span class="line">err := r.channel.ExchangeDeclare(</span><br><span class="line">r.Exchange,</span><br><span class="line"><span class="comment">//交换机类型</span></span><br><span class="line"><span class="string">&quot;topic&quot;</span>,</span><br><span class="line"><span class="literal">true</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">nil</span>,</span><br><span class="line">)</span><br><span class="line">r.failOnErr(err, <span class="string">&quot;Failed to declare an exch&quot;</span>+</span><br><span class="line"><span class="string">&quot;ange&quot;</span>)</span><br><span class="line"><span class="comment">//2.试探性创建队列，这里注意队列名称不要写</span></span><br><span class="line">q, err := r.channel.QueueDeclare(</span><br><span class="line"><span class="string">&quot;&quot;</span>, <span class="comment">//随机生产队列名称</span></span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">true</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">nil</span>,</span><br><span class="line">)</span><br><span class="line">r.failOnErr(err, <span class="string">&quot;Failed to declare a queue&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//绑定队列到 exchange 中</span></span><br><span class="line">err = r.channel.QueueBind(</span><br><span class="line">q.Name,</span><br><span class="line"><span class="comment">//在pub/sub模式下，这里的key要为空</span></span><br><span class="line">r.Key,</span><br><span class="line">r.Exchange,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">nil</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//消费消息</span></span><br><span class="line">message, err := r.channel.Consume(</span><br><span class="line">q.Name,</span><br><span class="line"><span class="string">&quot;&quot;</span>,</span><br><span class="line"><span class="literal">true</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">false</span>,</span><br><span class="line"><span class="literal">nil</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">forever := <span class="built_in">make</span>(<span class="keyword">chan</span> <span class="type">bool</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="keyword">for</span> d := <span class="keyword">range</span> message &#123;</span><br><span class="line">log.Printf(<span class="string">&quot;Received a message: %s&quot;</span>, d.Body)</span><br><span class="line">&#125;</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="string">&quot;退出请按 CTRL+C\n&quot;</span>)</span><br><span class="line">&lt;-forever</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="各个模式实现">各个模式实现</h3><blockquote><p>因为不确定包的位置</p><p>所以报红简单写一下引入上面的仓库文件就好了</p></blockquote><ol><li>简单模式</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 发布者</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line"><span class="comment">// todo 创建实例并发送消息</span></span><br><span class="line">rabbitmq := RabbitMQ.NewRabbitMQSimple(<span class="string">&quot;Simple&quot;</span>)</span><br><span class="line">rabbitmq.PublishSimple(<span class="string">&quot;Hello world!&quot;</span>)</span><br><span class="line">fmt.Println(<span class="string">&quot;发送成功！&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 接受者</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">rabbitmq := RabbitMQ.NewRabbitMQSimple(<span class="string">&quot;Simple&quot;</span>) <span class="comment">// 名字要一样</span></span><br><span class="line">rabbitmq.ConsumeSimple()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>工作模式</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 发布者</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">rabbitmq := RabbitMQ.NewRabbitMQSimple(<span class="string">&quot;Simple&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt;= <span class="number">100</span>; i++ &#123;</span><br><span class="line">rabbitmq.PublishSimple(<span class="string">&quot;Hello world!&quot;</span> + strconv.Itoa(i))</span><br><span class="line">time.Sleep(<span class="number">1</span> * time.Second)</span><br><span class="line">fmt.Println(i)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 接受者1</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">rabbitmq := RabbitMQ.NewRabbitMQSimple(<span class="string">&quot;Simple&quot;</span>)</span><br><span class="line">rabbitmq.ConsumeSimple()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 接受者2</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">rabbitmq := RabbitMQ.NewRabbitMQSimple(<span class="string">&quot;Simple&quot;</span>)</span><br><span class="line">rabbitmq.ConsumeSimple()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>发布模式</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 发布者</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">rabbitmq := RabbitMQ.NewRabbitMQPubSub(<span class="string">&quot;newProduct&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">100</span>; i++ &#123;</span><br><span class="line">rabbitmq.PublishPub(<span class="string">&quot;订阅模式生产第&quot;</span> + strconv.Itoa(i) + <span class="string">&quot;条&quot;</span> + <span class="string">&quot;数据&quot;</span>)</span><br><span class="line">fmt.Println(<span class="string">&quot;订阅模式生产第&quot;</span> + strconv.Itoa(i) + <span class="string">&quot;条&quot;</span> + <span class="string">&quot;数据&quot;</span>)</span><br><span class="line">time.Sleep(<span class="number">1</span> * time.Second)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 订阅者1</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">rabbitmq := RabbitMQ.NewRabbitMQPubSub(<span class="string">&quot;newProduct&quot;</span>)</span><br><span class="line">rabbitmq.ReceiveSub()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 订阅者2</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">rabbitmq := RabbitMQ.NewRabbitMQPubSub(<span class="string">&quot;newProduct&quot;</span>)</span><br><span class="line">rabbitmq.ReceiveSub()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>路由模式</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 发布者</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">One := RabbitMQ.NewRabbitMQRouting(<span class="string">&quot;ex&quot;</span>, <span class="string">&quot;one&quot;</span>)</span><br><span class="line">Two := RabbitMQ.NewRabbitMQRouting(<span class="string">&quot;ex&quot;</span>, <span class="string">&quot;two&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt;= <span class="number">10</span>; i++ &#123;</span><br><span class="line">One.PublishRouting(<span class="string">&quot;Hello one!&quot;</span> + strconv.Itoa(i))</span><br><span class="line">Two.PublishRouting(<span class="string">&quot;Hello Two!&quot;</span> + strconv.Itoa(i))</span><br><span class="line">time.Sleep(<span class="number">1</span> * time.Second)</span><br><span class="line">fmt.Println(i)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 接受者</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">One := RabbitMQ.NewRabbitMQRouting(<span class="string">&quot;ex&quot;</span>, <span class="string">&quot;one&quot;</span>)</span><br><span class="line">One.ReceiveRouting()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 接受者</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">Two := RabbitMQ.NewRabbitMQRouting(<span class="string">&quot;ex&quot;</span>, <span class="string">&quot;two&quot;</span>)</span><br><span class="line">Two.ReceiveRouting()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>话题模式</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 发布者</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">One := RabbitMQ.NewRabbitMQTopic(<span class="string">&quot;exTopic&quot;</span>, <span class="string">&quot;topic.one&quot;</span>)</span><br><span class="line">Two := RabbitMQ.NewRabbitMQTopic(<span class="string">&quot;exTopic&quot;</span>, <span class="string">&quot;topic.two&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt;= <span class="number">10</span>; i++ &#123;</span><br><span class="line">One.PublishTopic(<span class="string">&quot;Hello topic one!&quot;</span> + strconv.Itoa(i))</span><br><span class="line">Two.PublishTopic(<span class="string">&quot;Hello topic Two!&quot;</span> + strconv.Itoa(i))</span><br><span class="line">time.Sleep(<span class="number">1</span> * time.Second)</span><br><span class="line">fmt.Println(i)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 接受者1</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">One := RabbitMQ.NewRabbitMQTopic(<span class="string">&quot;exTopic&quot;</span>, <span class="string">&quot;#&quot;</span>) <span class="comment">// # 表示一个或者多个词语</span></span><br><span class="line">One.ReceiveTopic()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 接受者2</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">Two := RabbitMQ.NewRabbitMQTopic(<span class="string">&quot;exTopic&quot;</span>, <span class="string">&quot;*.two&quot;</span>) <span class="comment">// 表示多个词语</span></span><br><span class="line">Two.ReceiveTopic()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Pygame实现小球躲避</title>
      <link href="/posts/72f74028.html"/>
      <url>/posts/72f74028.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言：">前言：</h2><p>这学期的Python课，要写代码是真的多…</p><p>课程实验一是一个五子棋，但是发了代码。</p><p>至于代码质量嘛～  我直接全部根据自己划分的结构改了</p><p>这里吐槽下 (真的发下来的代码 惨不忍睹 )</p><p>我改了快4个小时 后面功能不想加了…</p><p>这次是自己写嘛～ 那就写个想样的。</p><h2 id="结构划分">结构划分</h2><p>我分为了</p><ul><li>run  入口</li><li>setting  设置</li><li>main 主逻辑</li><li>utils 仓库</li></ul><p>其实我想的是：全部设置到页面上去，但是偷懒～ （期末要去弄绩点）</p><p>直接开始贴代码</p><h3 id="run-py"><a href="http://run.py">run.py</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> main <span class="keyword">import</span> main</span><br><span class="line"></span><br><span class="line">banner = <span class="string">&quot;&quot;&quot; ____        _ _ _____          </span></span><br><span class="line"><span class="string">| __ )  __ _| | | ____|___  ___ </span></span><br><span class="line"><span class="string">|  _ \ / _` | | |  _| / __|/ __|</span></span><br><span class="line"><span class="string">| |_) | (_| | | | |___\__ \ (__ </span></span><br><span class="line"><span class="string">|____/ \__,_|_|_|_____|___/\___|</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(banner)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Author: HengYi&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[*] 简单：输入 1&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[*] 普通：输入 2&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;[*] 困难：输入 3&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        num = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;请选择难度：&quot;</span>))</span><br><span class="line">        <span class="keyword">if</span> num <span class="keyword">in</span> [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]:</span><br><span class="line">            main(num)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;无法处理～&quot;</span>)</span><br><span class="line">            sys.exit()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">&quot;无法处理～&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="setting-py"><a href="http://setting.py">setting.py</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">WIDTH = <span class="number">900</span>  <span class="comment"># 宽</span></span><br><span class="line">HEIGHT = <span class="number">600</span>  <span class="comment"># 高</span></span><br><span class="line">SCORE = <span class="number">0</span>  <span class="comment"># 分数</span></span><br><span class="line">TIME = <span class="number">0</span>  <span class="comment"># 时间</span></span><br><span class="line">FIRST_STEP = <span class="number">10</span>  <span class="comment"># 到达第二关时间</span></span><br><span class="line">SECOND_STEP = <span class="number">20</span>  <span class="comment"># 到达第三关时间</span></span><br><span class="line">FPS = <span class="number">60</span>  <span class="comment"># 刷新率</span></span><br><span class="line">BG_COLOR = (<span class="number">255</span>, <span class="number">239</span>, <span class="number">213</span>)  <span class="comment"># 背景颜色</span></span><br></pre></td></tr></table></figure><h3 id="utils-py"><a href="http://utils.py">utils.py</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> pygame</span><br><span class="line"><span class="keyword">from</span> setting <span class="keyword">import</span> FIRST_STEP, SECOND_STEP, BG_COLOR, WIDTH, HEIGHT</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Note: 根据难度生成对应的小球</span></span><br><span class="line"><span class="comment"># Time: 2021/12/17 8:35 下午</span></span><br><span class="line"><span class="comment"># Author: HengYi</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ballNum</span>(<span class="params">ladderNum, time</span>):</span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> FIRST_STEP &lt;= time &lt; SECOND_STEP:</span><br><span class="line">        index = <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> SECOND_STEP &lt;= time:</span><br><span class="line">        index = <span class="number">2</span></span><br><span class="line">    numMap = [</span><br><span class="line">        [<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>],</span><br><span class="line">        [<span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>],</span><br><span class="line">        [<span class="number">4</span>, <span class="number">6</span>, <span class="number">7</span>]</span><br><span class="line">    ]</span><br><span class="line">    <span class="keyword">return</span> numMap[ladderNum - <span class="number">1</span>][index]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Note: 根据小球个数设置防止误触时间</span></span><br><span class="line"><span class="comment"># Time: 2021/12/17 8:43 下午</span></span><br><span class="line"><span class="comment"># Author: HengYi</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">protectTime</span>(<span class="params">ballsNum</span>):</span><br><span class="line">    <span class="keyword">if</span> ballsNum <span class="keyword">in</span> [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>]:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Note: 根据时间设置小球大小</span></span><br><span class="line"><span class="comment"># Time: 2021/12/17 8:58 下午</span></span><br><span class="line"><span class="comment"># Author: HengYi</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">howBigBallIs</span>(<span class="params">ladderNum, time</span>):</span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> FIRST_STEP &lt;= time &lt; SECOND_STEP:</span><br><span class="line">        index = <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> SECOND_STEP &lt;= time:</span><br><span class="line">        index = <span class="number">2</span></span><br><span class="line">    numMap = [</span><br><span class="line">        [<span class="number">25</span>, <span class="number">20</span>, <span class="number">15</span>],</span><br><span class="line">        [<span class="number">24</span>, <span class="number">20</span>, <span class="number">16</span>],</span><br><span class="line">        [<span class="number">26</span>, <span class="number">20</span>, <span class="number">16</span>]</span><br><span class="line">    ]</span><br><span class="line">    <span class="keyword">return</span> numMap[ladderNum - <span class="number">1</span>][index]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Note: 根据时间难度计算球体的大小和速度</span></span><br><span class="line"><span class="comment"># Time: 2021/12/17 9:15 下午</span></span><br><span class="line"><span class="comment"># Author: HengYi</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">judgeDiff</span>(<span class="params">ladderNum, time</span>):</span><br><span class="line">    index = <span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> FIRST_STEP &lt;= time &lt; SECOND_STEP:</span><br><span class="line">        index = <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> SECOND_STEP &lt;= time:</span><br><span class="line">        index = <span class="number">2</span></span><br><span class="line">    numMap = [</span><br><span class="line">        [(<span class="number">30</span>, <span class="number">30</span>, <span class="number">3.5</span>, <span class="number">3.5</span>), (<span class="number">28</span>, <span class="number">28</span>, <span class="number">6</span>, <span class="number">6</span>), (<span class="number">26</span>, <span class="number">26</span>, <span class="number">9</span>, <span class="number">9</span>)],</span><br><span class="line">        [(<span class="number">30</span>, <span class="number">30</span>, <span class="number">4.5</span>, <span class="number">4.5</span>), (<span class="number">27</span>, <span class="number">27</span>, <span class="number">8</span>, <span class="number">8</span>), (<span class="number">25</span>, <span class="number">25</span>, <span class="number">10</span>, <span class="number">10</span>)],</span><br><span class="line">        [(<span class="number">30</span>, <span class="number">30</span>, <span class="number">5</span>, <span class="number">5</span>), (<span class="number">26</span>, <span class="number">26</span>, <span class="number">9</span>, <span class="number">9</span>), (<span class="number">24</span>, <span class="number">24</span>, <span class="number">12</span>, <span class="number">12</span>)]</span><br><span class="line">    ]</span><br><span class="line">    <span class="keyword">return</span> numMap[ladderNum - <span class="number">1</span>][index]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Note: 创建平台窗口</span></span><br><span class="line"><span class="comment"># Time: 2021/12/17 2:58 下午</span></span><br><span class="line"><span class="comment"># Author: HengYi</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">makeGameBg</span>(<span class="params">width, height</span>):</span><br><span class="line">    pygame.init()</span><br><span class="line">    screen = pygame.display.set_mode((width, height))  <span class="comment"># 设置窗口大小</span></span><br><span class="line">    pygame.display.set_caption(<span class="string">&#x27;小球逃逃逃&#x27;</span>)  <span class="comment"># 设置窗口标题</span></span><br><span class="line">    background = pygame.Surface(screen.get_size())  <span class="comment"># 填充背景</span></span><br><span class="line">    <span class="keyword">return</span> screen, background</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Note: 添加小球产生的事件</span></span><br><span class="line"><span class="comment"># Time: 2021/12/17 3:06 下午</span></span><br><span class="line"><span class="comment"># Author: HengYi</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">ballCome</span>():</span><br><span class="line">    COME_AGAIN = pygame.USEREVENT</span><br><span class="line">    pygame.time.set_timer(COME_AGAIN, <span class="number">1000</span>)</span><br><span class="line">    <span class="keyword">return</span> COME_AGAIN</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Note: 提示字体</span></span><br><span class="line"><span class="comment"># Time: 2021/12/17 3:11 下午</span></span><br><span class="line"><span class="comment"># Author: HengYi</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">makeTips</span>(<span class="params">content, size, color, position, screen</span>):</span><br><span class="line">    font = pygame.font.SysFont(<span class="string">&#x27;arial&#x27;</span>, size)</span><br><span class="line">    text_sf = font.render(content, <span class="literal">True</span>, color, BG_COLOR)</span><br><span class="line">    screen.blit(text_sf, position)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Note: 字体展示</span></span><br><span class="line"><span class="comment"># Time: 2021/12/18 4:20 下午</span></span><br><span class="line"><span class="comment"># Author: HengYi</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">draw</span>(<span class="params">screen, SCORE, TIME</span>):</span><br><span class="line">    screen.fill(BG_COLOR)  <span class="comment"># 防止出现拖影</span></span><br><span class="line">    makeTips(<span class="string">&#x27;SCORE: &#x27;</span>, <span class="number">30</span>, (<span class="number">34</span>, <span class="number">139</span>, <span class="number">34</span>), (<span class="number">5</span>, <span class="number">40</span>), screen)</span><br><span class="line">    makeTips(<span class="string">&#x27;TIME(s): &#x27;</span>, <span class="number">30</span>, (<span class="number">64</span>, <span class="number">158</span>, <span class="number">255</span>), (<span class="number">5</span>, <span class="number">75</span>), screen)</span><br><span class="line">    makeTips(<span class="built_in">str</span>(<span class="built_in">int</span>(SCORE)), <span class="number">30</span>, (<span class="number">34</span>, <span class="number">139</span>, <span class="number">34</span>), (<span class="number">135</span>, <span class="number">40</span>), screen)</span><br><span class="line">    makeTips(<span class="built_in">str</span>(<span class="built_in">int</span>(TIME)), <span class="number">30</span>, (<span class="number">64</span>, <span class="number">158</span>, <span class="number">255</span>), (<span class="number">135</span>, <span class="number">75</span>), screen)</span><br><span class="line">    <span class="keyword">if</span> TIME <span class="keyword">in</span> [FIRST_STEP, FIRST_STEP + <span class="number">1</span>]:</span><br><span class="line">        makeTips(<span class="string">&#x27;Ops! LEVEL_2~&#x27;</span>, <span class="number">30</span>, (<span class="number">60</span>, <span class="number">179</span>, <span class="number">113</span>), (WIDTH / <span class="number">2</span> - <span class="number">30</span> * <span class="number">3.5</span>, HEIGHT / <span class="number">2</span> - <span class="number">50</span>), screen)</span><br><span class="line">    <span class="keyword">elif</span> TIME <span class="keyword">in</span> [SECOND_STEP, SECOND_STEP + <span class="number">1</span>]:</span><br><span class="line">        makeTips(<span class="string">&#x27;Congratulations! LEVEL_3&#x27;</span>, <span class="number">25</span>, (<span class="number">60</span>, <span class="number">179</span>, <span class="number">113</span>), (WIDTH / <span class="number">2</span> - <span class="number">25</span> * <span class="number">6.25</span>, HEIGHT / <span class="number">2</span> - <span class="number">50</span>), screen)</span><br></pre></td></tr></table></figure><h3 id="Main-py"><a href="http://Main.py">Main.py</a></h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> setting <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> utils <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Ball</span>(pygame.sprite.Sprite):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, *keys</span>):  <span class="comment"># 创建球</span></span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.timeSec = <span class="number">0</span></span><br><span class="line">        w, h, xs, ys = keys[<span class="number">0</span>]</span><br><span class="line">        self.w = w</span><br><span class="line">        self.h = h</span><br><span class="line">        self.xs = xs</span><br><span class="line">        self.ys = ys</span><br><span class="line">        x = random.randint(<span class="number">0</span>, WIDTH - self.w)</span><br><span class="line">        y = random.randint(<span class="number">0</span>, HEIGHT - self.h)</span><br><span class="line">        self.rect = pygame.Rect(x, y, self.w * <span class="number">2</span>, self.h * <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self, screen, *args</span>):</span><br><span class="line">        <span class="comment"># 根据设置的速度进行运动</span></span><br><span class="line">        self.rect.x += self.xs</span><br><span class="line">        self.rect.y += self.ys</span><br><span class="line">        <span class="comment"># 当遇到墙的时候进行反弹</span></span><br><span class="line">        <span class="keyword">if</span> self.rect.x &gt; WIDTH - self.w <span class="keyword">or</span> self.rect.x &lt; <span class="number">0</span>:</span><br><span class="line">            self.xs = -self.xs</span><br><span class="line">        <span class="keyword">elif</span> self.rect.y &gt; HEIGHT - self.h <span class="keyword">or</span> self.rect.y &lt; <span class="number">0</span>:</span><br><span class="line">            self.ys = -self.ys</span><br><span class="line">        <span class="keyword">if</span> self.timeSec &lt;= args[<span class="number">0</span>]:</span><br><span class="line">            pygame.draw.rect(screen, (<span class="number">100</span>, <span class="number">149</span>, <span class="number">237</span>), [self.rect.x, self.rect.y, self.rect.w, self.rect.h], <span class="number">2</span>)</span><br><span class="line">        pygame.draw.circle(screen, (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), [self.rect.center[<span class="number">0</span>], self.rect.center[<span class="number">1</span>]], self.w)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">timerAdd</span>(<span class="params">self</span>):</span><br><span class="line">        self.timeSec += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> self.timeSec</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__del__</span>(<span class="params">self</span>):  <span class="comment"># 销毁的时候</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Mouse</span>(pygame.sprite.Sprite):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, *keys</span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.size = keys[<span class="number">0</span>]  <span class="comment"># 设置圆的大小</span></span><br><span class="line">        self.rect = pygame.Rect(WIDTH / <span class="number">2</span> - self.size, HEIGHT / <span class="number">2</span> - self.size, self.size * <span class="number">2</span>, self.size * <span class="number">2</span>)  <span class="comment"># 实则是一个正方形</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">update</span>(<span class="params">self, screen, *args</span>):</span><br><span class="line">        <span class="keyword">if</span> pygame.mouse.get_focused():  <span class="comment"># 如果存在于页面内</span></span><br><span class="line">            self.rect.center = pygame.mouse.get_pos()</span><br><span class="line">        <span class="comment"># 限制球不能半身跑到边框上</span></span><br><span class="line">        <span class="keyword">if</span> self.rect.x &lt; <span class="number">0</span>:</span><br><span class="line">            self.rect.x = <span class="number">0</span></span><br><span class="line">        <span class="keyword">elif</span> self.rect.x &gt; WIDTH - self.rect.w:</span><br><span class="line">            self.rect.x = WIDTH - self.rect.w</span><br><span class="line">        <span class="keyword">elif</span> self.rect.y &lt; <span class="number">0</span>:</span><br><span class="line">            self.rect.y = <span class="number">0</span></span><br><span class="line">        <span class="keyword">elif</span> self.rect.y &gt; HEIGHT - self.rect.h:</span><br><span class="line">            self.rect.y = HEIGHT - self.rect.h</span><br><span class="line">        pygame.draw.circle(screen, (<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), [self.rect.center[<span class="number">0</span>], self.rect.center[<span class="number">1</span>]], self.size)  <span class="comment"># 根据圆心画圆</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>(<span class="params">ladderNum</span>):</span><br><span class="line">    <span class="comment"># -------------------画布初始化-----------------------</span></span><br><span class="line">    screen, background = makeGameBg(WIDTH, HEIGHT)</span><br><span class="line">    clock = pygame.time.Clock()</span><br><span class="line">    comeAgain = ballCome()</span><br><span class="line">    <span class="comment"># --------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># --------------------对象存储-------------------------</span></span><br><span class="line">    <span class="keyword">global</span> TIME, SCORE</span><br><span class="line">    balls = pygame.sprite.Group(Ball(judgeDiff(ladderNum, TIME)))</span><br><span class="line">    mouse = Mouse(howBigBallIs(ladderNum, TIME))</span><br><span class="line">    mouseObject = pygame.sprite.Group(mouse)</span><br><span class="line">    <span class="comment"># --------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># ---------------------游戏主程序-----------------------</span></span><br><span class="line">    RUNNING = <span class="literal">True</span></span><br><span class="line">    SHOWINFO = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        draw(screen, SCORE, TIME)  <span class="comment"># 动态添加文字</span></span><br><span class="line">        <span class="keyword">if</span> SHOWINFO:</span><br><span class="line">            makeTips(<span class="string">&#x27;Please Press The Space To Restart&#x27;</span>, <span class="number">30</span>, (<span class="number">255</span>, <span class="number">99</span>, <span class="number">71</span>), (WIDTH / <span class="number">2</span> - <span class="number">240</span>, HEIGHT / <span class="number">2</span> - <span class="number">50</span>),</span><br><span class="line">                     screen)</span><br><span class="line">        <span class="keyword">for</span> each <span class="keyword">in</span> balls:</span><br><span class="line">            <span class="keyword">if</span> pygame.sprite.spritecollide(each, mouseObject, <span class="literal">False</span>, collided=<span class="literal">None</span>) <span class="keyword">and</span> each.timeSec &gt; <span class="number">2</span>:</span><br><span class="line">                RUNNING = <span class="literal">False</span></span><br><span class="line">                SHOWINFO = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">for</span> event <span class="keyword">in</span> pygame.event.get():</span><br><span class="line">            <span class="keyword">if</span> event.<span class="built_in">type</span> == pygame.QUIT:</span><br><span class="line">                pygame.quit()</span><br><span class="line">                exit(<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">elif</span> event.<span class="built_in">type</span> == pygame.KEYDOWN:  <span class="comment"># 重新开始</span></span><br><span class="line">                <span class="keyword">if</span> event.key == pygame.K_SPACE:</span><br><span class="line">                    SCORE = <span class="number">0</span></span><br><span class="line">                    TIME = <span class="number">0</span></span><br><span class="line">                    <span class="keyword">for</span> each <span class="keyword">in</span> balls.sprites():</span><br><span class="line">                        balls.remove(each)</span><br><span class="line">                    SHOWINFO = <span class="literal">False</span></span><br><span class="line">                    RUNNING = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">elif</span> event.<span class="built_in">type</span> == comeAgain <span class="keyword">and</span> RUNNING:  <span class="comment"># 每秒增加</span></span><br><span class="line">                TIME += <span class="number">1</span></span><br><span class="line">                ballsNum = ballNum(ladderNum, TIME)</span><br><span class="line">                diff = judgeDiff(ladderNum, TIME)</span><br><span class="line">                SCORE += (ballsNum * diff[<span class="number">3</span>])</span><br><span class="line">                <span class="keyword">if</span> TIME <span class="keyword">in</span> [<span class="number">10</span>, <span class="number">20</span>]:</span><br><span class="line">                    mouseObject.remove(mouseObject.sprites()[<span class="number">0</span>])</span><br><span class="line">                    mouseObject.add(Mouse(howBigBallIs(ladderNum, TIME)))</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(balls) &lt; ballsNum:</span><br><span class="line">                    balls.add(Ball(diff))</span><br><span class="line">                <span class="keyword">for</span> each <span class="keyword">in</span> balls:  <span class="comment"># 防止误触的保护罩</span></span><br><span class="line">                    each.timerAdd()</span><br><span class="line">        balls.update(screen, protectTime(ballNum(ladderNum, TIME)))</span><br><span class="line">        mouseObject.update(screen)</span><br><span class="line">        clock.tick(FPS)</span><br><span class="line">        pygame.display.update()  <span class="comment"># 刷新</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;游戏结束&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="总结">总结</h2><h3 id="效果图：">效果图：</h3><img src="/img/ballResult.webp" alt="效果图" style="zoom:40%;" /><h3 id="如何食用：">如何食用：</h3><p>把上面4处代码Copy下来在用<code>run.py</code>启动</p><p>里面设计的 如何判断；如何重来；… (我觉得我的变量名字已经够清楚了🐶)</p><p>欢迎与我交流，讨论。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Waline 评论系统部署日志</title>
      <link href="/posts/ca7e6ba4.html"/>
      <url>/posts/ca7e6ba4.html</url>
      
        <content type="html"><![CDATA[<div class="note danger simple"><p>本文大部分内容已作废，请直接查看<a href="https://waline.js.org/"><strong>官方文档</strong></a></p></div><p>本文首发在<a href="https://www.yuque.com/ccknbc/blog/20/"><strong>语雀</strong></a><br>自动同步更新至<a href="https://blog.ccknbc.cc/posts/waline-commens-system-deployment-logs/"><strong>CC 的部落格</strong></a><br><strong>本文仅作为官方文档的补充，若有错误，还望指正</strong></p><hr><p>Waline - 一款从 <a href="https://valine.js.org">Valine</a> 衍生的带后端评论系统。可以将 Waline 等价成 With backend Valine.</p><h2 id="特性">特性</h2><ul><li>快速</li><li>真·安全</li><li>Markdown 语法支持</li><li>轻量易用</li><li>免费部署</li><li>多种部署部署方式和存储服务支持，每列选择一项多达 84 种（可以更多）部署方式任君选择<table><thead><tr><th></th><th>Waline</th><th></th></tr></thead><tbody><tr><td><strong>客户端脚本</strong></td><td><strong>服务端部署</strong></td><td><strong>数据存储</strong></td></tr><tr><td><a href="https://waline.js.org/"><strong>@waline/client</strong></a></td><td>Vercel</td><td>LeanCloud</td></tr><tr><td><a href="https://minivaline.js.org/"><strong>MiniValine</strong></a></td><td>CloudBase</td><td>CloudBase</td></tr><tr><td><a href="https://github.com/innc11/AprilComment"><strong>AprilComment</strong></a></td><td>Docker</td><td>MongoDB</td></tr><tr><td></td><td>独立部署</td><td>MySQL</td></tr><tr><td></td><td></td><td>SQLite</td></tr><tr><td></td><td></td><td>PostgreSQL</td></tr><tr><td></td><td></td><td>GitHub</td></tr></tbody></table></li></ul><p>对于想免费使用的用户， <code>Vercel</code>  + <code>LeanCloud（国际版）</code>  是不错的选择，不过<code>Deta</code>一个服务就能解决所有问题而且还快点，如果你主要面向对象为大陆用户，使用 <code>CloudBase</code>  部署也是个不错的选择，它在海外表现也没那么差，或者您仅使用 <code>CloudBase</code>  来做数据存储</p><div class="note warning simple"><p>如果您使用 <code>Vercel</code> + <code>LeanCloud</code> ，并且使用 <code>Vercel</code>  发送评论通知，您不必担心 LeanCloud 流控问题，并且之前使用过 Valine 或者部署过 <code>Valine-Admin</code>  项目的可以直接拿来用；对于评论转移，官方提供了<a href="https://waline.js.org/migration/tool.html">迁移助手</a>供您使用，不用担心之前评论丢失的问题</p></div><h2 id="Todo">Todo</h2><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>微信通知</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>QQ 通知</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>Telegram 通知</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>Akismet</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>文章统计</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>多语言同步</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>自定义语言支持</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>登录支持</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>评论管理</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>评论删除</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>其它数据库支持</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>基于 IP 的发布评论频率限制</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>基于关键词的评论过滤限制</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>IP 黑名单</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>重复内容检测</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>CloudBase 腾讯云开发部署支持</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>社交登录</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>AWS</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>置顶评论</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>评论赞踩</p>            </div><div class='checkbox blue'><input type="checkbox" />            <p>其它…</p>            </div><div class="note warning simple"><p>目前社交登录仅支持 <code>GitHub</code> ， 未来会支持更多平台</p></div><hr><h2 id="Vercel-LeanCloud-部署">Vercel + LeanCloud 部署</h2><p>这部分请前往<a href="https://waline.js.org/quick-start.html">官方文档</a>查看，不过需要注意的是如果你的 <code>GitHub</code>  账号主邮箱是 <code>QQ</code>  邮箱的话建议更改为其他邮箱（毕竟他们认为 QQ 邮箱是垃圾邮箱）再去注册 Vercel（或者你可以选择给客服发一封邮件让他们帮忙解锁你的账号），环境变量配置部分官方文档也写了，这里不再赘述<br>如果您之前用过 Valine，那么关于 LeanCloud 部分你就不用做什么了，数据兼容，拿到那几个 <code>key</code>  即可</p><h3 id="配置项">配置项</h3><p>这个可直接参考官方文档按需进行配置即可，因为目前云开发因众所周知的原因不支持连接 <code>Telegram</code>  服务器，所以如果您要配置电报新评论通知，请使用 Vercel 进行配置，不过因为目前没有异步通知，加上反垃圾检测等功能，发布评论可能需要很长时间，这个我使用了 LeanCloud 来继续帮我发送通知（反正我也没什么评论，流控问题第二天补发评论也不是不可）</p><div class="note warning simple"><p>对于邮件通知部分，目前的设定是，对于新评论，如果博主配置了 QQ/微信/Telegram 通知中任意一种或多种，则邮件通知将会取消，而对于回复（子评论），博主和被回复者（如果填了邮箱的话）均可收到邮件通知</p></div><p>我目前使用的 Hexo Butterfly 主题已经从 3.5.0 beta3 版本起内置了 Waline 评论系统，如果您使用老版本主题请升级，或者根据您所用版本的 Valine 模板 pug 来照葫芦画瓢，根据官方配置进行对应修改，主题中 option 为可选配置，万一将来增加了某些配置，主题不必为此升级, bg 为主题配置项<br>这里注意一下 serverURL 以及环境变量里的 SITE_URL 网址最后的斜杠因为作者没做兼容，所以不要带上 / ，导致跳转不到对应评论界面<br>客户端脚本里可以通过 <code>langMode.admin</code>  这个配置自定义角标的文案,例如：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">waline</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="title class_">Waline</span> = <span class="built_in">require</span>(<span class="string">&quot;@waline/client&quot;</span>);</span><br><span class="line">  <span class="keyword">new</span> <span class="title class_">Waline</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>: <span class="string">&quot;#waline-comment&quot;</span>,</span><br><span class="line">    <span class="attr">serverURL</span>: <span class="string">&quot;https://waline.vercel.app&quot;</span>,</span><br><span class="line">    <span class="attr">path</span>: <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">pathname</span>,</span><br><span class="line">    <span class="attr">visitor</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">lang</span>: location.<span class="property">pathname</span>.<span class="title function_">startsWith</span>(<span class="string">&quot;/en/&quot;</span>) ? <span class="string">&quot;en&quot;</span> : <span class="string">&quot;zh-CN&quot;</span>,</span><br><span class="line">    <span class="attr">langMode</span>: &#123;</span><br><span class="line">      <span class="attr">admin</span>: location.<span class="property">pathname</span>.<span class="title function_">startsWith</span>(<span class="string">&quot;/en/&quot;</span>)</span><br><span class="line">        ? <span class="string">&quot;Administrator&quot;</span></span><br><span class="line">        : <span class="string">&quot;可爱的管理员&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对于同主题在主题配置里找到 <code>waline</code>  配置项相关内容</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># waline - A simple comment system with backend support fork from Valine</span></span><br><span class="line"><span class="comment"># https://waline.js.org/</span></span><br><span class="line"><span class="attr">waline:</span></span><br><span class="line">  <span class="attr">serverURL:</span> <span class="string">https://waline.ccknbc.ml</span> <span class="comment"># Waline server address url</span></span><br><span class="line">  <span class="attr">avatar:</span> <span class="string">monsterid</span> <span class="comment"># gravatar style https://zh-tw.gravatar.com/site/implement/images/#default-image</span></span><br><span class="line">  <span class="attr">bg:</span> <span class="comment"># waline background</span></span><br><span class="line">  <span class="attr">emojiCDN:</span> <span class="string">https://cdn.jsdelivr.net/gh/GamerNoTitle/ValineCDN@master/</span></span><br><span class="line">  <span class="attr">visitor:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">option:</span></span><br><span class="line">    <span class="attr">pageSize:</span> <span class="number">10</span></span><br><span class="line">    <span class="attr">requiredFields:</span> <span class="string">mail</span></span><br><span class="line">    <span class="comment"># anonymous: false</span></span><br><span class="line">    <span class="attr">placeholder:</span></span><br><span class="line">    <span class="attr">avatarCDN:</span> <span class="string">https://sdn.geekzu.org/avatar/</span></span><br><span class="line">    <span class="comment">#https://valinecdn.bili33.top/</span></span><br><span class="line">    <span class="attr">langMode:</span></span><br><span class="line">      <span class="attr">admin:</span> <span class="string">博主兼管理员</span></span><br><span class="line">      <span class="attr">nick:</span> <span class="string">昵称(选填)</span></span><br><span class="line">      <span class="attr">mail:</span> <span class="string">邮箱(必填)</span></span><br><span class="line">      <span class="attr">link:</span> <span class="string">网址(选填)</span></span><br><span class="line">      <span class="attr">sofa:</span> <span class="string">这里冷冷清清的，快来留下脚印吧！</span></span><br><span class="line">  <span class="comment"># 如果你查看了源码，会发现还有这个可以配置 copyRight: false，但不建议大家设为 false 啦，保留也没什么的（没错，我不要脸）</span></span><br></pre></td></tr></table></figure><p><s>还有就是可能有人会觉得默认邮件通知模板太单调，想和 Valine-Admin 一样切换模板，其实有这个配置的，只是目前的方法是写在环境变量中，而环境变量限制长度（大小），或者说是不适合这种方式配置，如果要改的话可以先查看</s><a href="https://github.com/lizheming/waline/issues/106"><s>issues/106</s></a><s>相关内容，或者等以后优化再说；当然如果你的评论不是很多，并且之前配置过 Valine-Admin，那么你仍然可以使用 LeanCloud 来做异步发送通知，关闭默认的通知配置，或者使用 js 推送</s><br>关于邮件模板大家可查看<a href="https://waline.js.org/server/notification.html#%E9%80%9A%E7%9F%A5%E6%A8%A1%E6%9D%BF">官方文档</a>相关章节，或者使用<a href="#%E9%82%AE%E4%BB%B6%E9%80%9A%E7%9F%A5%E6%A8%A1%E6%9D%BF">附录提供的邮件通知模板</a>，也提交了 PR</p><p><a href="https://waline.js.org/server/basic.html#%E8%AF%84%E8%AE%BA-hooks">评论 Hooks</a>，可以根据官方的例子自己做一些配置，相比于其他，违禁词，屏蔽 IP 等配置可以说是人性化了，但万一配置不好一些正常评论可能也会被判定为垃圾内容，所以我推荐使用人工审核功能，不过这边不得不说另一个评论系统 <a href="https://twikoo.js.org/">Twikoo</a>，支持查看自己审核中的评论，评论置顶，点赞等，不过我想 Waline 将来也能实现，毕竟 Flag 立那了</p><p>图片上传 uploadImage 部分配置 理论上是可以适配任何图床，配置例子可查看 <a href="https://github.com/lizheming/waline/issues/123">issues/123</a>，当然内置了一个默认图床，开箱即用</p><p>表情配置和之前 Valine 是一样的，同主题还可使用 <code>walien.json</code>  的配置方式，具体可查看<a href="https://butterfly.js.org/posts/ceeb73f/#%E8%A9%95%E8%AB%96">主题文档</a></p><h2 id="CloudBase-云开发部署">CloudBase 云开发部署</h2><h3 id="一键部署">一键部署</h3><p>一键脚本部署可以查看<a href="https://waline.js.org/server/cloudbase.html">官方文档</a>，我删了之后就没成功过<br><img src="https://cdn.nlark.com/yuque/0/2021/png/8391407/1612362992018-14b2a225-27d6-4996-948b-e746d26bb2e0.png#averageHue=%23605f5f&amp;height=322&amp;id=FOuRW&amp;name=image.png&amp;originHeight=644&amp;originWidth=1011&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=48650&amp;status=done&amp;style=none&amp;title=&amp;width=505.5" alt="image.png"><br>截至文档最新更新日期，这个已被修复（不过 tcb-starter 那个链接还没改所以还是失败），不过我只能说作者非常不细心，毕竟能一天发十几个版本，详见 <a href="https://github.com/lizheming/waline/commit/d87d3092a34fd6b2b7f0b1c72bd95ad784a086e7">commit</a>，他还是把链接协议头多打了一个 h ,所以请<a href="https://console.cloud.tencent.com/tcb/env/index?action=CreateAndDeployCloudBaseProject&amp;appUrl=https%3A%2F%2Fgithub.com%2Fwalinejs%2Ftcb-starter&amp;branch=master&amp;appName=waline">点击这里</a>一键部署<br>嗯，后来修复了，期待接下来的开发</p><hr><p>警告内容来自 <a href="https://twikoo.js.org/quick-start.html">Twikoo 官方文档</a> 建议您直接查看 <a href="#%E6%89%8B%E5%8A%A8%E9%83%A8%E7%BD%B2">手动部署部分</a>！！！</p><div class="note warning simple"><p>一键部署虽然方便，但是仅支持按量计费环境——也就是说，<strong>一键部署的环境，当免费资源用尽后，将会产生费用</strong>。且按量计费环境无法切换为包年包月环境。免费额度数据库读操作数只有 500 次 / 天，<strong>无法支撑 Twikoo 的运行需求</strong>。Twikoo 建议您<a href="#%E6%89%8B%E5%8A%A8%E9%83%A8%E7%BD%B2">手动部署</a>以节约成本。</p></div><p><img src="https://cdn.nlark.com/yuque/0/2021/png/8391407/1610953378969-db93161e-24d3-4a48-8934-5566774b94d2.png#averageHue=%23ebcf90&amp;height=204&amp;id=BbUHK&amp;name=image.png&amp;originHeight=204&amp;originWidth=423&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=11059&amp;status=done&amp;style=none&amp;title=&amp;width=423" alt="image.png"><br>对于新用户或者说没有创建过按量计费环境的用户会显示如下内容，记得勾选开启免费资源<br><img src="https://cdn.nlark.com/yuque/0/2021/png/8391407/1610873567827-825cde85-7c99-4c5a-95e0-44c0966784cb.png#averageHue=%23fbfbfb&amp;height=632&amp;id=v1Ort&amp;name=image.png&amp;originHeight=632&amp;originWidth=1006&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=46404&amp;status=done&amp;style=none&amp;title=&amp;width=1006" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/8391407/1612859364523-006d98ba-bd5c-4868-878f-9c9ac158d836.png#averageHue=%23fdfdfd&amp;height=237&amp;id=EOKkv&amp;name=image.png&amp;originHeight=473&amp;originWidth=999&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=25755&amp;status=done&amp;style=none&amp;title=&amp;width=499.5" alt="image.png"></p><p>为了日后升级的方便，不管您是否使用了 Vercel 部署，您都可以 fork <a href="https://github.com/ccknbc-actions/waline">我的仓库</a> ，稍加配置即可完成自动部署更新</p><h3 id="手动部署">手动部署</h3><p>首先前往<a href="https://cloud.tencent.com/act/pro/cloudbase01"><strong>腾讯云的活动区域</strong></a>，注册/登陆后往下滑，找到新用户专享云开发标准型（基础版 1）资源套餐，0 元购买一个免费包年包月环境</p><hr><p>没错，这个环境不错吧<br><img src="https://cdn.nlark.com/yuque/0/2021/png/8391407/1610870670315-08e65148-3819-48fb-878e-03fdb0c9ab64.png#averageHue=%23e4c69f&amp;height=536&amp;id=DWotB&amp;name=image.png&amp;originHeight=536&amp;originWidth=1493&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=52310&amp;status=done&amp;style=none&amp;title=&amp;width=1493" alt="image.png"><br>按照提示购买后稍等几分钟，<a href="https://console.cloud.tencent.com/tcb/env/index">在这个界面可查看您所购买的环境</a><br><img src="https://cdn.nlark.com/yuque/0/2021/png/8391407/1610870083481-8e4cad1a-c70a-4cad-9192-11be8003241c.png#averageHue=%23fcfbfb&amp;height=233&amp;id=Q9Z3p&amp;name=image.png&amp;originHeight=233&amp;originWidth=523&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=10168&amp;status=done&amp;style=none&amp;title=&amp;width=523" alt="image.png"><br>有能力的其实可以看一下 Vercel <a href="#%E8%87%AA%E5%8A%A8%E5%8D%87%E7%BA%A7">自动升级</a>和 TCB<a href="#%E8%87%AA%E5%8A%A8%E5%8D%87%E7%BA%A7-1">自动升级</a>部分，间接实现一键部署，自动更新<br><a href="https://console.cloud.tencent.com/tcb/scf/index">点击云函数</a>，新建云函数，函数内存选择 128M，名称随意，例如 Waline，其他默认,单击进入下一步<br><img src="https://cdn.nlark.com/yuque/0/2021/png/8391407/1612359288449-66b53150-2146-4ec9-aa08-910b99aebd1b.png#averageHue=%2328231a&amp;height=448&amp;id=gqDSy&amp;name=image.png&amp;originHeight=895&amp;originWidth=1917&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=127338&amp;status=done&amp;style=none&amp;title=&amp;width=958.5" alt="image.png"><br>下图中的函数代码部分填入以下代码<br><img src="https://cdn.nlark.com/yuque/0/2021/png/8391407/1612359460424-4b8cf9b4-2ef4-4758-92f6-09ae040a91ea.png#averageHue=%23fcfcfb&amp;height=396&amp;id=QsO9K&amp;name=image.png&amp;originHeight=791&amp;originWidth=688&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=43150&amp;status=done&amp;style=none&amp;title=&amp;width=344" alt="image.png"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Tencent is pleased to support the open source community by making CloudBaseFramework - 云原生一体化部署工具 available.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Copyright (C) 2020 THL A29 Limited, a Tencent company.  All rights reserved.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Please refer to license text included with this package for license details.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span>.<span class="property">main</span> = <span class="keyword">async</span> (event, context) =&gt; &#123;</span><br><span class="line">  context.<span class="property">callbackWaitsForEmptyEventLoop</span> = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">const</span> entry = (<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> result = <span class="built_in">require</span>(<span class="string">&quot;./app.js&quot;</span>);</span><br><span class="line">    <span class="comment">// const app = require(&#x27;express&#x27;)();</span></span><br><span class="line">    <span class="comment">// result = app.use(result);</span></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;)();</span><br><span class="line">  <span class="keyword">const</span> serverless = <span class="built_in">require</span>(<span class="string">&quot;serverless-http&quot;</span>);</span><br><span class="line">  <span class="keyword">let</span> app = entry;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// support for async load app</span></span><br><span class="line">  <span class="keyword">if</span> (entry &amp;&amp; entry.<span class="property">tcbGetApp</span> &amp;&amp; <span class="keyword">typeof</span> entry.<span class="property">tcbGetApp</span> === <span class="string">&quot;function&quot;</span>) &#123;</span><br><span class="line">    app = <span class="keyword">await</span> entry.<span class="title function_">tcbGetApp</span>();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">serverless</span>(app, &#123;</span><br><span class="line">    <span class="attr">binary</span>: [</span><br><span class="line">      <span class="string">&quot;application/javascript&quot;</span>,</span><br><span class="line">      <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">      <span class="string">&quot;application/octet-stream&quot;</span>,</span><br><span class="line">      <span class="string">&quot;application/xml&quot;</span>,</span><br><span class="line">      <span class="string">&quot;font/eot&quot;</span>,</span><br><span class="line">      <span class="string">&quot;font/opentype&quot;</span>,</span><br><span class="line">      <span class="string">&quot;font/otf&quot;</span>,</span><br><span class="line">      <span class="string">&quot;image/*&quot;</span>,</span><br><span class="line">      <span class="string">&quot;video/*&quot;</span>,</span><br><span class="line">      <span class="string">&quot;audio/*&quot;</span>,</span><br><span class="line">      <span class="string">&quot;text/comma-separated-values&quot;</span>,</span><br><span class="line">      <span class="string">&quot;text/css&quot;</span>,</span><br><span class="line">      <span class="string">&quot;text/javascript&quot;</span>,</span><br><span class="line">      <span class="string">&quot;text/plain&quot;</span>,</span><br><span class="line">      <span class="string">&quot;text/text&quot;</span>,</span><br><span class="line">      <span class="string">&quot;text/xml&quot;</span>,</span><br><span class="line">    ],</span><br><span class="line">  &#125;)(event, context);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>点击对应的云函数，进入在线编辑页面，按照<a href="https://github.com/walinejs/tcb-starter">模板仓库</a>里的文件，新建对应的文件，并复制粘贴对应的内容即可<br><img src="https://cdn.nlark.com/yuque/0/2021/png/8391407/1612360652232-9eb2ad2b-bebe-4964-bb5f-75e2f9946d25.png#averageHue=%23f6f6f6&amp;height=283&amp;id=t6ZUG&amp;name=image.png&amp;originHeight=566&amp;originWidth=1171&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=59625&amp;status=done&amp;style=none&amp;title=&amp;width=585.5" alt="image.png"><br>注意点击<strong>保存并安装依赖</strong>，可能会没有反应一会儿，然后等待转圈圈部署完毕即可<br><img src="https://cdn.nlark.com/yuque/0/2021/png/8391407/1612360855940-241970ec-5c18-4bc8-9168-9fd945deb761.png#averageHue=%23f5e7e7&amp;height=71&amp;id=PlC1K&amp;name=image.png&amp;originHeight=142&amp;originWidth=264&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=4012&amp;status=done&amp;style=none&amp;title=&amp;width=132" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2021/png/8391407/1612361085479-f39b6b2b-2293-4685-882e-9e20aa611dea.png#averageHue=%23ccf1dd&amp;height=32&amp;id=qWtmj&amp;name=image.png&amp;originHeight=64&amp;originWidth=251&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=3262&amp;status=done&amp;style=none&amp;title=&amp;width=125.5" alt="image.png"><br>当然还没有结束，我们需要点击 <code>环境 --&gt; HTTP 访问服务</code> （<a href="https://console.cloud.tencent.com/tcb/env/access">点击直达</a>)，如果你想绑定自定义域名可以照图中绑定，记得先申请一下证书，如果你想要 HTTPS（这个可能花的时间有点长）<br><img src="https://cdn.nlark.com/yuque/0/2021/png/8391407/1612361294908-3ef584b5-5cbc-43e5-b744-cda357057ec0.png#averageHue=%23fdfdfd&amp;height=336&amp;id=Y8wtR&amp;name=image.png&amp;originHeight=671&amp;originWidth=1596&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=62417&amp;status=done&amp;style=none&amp;title=&amp;width=798" alt="image.png"><br>点击新建，新建触发路径，点击保存即可，注意路径最后没有 / ，等待构建完成后你就可通过对应的链接访问 demo 页面了，这个链接就是上面提到的 <code>serverURL</code> ，例如我的 <a href="https://tcb.ccknbc.cc/waline">https://tcb.ccknbc.cc/waline</a><br><img src="https://cdn.nlark.com/yuque/0/2021/png/8391407/1612361631129-fecd45a5-f694-4154-8707-9976eb10adb5.png#averageHue=%23fcfcfc&amp;height=268&amp;id=EJKha&amp;name=image.png&amp;originHeight=535&amp;originWidth=753&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=29976&amp;status=done&amp;style=none&amp;title=&amp;width=376.5" alt="image.png"><br>然后我们需要设置<a href="https://console.cloud.tencent.com/tcb/env/safety"> WEB 安全域名</a>，把你的域名放入白名单即可（本地测试的话端口也要对应上哦）</p><h2 id="如何升级">如何升级</h2><h3 id="Vercel">Vercel</h3><h4 id="手动升级">手动升级</h4><p>找到 Vercel 帮你在创建的仓库，叫 <code>waline</code>  啦，编辑 <code>package.json</code>  中依赖版本号即可完成升级，版本号以 <code>npm</code> <img src="https://img.shields.io/npm/v/@waline/vercel?color=critical&amp;logo=npm&amp;style=flat-square#height=20&amp;id=ZBPqj&amp;originHeight=20&amp;originWidth=105&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=&amp;width=105" alt="">  为准，因为 GitHub 由于考虑到电报机器人自动推送消息过于频繁影响到群友，会延迟推送</p><h4 id="自动升级">自动升级</h4><p>其实原理还是一样的，因为 Vercel 会监控仓库文件的变化来帮我们自动部署，那么我们要做的就是自动更改版本号，这里你可以用 <code>Github Actions</code>  实现，定时每隔半小时自动更新并 push，但这样似乎有点浪费资源，所以不怎么推荐，而我们这个仓库通常都是公开的（私有也没关系）<br>首先你需要安装一个应用<a href="https://github.com/marketplace/renovate">Renovate</a>,选择免费版计划即可，他会帮我们监控所用依赖的版本更新变化，并为提交一个 <code>PR</code> ，我们要做的只是合并 PR 而已，但手动合并之前也讲过，多少有点不方便，自动合并我们知道有打标签自动合并，GitHub Actions 工具人自动合并，这些大家搜以下关键词就好，但这个应用它本身实际上支持自动合并，查看<a href="https://docs.renovatebot.com/configuration-options/#automerge">官方文档</a>发现在 <code>renovate.json</code>  中配置即可，示例代码如下，其中代理人是为了通知更新的作用，与 PR 同理，但也可删除此段配置，同样的 PR 也可关闭通知静默自动更新。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;extends&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;config:base&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;assignees&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;CCKNBC&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;separateMinorPatch&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;packageRules&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;updateTypes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;minor&quot;</span><span class="punctuation">,</span> <span class="string">&quot;patch&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;automerge&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;automergeType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;branch&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>我目前还是用的默认的提交 PR 自动合并的方式，如果你是公开仓库，还可以使用<a href="https://github.com/marketplace/mergify">Mergify</a>，安装完成后他能它免费帮我们自动合并公开仓库的 PR，我们设定一个条件，比如 PR 提交作者为 renovate，就自动帮我们点击合并，并删除多余分支，当然这些都需要配置，这里具体会在另一篇文档中讲到</p><div class="note info simple"><p>以上两个应用你可以选择安装到全部仓库，或者只安装到选择的仓库</p></div><p>如果你想懒的话可以先删除你现有的名为 Waine 的仓库，再 fork <a href="https://github.com/ccknbc-actions/waline">我的仓库</a>，然后去你的 Vercel 解绑之前的仓库，再绑定你 fork 的仓库，最后点一下重新部署即可<br>但是如果你没用 tcb 就把 <code>.github/workflows/Update Waline TCB.yml</code>   里的文件删掉，因为涉及到自动部署更新云开发，还有环境变量问题，如果没设定会导致报错</p><h3 id="CloudBase">CloudBase</h3><hr><h4 id="一键部署-2">一键部署</h4><p>就是点击<a href="https://console.cloud.tencent.com/tcb/apps/index">我的应用</a>找到 Waline 点击部署即可<br><img src="https://cdn.nlark.com/yuque/0/2021/png/8391407/1612711217029-250d0b1a-75d1-4a7c-9f4c-8a9413ab51fa.png#averageHue=%2389cec5&amp;height=409&amp;id=jhuJB&amp;name=image.png&amp;originHeight=818&amp;originWidth=1814&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=86907&amp;status=done&amp;style=none&amp;title=&amp;width=907" alt="image.png"></p><h4 id="手动部署-2">手动部署</h4><h5 id="手动升级-2">手动升级</h5><p>就是去<a href="https://github.com/walinejs/tcb-starter">仓库</a>复制粘贴修改过的文件的事情了，如果没有文件改动就点击 <code>保存并安装依赖</code>  即可（知道在哪了吧）</p><h5 id="自动升级-2">自动升级</h5><p>原理在上面讲了，结合 <a href="#%E8%87%AA%E5%8A%A8%E5%8D%87%E7%BA%A7">Vercel 自动升级</a>部分查看，这部分其实可以作为上面的手动部署，或者自动部署？<br>你可以 fork <a href="https://github.com/ccknbc-actions/waline">我的仓库</a> 进行更改，和上面提到的原理差不多，只是用到了 Actions（如果你之前没接触过这些，建议使用 Vercel 部署或者上面的一键部署，也比较方便），在合并 PR 后帮我们自动升级部署到云开发，解释一下几个密钥，您需要在 仓库的 <code>settings/secrets/actions</code> 中配置，组织的话可以把常用到的密钥添加为组织密钥<br>，比如 ID KEY 等</p><table><thead><tr><th>变量名</th><th>变量解释</th></tr></thead><tbody><tr><td>SECRETID</td><td>API 访问密钥 ID，可<a href="https://console.cloud.tencent.com/cam/capi">点击这里</a>新建/查看</td></tr><tr><td>SECRETKEY</td><td>API 访问密钥 KEY，可<a href="https://console.cloud.tencent.com/cam/capi">点击这里</a>新建/查看</td></tr><tr><td>TCBFUNNAME（没什么好加密的，就叫 waline 算了）</td><td>你想要新建/已有函数的名称，比如 <code>Waline</code></td></tr><tr><td>TCBENVID</td><td>环境 ID，可<a href="https://console.cloud.tencent.com/tcb/env/overview">点击这里</a>或<a href="https://console.cloud.tencent.com/tcb/env/index">这里</a>查看，地址栏后也会显示，反正就是很多地方都在上面点一下就能看到</td></tr></tbody></table><h2 id="附录">附录</h2><h3 id="邮件通知模板">邮件通知模板</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mailSubject</span>: <span class="string">&#x27;&#123;&#123;parent.nick&#125;&#125;，您在 &#123;&#123;site.name&#125;&#125; 上发表的评论,收到了来自 &#123;&#123;self.nick&#125;&#125; 的回复&#x27;</span>,</span><br><span class="line"><span class="attr">mailSubjectAdmin</span>: <span class="string">&#x27;&#123;&#123;site.name&#125;&#125; 上收到了来自 &#123;&#123;self.nick&#125;&#125; 的留言&#x27;</span>,</span><br><span class="line"><span class="attr">mailTemplate</span>: <span class="string">&#x27;&lt;head&gt;&lt;base target=&quot;_blank&quot;/&gt;&lt;style id=&quot;scrollbar&quot;type=&quot;text/css&quot;&gt;::-webkit-scrollbar&#123;width:0!important&#125;pre&#123;white-space:pre-wrap!important;word-wrap:break-word!important;*white-space:normal!important&#125;pre&#123;white-space:pre-wrap!important;word-wrap:break-word!important;*white-space:normal!important&#125;#letter img&#123;max-width:300px&#125;&lt;/style&gt;&lt;style id=&quot;from-wrapstyle&quot;type=&quot;text/css&quot;&gt;#form-wrap&#123;overflow:hidden;height:447px;position:relative;top:0px;transition:all 1s ease-in-out.3s;z-index:0&#125;&lt;/style&gt;&lt;style id=&quot;from-wraphoverstyle&quot;type=&quot;text/css&quot;&gt;#form-wrap:hover&#123;height:1300px;top:-200px&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div style=&quot;width: 530px;margin: 20px auto 0;height: 1000px;&quot;&gt;&lt;div id=&quot;form-wrap&quot;&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Akilarlxh/Valine-Admin@v1.0/source/img/before.png&quot;alt=&quot;before&quot;style=&quot;position: absolute;bottom: 126px;left: 0px;background-repeat: no-repeat;width: 530px;height: 317px;z-index:-100&quot;&gt;&lt;div style=&quot;position: relative;overflow: visible;height: 1500px;width: 500px;margin: 0px auto;transition: all 1s ease-in-out .3s;padding-top:200px;&quot;&lt;form&gt;&lt;div style=&quot;background: white;width: 95%;max-width: 800px;margin: auto auto;border-radius: 5px;border: 1px solid;overflow: hidden;-webkit-box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.12);box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.18);&quot;&gt;&lt;img style=&quot;width:100%;overflow: hidden;&quot;src=&quot;https://area.sinaapp.com/bingImg&quot;/&gt;&lt;div style=&quot;padding: 5px 20px;&quot;&gt;&lt;br&gt;&lt;div&gt;&lt;h3 style=&quot;text-decoration: none; color: #8fbc8f;&quot;&gt;&#123;&#123;parent.nick&#125;&#125;，见信安：&lt;/h3&gt;&lt;/div&gt;&lt;br&gt;&lt;div id=&quot;letter&quot;style=&quot;overflow:auto;height:300px;width:100%;display:block;word-break: break-all;word-wrap: break-word;&quot;&gt;&lt;p style=&quot;display: inline-block;&quot;&gt;您在&lt;a style=&quot;text-decoration: none;color: #8fbc8f&quot;target=&quot;_blank&quot;href=&quot;&#123;&#123;site.postUrl&#125;&#125; display: inline-block;&quot;&gt;&#123;&#123;site.name&#125;&#125;&lt;/a&gt;上发表的评论:&lt;/p&gt;&lt;div style=&quot;border-bottom: #ddd 1px solid;border-left: #ddd 1px solid;padding-bottom: 20px;background-color: #eee;margin: 15px 0px;padding-left: 20px;padding-right: 20px;border-top: #ddd 1px solid;border-right: #ddd 1px solid;padding-top: 20px;font-family: &quot;Arial&quot;, &quot;Microsoft YaHei&quot; , &quot;黑体&quot; , &quot;宋体&quot; , sans-serif;&quot;&gt;&#123;&#123;parent.comment | safe&#125;&#125;&lt;/div&gt;&lt;p&gt;收到了来自&#123;&#123;self.nick&#125;&#125;的回复：&lt;/p&gt;&lt;div style=&quot;border-bottom: #ddd 1px solid;border-left: #ddd 1px solid;padding-bottom: 20px;background-color: #eee;margin: 15px 0px;padding-left: 20px;padding-right: 20px;border-top: #ddd 1px solid;border-right: #ddd 1px solid;padding-top: 20px;font-family: &quot;Arial&quot;, &quot;Microsoft YaHei&quot; , &quot;黑体&quot; , &quot;宋体&quot; , sans-serif;&quot;&gt;&#123;&#123;self.comment | safe&#125;&#125;&lt;/div&gt;&lt;/div&gt;&lt;br&gt;&lt;div style=&quot;text-align: center;margin-top: 40px;&quot;&gt;&lt;img src=&quot;https://ae01.alicdn.com/kf/U0968ee80fd5c4f05a02bdda9709b041eE.png&quot;alt=&quot;hr&quot;style=&quot;width:100%; margin:5px auto 5px auto; display: block;&quot;/&gt;&lt;a style=&quot;text-transform: uppercase;text-decoration: none;font-size: 14px;border: 2px solid #ace0f9;color: #FFFFFF;padding: 10px;display: inline-block;margin: 10px auto 0;background-color: #8fbc8f;&quot;target=&quot;_blank&quot;href=&quot;&#123;&#123;site.postUrl&#125;&#125;&quot;&gt;&#123;&#123;site.name&#125;&#125;｜请您签收~&lt;/a&gt;&lt;/div&gt;&lt;p style=&quot;font-size: 12px;text-align: center;color: #999;&quot;&gt;自动书记人偶竭诚为您服务！&lt;br&gt;©2020 - 2021 &lt;a style=&quot;text-decoration:none; color:#8fbc8f&quot;href=&quot;&#123;&#123;site.url&#125;&#125;&quot;&gt;&#123;&#123;site.name&#125;&#125;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/form&gt;&lt;/div&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Akilarlxh/Valine-Admin@v1.0/source/img/after.png&quot;alt=&quot;after&quot;style=&quot;      position: absolute;bottom: -2px;left: 0;background-repeat: no-repeat;width: 530px;height: 259px;z-index:100&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&#x27;</span>,</span><br><span class="line"><span class="attr">mailTemplateAdmin</span>: <span class="string">&#x27;&lt;head&gt;&lt;base target=&quot;_blank&quot;/&gt;&lt;style id=&quot;scrollbar&quot;type=&quot;text/css&quot;&gt;::-webkit-scrollbar&#123;width:0!important&#125;pre&#123;white-space:pre-wrap!important;word-wrap:break-word!important;*white-space:normal!important&#125;#letter img&#123;max-width:300px&#125;&lt;/style&gt;&lt;style id=&quot;from-wrapstyle&quot;type=&quot;text/css&quot;&gt;#form-wrap&#123;overflow:hidden;height:447px;position:relative;top:0px;transition:all 1s ease-in-out.3s;z-index:0&#125;&lt;/style&gt;&lt;style id=&quot;from-wraphoverstyle&quot;type=&quot;text/css&quot;&gt;#form-wrap:hover&#123;height:1300px;top:-200px&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div style=&quot;width: 530px;margin: 20px auto 0;height: 1000px;&quot;&gt;&lt;div id=&quot;form-wrap&quot;&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Akilarlxh/Valine-Admin@v1.0/source/img/before.png&quot;alt=&quot;before&quot;style=&quot;position: absolute;bottom: 126px;left: 0px;background-repeat: no-repeat;width: 530px;height: 317px;z-index:-100&quot;&gt;&lt;div style=&quot;position: relative;overflow: visible;height: 1500px;width: 500px;margin: 0px auto;transition: all 1s ease-in-out .3s;padding-top:200px;&quot;&gt;&lt;form&gt;&lt;div style=&quot;background: white;width: 95%;max-width: 800px;margin: auto auto;border-radius: 5px;border: 1px solid;overflow: hidden;-webkit-box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.12);box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.18);&quot;&gt;&lt;img style=&quot;width:100%;overflow: hidden;&quot;src=&quot;https://area.sinaapp.com/bingImg&quot;/&gt;&lt;div style=&quot;padding: 5px 20px;&quot;&gt;&lt;br&gt;&lt;div&gt;&lt;h3 style=&quot;text-decoration: none; color: #8fbc8f;&quot;&gt;来自&#123;&#123;self.nick&#125;&#125;的留言:&lt;/h3&gt;&lt;/div&gt;&lt;br&gt;&lt;br&gt;&lt;div id=&quot;letter&quot;style=&quot;overflow:auto;height:300px;width:100%;display:block;word-break: break-all;word-wrap: break-word;&quot;&gt;&lt;div style=&quot;border-bottom: #ddd 1px solid;border-left: #ddd 1px solid;padding-bottom: 20px;background-color: #eee;margin: 15px 0px;padding-left: 20px;padding-right: 20px;border-top: #ddd 1px solid;border-right: #ddd 1px solid;padding-top: 20px;font-family: &quot;Arial&quot;, &quot;Microsoft YaHei&quot; , &quot;黑体&quot; , &quot;宋体&quot; , sans-serif;&quot;&gt;&#123;&#123;self.comment | safe&#125;&#125;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align: center;margin-top: 40px;&quot;&gt;&lt;img src=&quot;https://ae01.alicdn.com/kf/U0968ee80fd5c4f05a02bdda9709b041eE.png&quot;alt=&quot;hr&quot;style=&quot;width:100%; margin:5px auto 5px auto; display: block;&quot;/&gt;&lt;a style=&quot;text-transform: uppercase;text-decoration: none;font-size: 14px;border: 2px solid #ace0f9;color: #FFFFFF;padding: 10px;display: inline-block;margin: 10px auto 0;background-color: #8fbc8f;&quot;target=&quot;_blank&quot;href=&quot;&#123;&#123;site.postUrl&#125;&#125;&quot;&gt;&#123;&#123;site.name&#125;&#125;｜请您过目~&lt;/a&gt;&lt;/div&gt;&lt;p style=&quot;font-size: 12px;text-align: center;color: #999;&quot;&gt;©2020 - 2021 &lt;a style=&quot;text-decoration:none; color:#8fbc8f&quot;href=&quot;&#123;&#123;site.url&#125;&#125;&quot;&gt;&#123;&#123;site.name&#125;&#125;&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/form&gt;&lt;/div&gt;&lt;img src=&quot;https://cdn.jsdelivr.net/gh/Akilarlxh/Valine-Admin@v1.0/source/img/after.png&quot;alt=&quot;after&quot;style=&quot;      position: absolute;bottom: -2px;left: 0;background-repeat: no-repeat;width: 530px;height: 259px;z-index:100&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="下载">下载</h3><p><a href="https://file.nmb.show/down.php/4ca88b8fe0729c213cd3a425f87d2f51.rar">邮件通知模板下载</a>（包含 Waline/Valine/Twikoo），您可以下载后根据官方文档提及的变量自行修改<code>index.js</code>相关内容，以上代码仅作参考，对于本文未涉及到的其他内容，请自行查看官方文档，如有错误，欢迎指正，谢谢！</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Uptime 免费网站存活监控</title>
      <link href="/posts/bcd0b73b.html"/>
      <url>/posts/bcd0b73b.html</url>
      
        <content type="html"><![CDATA[<p><img src="https://cdn.jsdelivr.net/gh/laugh0608/CDN/img/20200820100301.png#height=633&amp;id=EaR2t&amp;originHeight=633&amp;originWidth=1341&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=&amp;width=1341" alt=""></p><h2 id="前言">前言</h2><p>对于静态托管网站来说，如果你放在不同的仓库，或者是托管服务商，那么有一个必要的网站存活监控是非常重要的，实时监控哪个仓库存活，哪个仓库无法访问，以便及时调整自己的线路。</p><p>UptimeRobot 是一个免费提供网站存活监控的服务商，免费版本可以同时监控 50 个站点，最高频率可以达到 5 分钟一次，而且还可以自己生成公共页面以便访问，还可以绑定自定义域名。</p><h2 id="正文">正文</h2><p>网站地址：<a href="https://uptimerobot.com/">https://uptimerobot.com/</a></p><p>注册什么的就不用说了吧</p><h2 id="创建监视器">创建监视器</h2><p>注册完成之后登录会直接进入控制台</p><p><img src="https://cdn.jsdelivr.net/gh/laugh0608/CDN/img/20200820104637.png#height=631&amp;id=PAyAO&amp;originHeight=631&amp;originWidth=1343&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=&amp;width=1343" alt=""></p><p>创建新的监视器</p><p><img src="https://cdn.jsdelivr.net/gh/laugh0608/CDN/img/20200820104721.png#height=499&amp;id=XndR7&amp;originHeight=499&amp;originWidth=808&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=&amp;width=808" alt=""></p><p>选择你要监视的方式，<code>https</code> 是通过访问的形式，<code>ping</code> 就是 ping 你的地址，<code>port</code> 就是监视端口</p><p><img src="https://cdn.jsdelivr.net/gh/laugh0608/CDN/img/20200820105159.jpg#height=623&amp;id=IHlIy&amp;originHeight=623&amp;originWidth=788&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=&amp;width=788" alt=""></p><p>这就创建好一个监视器啦</p><h2 id="生成公共页面">生成公共页面</h2><p>我们要访问监视器总不能每次都登录吧，Uptime 贴心的准备了可以生成公共页面，还可以绑定自定义域名哦</p><p><img src="https://cdn.jsdelivr.net/gh/laugh0608/CDN/img/20200820105358.png#height=456&amp;id=VlheG&amp;originHeight=456&amp;originWidth=1144&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=&amp;width=1144" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/laugh0608/CDN/img/20200820105432.png#height=155&amp;id=Aneak&amp;originHeight=155&amp;originWidth=767&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=&amp;width=767" alt=""></p><p><img src="https://cdn.jsdelivr.net/gh/laugh0608/CDN/img/20200820105544.png#height=269&amp;id=PqV7E&amp;originHeight=269&amp;originWidth=536&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=&amp;width=536" alt=""></p><p>选择要显示的监视器，是全部显示还是只显示选中</p><p><img src="https://cdn.jsdelivr.net/gh/laugh0608/CDN/img/20200820105833.png#height=621&amp;id=aKuiD&amp;originHeight=621&amp;originWidth=516&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=&amp;width=516" alt=""></p><p>创建完成之后就可以使用你的自定义域名来访问啦，或者使用默认域名</p><p><img src="https://cdn.jsdelivr.net/gh/laugh0608/CDN/img/20200820105936.png#height=283&amp;id=OFtky&amp;originHeight=283&amp;originWidth=734&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=&amp;width=734" alt=""></p><p>在这里进行访问</p><p>这里是我的例子：<a href="https://status.dabailuobo.com/">大白萝卜の网站监控</a></p><h2 id="API">API</h2><p>如果你不喜欢他生成的页面，或者想要自己部署，那么你可以使用别人制作的主题，地址：</p><ul><li><a href="https://github.com/Flexiston/uptime-status">https://github.com/Flexiston/uptime-status</a></li><li><a href="https://github.com/zykjofficial/uptime-status">https://github.com/zykjofficial/uptime-status</a></li></ul><p>两个一样，随便选一个</p><p>fork 到自己仓库后，修改相关配置即可</p><p><img src="https://cdn.jsdelivr.net/gh/laugh0608/CDN/img/20200820110242.png#height=383&amp;id=Hhnem&amp;originHeight=383&amp;originWidth=738&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;status=done&amp;style=none&amp;title=&amp;width=738" alt=""></p><p>三种 APIkey 自己按照需要任选其一生成即可，在配置文件中进行修改，之后自己部署完毕就 OK 啦</p><p>大佬的例子：<a href="https://status.flexiston.com/">Flexiston  的网站状态</a>   <a href="https://status.zykjofficial.top/">卓越科技-  的网站状态</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
